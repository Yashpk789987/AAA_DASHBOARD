{"version":3,"sources":["baseurl.js","components/Alert.js","components/WorkSheets/AddCategory/index.js","components/WorkSheets/AddSubCategory/index.js","encoded_data.js","components/WorkSheets/AddQuestion/index.js","components/WorkSheets/ShowSubCategoryById.js","components/WorkSheets/AllSubCategory/index.js","components/WorkSheets/index.js","components/PdfManaging/UploadPdf/index.js","components/PdfManaging/Set_Demo_Pdf/index.js","components/PdfManaging/index.js","components/UpdateAuthorize.js","components/Test/EditTest/EditQuestion.js","components/Test/EditTest/AllQuestionsByTestId.js","components/Test/EditTest/UpdateTest.js","components/Test/EditTest/index.js","components/Test/TestStatus/index.js","components/Test/TestHistory/index.js","components/Test/MakeTest/index.js","components/Test/AddQuestion/index.js","components/Test/ShowTest/index.js","components/Test/MakeTestWrapper/index.js","components/Test/ShowTestById/index.js","components/Test/AllTest/index.js","components/Test/Results/index.js","components/Test/Set_Demo_Test/index.js","components/Test/index.js","components/ManageStudents/UpdateStudentPermissions/index.js","components/Update_Payment_Status.js","components/ManageStudents/ManageCashPayment.js","components/ManageStudents/index.js","components/Enquiry/index.js","components/DashBoard/AdsUploader.js","components/DashBoard/index.js","components/Login.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["baseurl","endurl","Alert","state","visible","showModal","_this","setState","handleOk","e","props","makeShowModalFalse","handleCancel","this","react_default","a","createElement","modal","title","onOk","onCancel","message","children","React","Component","AddCategory","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","UploadingData","handleChange","event","defineProperty","target","name","value","handleSubmit","english_name","modal_message","fetch","concat","method","headers","Content-Type","body","JSON","stringify","then","res","json","data","hindi_name","catch","err","console","log","formLayout","modal_title","formItemLayout","labelCol","span","wrapperCol","buttonItemLayout","offset","es_form","layout","Item","assign","label","input","placeholder","onChange","es_button","type","loading","onClick","Alert_Alert","Fragment","Option","Select","AddSubCategory","handleFile","logo","files","handleSelectChange","category_id","formData","FormData","append","all_categories","_this2","_this3","length","spin","es_select","showSearch","style","width","optionFilterProp","filterOption","option","toLowerCase","indexOf","map","category","_id","key","for","paddingTop","id","opacity","position","zIndex","encoded_data","js_code","TextArea","Input","AddQuestion","validateForm","_this$state","sub_category_id","english_text","correct_option_index","options","i","validateOptions","found","replace","handleOptionChange","index","persist","object","custome_url","sendData","hindi_text","pic","handleAppendButton","newOption","question_id","all_sub_categories","action","encType","sub_category","AddQuestion_Option","size","row","col","rows","float","paddingRight","icon","AddQuestion_QuestionOption","max","min","QuestionOption","_this4","_this5","ShowSubCategoryById","categories","uploading_logo","handleChooseImage","handleUpdateLogo","alert","image_url","handleDataUpdate","match","params","padding","paddingLeft","labelInValue","defaultValue","item","ShowSubCategoryById_Option","height","src","alt","AllSubCategoryComponent","loading_categories","loading_subcategories","subcategories","HashRouter","basename","process","paddingBottom","AllSubCategory_Option","es_list","itemLayout","dataSource","renderItem","Meta","avatar","shape","Link","marginRight","to","url","AllSubCategory","localStorage","getItem","Switch","Route","exact","path","render","AllSubCategory_AllSubCategoryComponent","ShowSubCategoryById_ShowSubCategoryById","Redirect","pathname","SubMenu","Menu","Content","Layout","Sider","WorkSheets","background","menu","theme","mode","borderRight","AddCategory_AddCategory","AddSubCategory_AddSubCategory","AddQuestion_AddQuestion","AllSubCategory_AllSubCategory","UploadPdf","pdf","parseInt","fileprogress","axios","request","onUploadProgress","p","loaded","total","UploadPdf_Option","progress","percent","status","PdfManaging","PdfManaging_Sider","PdfManaging_SubMenu","PdfManaging_Content","UploadPdf_UploadPdf","UpdateAuthorize","update","updating","code","password","obj","EditQuestion","option_english_text","_Object$assign2","pic_url","question","test_question_id","test_options","className","EditQuestion_TextArea","EditQuestion_QuestionOption","removeOption","option_hindi_text","Panel","Collapse","AllQuestionsByTestId","test_questions","test_question_array","load_test","test_question","previous_test_question_id","push","test_question_counter","is_attempted","attempted_index","option_id","test_id","nextProps","collapse","accordion","header","EditQuestion_EditQuestion","UpdateTest","handleTime","time","timeString","field","test_duration_in_seconds","moment","duration","asSeconds","toString","test_commence_time","end_time","handleDate","date","dateString","test_commence_date","handleOpenChange","open","open_commence_time","open_test_duration","open_end_time","handleClose","handleCreateTest","english_title","objectSpread","test","test_created","created_test","hindi_title","test_allowed_time_in_seconds","set_password","shuffle_required","date_picker","time_picker","onOpenChange","addon","utc","es_switch","defaultChecked","AllQuestionsByTestId_AllQuestionsByTestId","EditTest","all_tests","filtered_tests","selected_test_id","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","stop","_x","apply","arguments","onSelectTest","_callee2","_context2","EditTest_Option","UpdateTest_UpdateTest","TestStatus","TestHistory","createTest","IncrementQuestion","AddQuestion_TextArea","Test_AddQuestion_QuestionOption","ShowTest","no_of_questions","handleAddQuestion","newQuestionItem","questions","format","test_online_no_of_days","Test_AddQuestion_AddQuestion","MakeTestWrapper","createdTest","testCreated","MakeTest_AddCategory","ShowTest_ShowTest","ShowTestById","count","toUpperCase","AllTestComponent","initLoading","list","getData","callback","isOnline","end_date_time","start_date_Time","difference_with_start_time","Date","toLocaleString","timeZone","diff","range","actions","skeleton","active","fontWeight","fontSize","description","AllTest","AllTest_AllTestComponent","ShowTestById_ShowTestById","CustomRow","values","ResultTable","results","keys","top","scope","Results","handle_refresh","refreshResult","loading_results","filter_tests_by_date","filter","handle_date_change","test_date","selected_test_date","Results_Option","Test","Test_Sider","Test_SubMenu","Test_Content","MakeTestWrapper_MakeTestWrapper","AllTest_AllTest","Results_Results","EditTest_EditTest","TestStatus_TestStatus","TestHistory_TestHistory","UpdateStudentPermissions","handleSave","uploading_data","student_data","history","goBack","switch_type","new_student_data","pdf_allowed","online_test_allowed","offline_test_allowed","student_id","email_id","UpdatePaymentStatus","handleUpdate","ManageCashPayment","handlePayment","selected_pack_id","payment_date","posting_data","make_payment_not_visible","pack_id","amount","centered","payment_visible","ManageCashPayment_Option","color","set_student_id","make_payment_visible","StudentsTable","students","ManageStudents_CustomRow","AllStudents","selected_student_id","Update_Payment_Status_UpdatePaymentStatus","ManageCashPayment_ManageCashPayment","ManageStudents","ManageStudents_AllStudents","UpdateStudentPermissions_UpdateStudentPermissions","EnquiryTable","enquiries","Enquiry_CustomRow","Enquiry","AdsUploader","uploadImage","image","uploading","loadImageArray","class_ref","assertThisInitialized","img","Image","onload","reader","FileReader","onloadend","ended","result","readAsDataURL","deleteImage","downloading","upper_adds_array","lower_adds_array","ads_array","carousel","autoplay","autoplaySpeed","effect","Header","DashBoard","left","right","lineHeight","lib_radio","removeItem","AdsUploader_AdsUploader","WorkSheets_WorkSheets","Test_Test","UpdateAuthorize_UpdateAuthorize","PdfManaging_PdfManaging","ManageStudents_ManageStudents","Enquiry_Enquiry","NormalLoginForm","email","logging_in","open_modal","handleForgetPassword","preventDefault","handleLogin","setItem","getFieldDecorator","form","backgroundImage","rules","required","prefix","htmlType","href","Form","create","Main","DashBoard_DashBoard","Login","App","Main_Main","Boolean","window","location","hostname","ReactDOM","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iYACaA,EAAU,oCACVC,EAAS,aCCDC,6MACnBC,MAAQ,CAAEC,SAAS,KAInBC,UAAY,WACVC,EAAKC,SAAS,CACZH,SAAS,OAIbI,SAAW,SAAAC,GACTH,EAAKI,MAAMC,qBACXL,EAAKC,SAAS,CACZH,SAAS,OAIbQ,aAAe,SAAAH,GACbH,EAAKI,MAAMC,qBACXL,EAAKC,SAAS,CACZH,SAAS,wFAlBXS,KAAKN,SAAS,CAAEH,SAAS,qCAuBzB,OACEU,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,MAAOL,KAAKH,MAAMQ,MAClBd,QAASS,KAAKV,MAAMC,QACpBe,KAAMN,KAAKL,SACXY,SAAUP,KAAKD,cAEfE,EAAAC,EAAAC,cAAA,SAAIH,KAAKH,MAAMW,SACdR,KAAKH,MAAMY,kBAnCaC,IAAMC,WCOpBC,cACjB,SAAAA,IAAc,IAAAnB,EAAA,OAAAoB,OAAAC,EAAA,EAAAD,CAAAb,KAAAY,IACZnB,EAAAoB,OAAAE,EAAA,EAAAF,CAAAb,KAAAa,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAAjB,QAYFF,mBAAqB,WACnBL,EAAKC,SAAS,CAAEF,WAAY,EAAQ0B,eAAgB,KAdxCzB,EAiBd0B,aAAe,SAACC,GACZ3B,EAAKC,SAALmB,OAAAQ,EAAA,EAAAR,CAAA,GAAiBO,EAAME,OAAOC,KAAQH,EAAME,OAAOE,SAlBzC/B,EAqBdgC,aAAe,WACoB,KAA5BhC,EAAKH,MAAMoC,aACVjC,EAAKC,SAAU,CAAEF,WAAY,EAAOa,MAAQ,eAAiBsB,cAAgB,0CAG7ElC,EAAKC,SAAS,CAAEwB,eAAgB,IAChCU,MAAMzC,EAAO,8CAAA0C,OAA+CzC,GAAW,CACnE0C,OAAS,OACTC,QAAS,CACLC,eAAgB,oBAEpBC,KAAOC,KAAKC,UAAU1C,EAAKH,SAE9B8C,KAAK,SAACC,GAAD,OAASA,EAAIC,SAClBF,KAAK,SAACG,GAAD,OAAU9C,EAAKC,SAAU,CAAEgC,aAAe,GAAKc,WAAa,GAAKhD,WAAY,EAAOa,MAAQ,eAAiBsB,cAAgBY,EAAK/B,YACvIiC,MAAM,SAAAC,GAASjD,EAAKC,SAAU,CAAEF,WAAY,EAAOa,MAAQ,gBAAkBsB,cAAgB,sCAAuCgB,QAAQC,IAAIF,OAlCvJjD,EAAKH,MAAQ,CACXuD,WAAY,aACZnB,aAAe,GACfc,WAAa,GACbtB,eAAgB,EAChB1B,WAAY,EACZsD,YAAc,GACdnB,cAAgB,IATNlC,wEAwCL,IACCoD,EAAe7C,KAAKV,MAApBuD,WACFE,EAAgC,eAAfF,EAA8B,CACnDG,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,KAClB,KACEE,EAAkC,eAAfN,EAA8B,CACrDK,WAAY,CAAED,KAAM,GAAIG,OAAQ,IAC9B,KACJ,OACEnD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,cAAQF,EAAAC,EAAAC,cAAA,2BAAR,MACAF,EAAAC,EAAAC,cAACkD,EAAA,EAAD,CAAMC,OAAQT,GACZ5C,EAAAC,EAAAC,cAACkD,EAAA,EAAKE,KAAN1C,OAAA2C,OAAA,CACEC,MAAM,0BACFV,GAEN9C,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAOC,YAAY,4BACfnC,MAASxB,KAAKV,MAAMoC,aACpBkC,SAAY5D,KAAKmB,aACjBI,KAAO,kBAGXtB,EAAAC,EAAAC,cAACkD,EAAA,EAAKE,KAAN1C,OAAA2C,OAAA,CACEC,MAAM,wBACFV,EAFN,CAGEvB,MAASxB,KAAKV,MAAMkD,WACpBoB,SAAY5D,KAAKmB,aACjBI,KAAO,eAETtB,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAOC,YAAY,4BACjBnC,MAASxB,KAAKV,MAAMkD,WACpBoB,SAAY5D,KAAKmB,aACjBI,KAAO,gBAGTtB,EAAAC,EAAAC,cAACkD,EAAA,EAAKE,KAASJ,EACXlD,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CAAQC,KAAK,UAAUC,QAAS/D,KAAKV,MAAM4B,cAAe8C,QAAShE,KAAKyB,cAAxE,aAKoB,IAAzBzB,KAAKV,MAAME,UAAqBS,EAAAC,EAAAC,cAAC8D,EAAD,CAAOnE,mBAAsBE,KAAKF,mBAAoBO,MAASL,KAAKV,MAAMwD,YAAatC,QAAWR,KAAKV,MAAMqC,gBAAoB1B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgE,SAAA,cAnFnIxD,IAAMC,4BCLzCwD,EAASC,IAAOD,OAEDE,cACnB,SAAAA,IAAc,IAAA5E,EAAA,OAAAoB,OAAAC,EAAA,EAAAD,CAAAb,KAAAqE,IACZ5E,EAAAoB,OAAAE,EAAA,EAAAF,CAAAb,KAAAa,OAAAG,EAAA,EAAAH,CAAAwD,GAAApD,KAAAjB,QAeFsE,WAAa,SAAA1E,GACXH,EAAKC,SAAS,CAAE6E,KAAM3E,EAAE0B,OAAOkD,MAAM,MAjBzB/E,EAoBd0B,aAAe,SAAAC,GACb3B,EAAKC,SAALmB,OAAAQ,EAAA,EAAAR,CAAA,GAAiBO,EAAME,OAAOC,KAAOH,EAAME,OAAOE,SArBtC/B,EAwBdgF,mBAAqB,SAAAjD,GACnB/B,EAAKC,SAAS,CAAEgF,YAAalD,KAzBjB/B,EAoCdK,mBAAqB,WACnBL,EAAKC,SAAS,CAAEF,WAAW,EAAO0B,eAAe,KArCrCzB,EAwCdgC,aAAe,WACb,GAAgC,KAA5BhC,EAAKH,MAAMoC,aACbjC,EAAKC,SAAS,CACZF,WAAW,EACXsD,YAAa,eACbnB,cAAe,8CAEZ,GAA+B,IAA3BlC,EAAKH,MAAMoF,YACpBjF,EAAKC,SAAS,CACZF,WAAW,EACXsD,YAAa,eACbnB,cAAe,gCAEZ,GAAwB,OAApBlC,EAAKH,MAAMiF,KACpB9E,EAAKC,SAAS,CACZF,WAAW,EACXsD,YAAa,eACbnB,cAAe,2BAEZ,CACLlC,EAAKC,SAAS,CAAEwB,eAAe,IAC/B,IAAIyD,EAAW,IAAIC,SACnBD,EAASE,OAAO,WAAY3C,KAAKC,UAAU1C,EAAKH,QAChDqF,EAASE,OAAO,qBAAsBpF,EAAKH,MAAMiF,MACjD3C,MACEzC,EAAO,kDAAA0C,OAAqDzC,GAC5D,CACE0C,OAAQ,OACRG,KAAM0C,IAGPvC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GAAI,OACR9C,EAAKC,SAAS,CACZgC,aAAc,GACdc,WAAY,GACZkC,YAAa,EACblF,WAAW,EACXsD,YAAa,eACbnB,cAAe,0CAGlBc,MAAM,SAAAC,GACLjD,EAAKC,SAAS,CACZF,WAAW,EACXsD,YAAa,eACbnB,cAAe,kCAEjBgB,QAAQC,IAAIF,OAtFlBjD,EAAKH,MAAQ,CACXuD,WAAY,aACZnB,aAAc,GACdc,WAAY,GACZsC,eAAgB,GAChBJ,YAAa,EACbH,KAAM,KACN/E,WAAW,EACXsD,YAAa,GACbnB,cAAe,GACfT,eAAe,GAZLzB,mFA2BM,IAAAsF,EAAA/E,KAClB4B,MAAK,GAAAC,OACA1C,EADA,uDAAA0C,OAC6DzC,IAE/DgD,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GAAI,OAAIwC,EAAKrF,SAAS,CAAEoF,eAAgBvC,MAC7CE,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,sCA4DrB,IAAAsC,EAAAhF,KACC6C,EAAe7C,KAAKV,MAApBuD,WACFE,EACW,eAAfF,EACI,CACEG,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,KAEtB,KACAE,EACW,eAAfN,EACI,CACEK,WAAY,CAAED,KAAM,GAAIG,OAAQ,IAElC,KACN,OACEnD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,+BAA2B,KAE7BF,EAAAC,EAAAC,cAACkD,EAAA,EAAD,CAAMC,OAAQT,GACZ5C,EAAAC,EAAAC,cAACkD,EAAA,EAAKE,KAAN1C,OAAA2C,OAAA,CAAWC,MAAM,mBAAsBV,GACC,IAArC/C,KAAKV,MAAMwF,eAAeG,OACzBhF,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgE,SAAA,KACEjE,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,MADF,0BACkC,KAGlCjF,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CACEC,YAAU,EACVC,MAAO,CAAEC,MAAO,KAChB3B,YAAY,mBACZ4B,iBAAiB,WACjB3B,SAAU5D,KAAKyE,mBACfe,aAAc,SAAC9B,EAAO+B,GAAR,OACZA,EAAO5F,MAAMY,SACViF,cACAC,QAAQjC,EAAMgC,gBAAkB,IAGpC1F,KAAKV,MAAMwF,eAAec,IAAI,SAAAC,GAC7B,OACE5F,EAAAC,EAAAC,cAACgE,EAAD,CAAQ3C,MAAK,GAAAK,OAAKgE,EAASC,KAAOC,IAAKF,EAASC,KAC7CD,EAASnE,kBAOtBzB,EAAAC,EAAAC,cAACkD,EAAA,EAAKE,KAAN1C,OAAA2C,OAAA,CAAWC,MAAM,8BAAiCV,GAChD9C,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CACEC,YAAY,gCACZnC,MAAOxB,KAAKV,MAAMoC,aAClBkC,SAAU5D,KAAKmB,aACfI,KAAK,kBAGTtB,EAAAC,EAAAC,cAACkD,EAAA,EAAKE,KAAN1C,OAAA2C,OAAA,CACEC,MAAM,4BACFV,EAFN,CAGEvB,MAAOxB,KAAKV,MAAMkD,WAClBoB,SAAU5D,KAAKmB,aACfI,KAAK,eAELtB,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CACEC,YAAY,iCACZnC,MAAOxB,KAAKV,MAAMkD,WAClBoB,SAAU5D,KAAKmB,aACfI,KAAK,gBAGTtB,EAAAC,EAAAC,cAACkD,EAAA,EAAKE,KAASJ,EAAf,uDAEElD,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CAAQC,KAAK,WACX7D,EAAAC,EAAAC,cAAA,SAAO6F,IAAI,eAAeX,MAAO,CAAEY,WAAY,OAA/C,eAGAhG,EAAAC,EAAAC,cAAA,SACE2D,KAAK,OACLoC,GAAG,eACHtC,SAAU,SAAAhE,GAAC,OAAIoF,EAAKV,WAAW1E,IAC/ByF,MAAO,CACLc,QAAS,EACTC,SAAU,WACVC,QAAS,OAKjBpG,EAAAC,EAAAC,cAACkD,EAAA,EAAKE,KAASJ,EACblD,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CACEC,KAAK,UACLC,QAAS/D,KAAKV,MAAM4B,cACpB8C,QAAShE,KAAKyB,cAHhB,aASsB,IAAzBzB,KAAKV,MAAME,UACVS,EAAAC,EAAAC,cAAC8D,EAAD,CACEnE,mBAAoBE,KAAKF,mBACzBO,MAAOL,KAAKV,MAAMwD,YAClBtC,QAASR,KAAKV,MAAMqC,gBAGtB1B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgE,SAAA,cAxMkCxD,IAAMC,qCCPrC2F,EAAe,CAC1B,CAAE/E,KAAM,QAASgF,QAAS,UAC1B,CAAEhF,KAAM,QAASgF,QAAS,UAC1B,CAAEhF,KAAM,SAAUgF,QAAS,QAC3B,CAAEhF,KAAM,QAASgF,QAAS,UAC1B,CAAEhF,KAAM,OAAQgF,QAAS,UACzB,CAAEhF,KAAM,QAASgF,QAAS,UAC1B,CAAEhF,KAAM,QAASgF,QAAS,UAC1B,CAAEhF,KAAM,OAAQgF,QAAS,UACzB,CAAEhF,KAAM,OAAQgF,QAAS,UACzB,CAAEhF,KAAM,SAAUgF,QAAS,QAC3B,CAAEhF,KAAM,OAAQgF,QAAS,QACzB,CAAEhF,KAAM,SAAUgF,QAAS,UAC3B,CAAEhF,KAAM,MAAOgF,QAAS,WCHlBC,EAAaC,IAAbD,SACFrC,EAASC,IAAOD,OAEDuC,cACjB,SAAAA,EAAY7G,GAAM,IAAAJ,EAAA,OAAAoB,OAAAC,EAAA,EAAAD,CAAAb,KAAA0G,IACdjH,EAAAoB,OAAAE,EAAA,EAAAF,CAAAb,KAAAa,OAAAG,EAAA,EAAAH,CAAA6F,GAAAzF,KAAAjB,KAAMH,KAkBVC,mBAAqB,WACnBL,EAAKC,SAAS,CAAEF,WAAY,EAAQ0B,eAAgB,KApBpCzB,EAuBlBkH,aAAe,WACb,IADmBC,EASgEnH,EAAKH,MAAhFuH,EATWD,EASXC,gBAAkBC,EATPF,EASOE,aAAeC,EATtBH,EASsBG,qBAAuBC,EAT7CJ,EAS6CI,QAAUlD,EATvD8C,EASuD9C,KAC1E,OAAuB,IAApB+C,GACDpH,EAAKC,SAAS,CAAEF,WAAY,EAAOsD,YAAc,eAAiBnB,cAAgB,4BAC3E,GACS,KAATmC,GACPrE,EAAKC,SAAS,CAAEF,WAAY,EAAOsD,YAAc,eAAiBnB,cAAgB,wBAC3E,GACiB,KAAjBmF,GACPrH,EAAKC,SAAS,CAAEF,WAAY,EAAOsD,YAAc,eAAiBnB,cAAgB,8BAC3E,GACmB,IAAnBqF,EAAQ/B,QACfxF,EAAKC,SAAS,CAAEF,WAAY,EAAOsD,YAAc,eAAiBnB,cAAgB,yBAC3E,IAEqB,IAtBR,WACpB,IAAI,IAAIsF,EAAI,EAAIA,EAAKxH,EAAKH,MAAM0H,QAAQ/B,OAASgC,IAC/C,GAA0C,KAAvCxH,EAAKH,MAAM0H,QAAQC,GAAGH,aACvB,OAAO,EAGX,OAAO,EAgBDI,IACNzH,EAAKC,SAAS,CAAEF,WAAY,EAAOsD,YAAc,eAAiBnB,cAAgB,iCAC1E,GACwB,IAAzBoF,GACPtH,EAAKC,SAAS,CAAEF,WAAY,EAAOsD,YAAc,eAAiBnB,cAAgB,sCAC3E,KACAoF,EAAuBC,EAAQ/B,QAAU8B,EAAuB,KACvEtH,EAAKC,SAAS,CAAEF,WAAY,EAAOsD,YAAc,eAAiBnB,cAAgB,oBAC3E,IAtDOlC,EA6DlB0B,aAAe,SAACC,GAEZ,IADA,IAAI+F,GAAQ,EACJF,EAAI,EAAIA,EAAIX,EAAarB,OAASgC,IACxC,IAAyD,IAAtD7F,EAAME,OAAOE,MAAMmE,QAAQW,EAAaW,GAAG1F,MAAa,CACzD4F,GAAQ,EACR1H,EAAKC,SAALmB,OAAAQ,EAAA,EAAAR,CAAA,GAAiBO,EAAME,OAAOC,KAAQH,EAAME,OAAOE,MAAM4F,QAAQd,EAAaW,GAAG1F,KAAK+E,EAAaW,GAAGV,WACtG,MAGAY,GACF1H,EAAKC,SAALmB,OAAAQ,EAAA,EAAAR,CAAA,GAAiBO,EAAME,OAAOC,KAAQH,EAAME,OAAOE,SAvEvC/B,EA2ElB4H,mBAAqB,SAACC,EAAQlG,GAC5BA,EAAMmG,UAGN,IAFA,IAAIC,EAAS,GACTL,GAAQ,EACJF,EAAI,EAAIA,EAAIX,EAAarB,OAASgC,IACxC,IAAyD,IAAtD7F,EAAME,OAAOE,MAAMmE,QAAQW,EAAaW,GAAG1F,MAAa,CACzD4F,GAAQ,EACRK,EAAS3G,OAAO2C,OAAO/D,EAAKH,MAAM0H,QAAQM,GAAjCzG,OAAAQ,EAAA,EAAAR,CAAA,GAA6CO,EAAME,OAAOC,KAAQH,EAAME,OAAOE,MAAM4F,QAAQd,EAAaW,GAAG1F,KAAK+E,EAAaW,GAAGV,WAC3I,MAGAY,IACDK,EAAS3G,OAAO2C,OAAO/D,EAAKH,MAAM0H,QAAQM,GAAjCzG,OAAAQ,EAAA,EAAAR,CAAA,GAA6CO,EAAME,OAAOC,KAAQH,EAAME,OAAOE,SAE3F/B,EAAKC,SAAS,SAAAJ,GAAK,OAAAuB,OAAAQ,EAAA,EAAAR,CAAA,GAAQvB,EAAM0H,QAAQM,GAAUE,MAzFnC/H,EA6FlBgF,mBAAqB,SAACjD,GACpB/B,EAAKC,SAAS,CAAEmH,gBAAkBrF,KA9FlB/B,EAiGlBgC,aAAe,SAAC7B,GACZ,IAA2B,IAAxBH,EAAKkH,eAAwB,CAC9B,IAAIc,EAAW,+BAAA5F,OAAkCzC,GACjDK,EAAKC,SAAS,CAAEwB,eAAgB,IAChC,IAAIyD,EAAW,IAAIC,SACb8C,EAAW,CACfZ,aAAiBrH,EAAKH,MAAMwH,aAC5Ba,WAAelI,EAAKH,MAAMqI,WAC1BX,QAAUvH,EAAKH,MAAM0H,QACrBD,qBAAuBtH,EAAKH,MAAMyH,qBAClCF,gBAAkBpH,EAAKH,MAAMuH,gBAC7B/C,KAAOrE,EAAKH,MAAMwE,MAEpBa,EAASE,OAAO,WAAa3C,KAAKC,UAAUuF,IACtB,OAAnBjI,EAAKH,MAAMsI,MACdH,EAAW,4BAAA5F,OAA+BzC,GAC1CuF,EAASE,OAAO,iBAAmBpF,EAAKH,MAAMsI,MAC9ChG,MAAMzC,EAAQsI,EAAc,CACxB3F,OAAS,OACTG,KAAO0C,IAEVvC,KAAK,SAACC,GAAD,OAASA,EAAIC,SAClBF,KAAK,SAACG,GAAU9C,EAAKC,SAAS,CAAEwB,eAAgB,EAC/C4F,aAAiB,GACjBa,WAAe,GACf9E,WAAY,aACZmE,QAAU,GACVD,qBAAuB,KACvBF,gBAAkB,EAClBe,IAAM,KACNpI,WAAY,EACZsD,YAAc,eACdnB,cAAgB,kCACjBc,MAAM,SAAAC,GAAQjD,EAAKC,SAAS,CAACF,WAAY,EAAOsD,YAAc,eAAiBnB,cAAgB,qCAAqCgB,QAAQC,IAAIF,OAlIrIjD,EAsIlB6E,WAAa,SAAC1E,GACZH,EAAKC,SAAS,CAAEkI,IAAMhI,EAAE0B,OAAOkD,MAAM,MAvIrB/E,EA0IlBoI,mBAAqB,WACjB,IAAMC,EAAY,CAChBhB,aAAiB,GACjBa,WAAe,GACfI,YAAgB,IAElBtI,EAAKC,SAAS,SAAAJ,GAAK,MAAK,CACtB0H,QAAU1H,EAAM0H,QAAQnF,OAAOiG,OA/IjCrI,EAAKH,MAAQ,CACTwH,aAAiB,GACjBa,WAAe,GACfK,mBAAuB,GACvBnF,WAAY,aACZmE,QAAU,GACVD,qBAAuB,KACvBF,gBAAkB,EAClBe,IAAM,KACN1G,eAAgB,EAChB1B,WAAY,EACZsD,YAAc,GACdnB,cAAgB,GAChBmC,KAAO,IAfGrE,mFAqJC,IAAAsF,EAAA/E,KACf4B,MAAK,GAAAC,OAAI1C,EAAJ,2DAAA0C,OAAqEzC,IACzEgD,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GAAI,OAAIwC,EAAKrF,SAAS,CAAEsI,mBAAqBzF,MAClDE,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,sCAEtB,IAAAsC,EAAAhF,KACI6C,EAAe7C,KAAKV,MAApBuD,WACFE,EAAgC,eAAfF,EAA8B,CACnDG,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,KAClB,KACEE,EAAkC,eAAfN,EAA8B,CACrDK,WAAY,CAAED,KAAM,GAAIG,OAAQ,IAC9B,KAEJ,OACEnD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,cAAQF,EAAAC,EAAAC,cAAA,2BACRF,EAAAC,EAAAC,cAACkD,EAAA,EAAD,CAAMC,OAAQT,EAAYoF,OAAS,IAAInG,OAAS,OAAQoG,QAAU,uBAChEjI,EAAAC,EAAAC,cAACkD,EAAA,EAAKE,KAAN1C,OAAA2C,OAAA,CACEC,MAAM,uBACFV,GAEsC,IAAzC/C,KAAKV,MAAM0I,mBAAmB/C,OAAgBhF,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgE,SAAA,KAAEjE,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,MAAF,gCAA8CjF,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAC7FC,YAAU,EACVC,MAAO,CAAEC,MAAO,KAChB3B,YAAY,uBACZ4B,iBAAiB,WACjB3B,SAAU5D,KAAKyE,mBACfe,aAAc,SAAC9B,EAAO+B,GAAR,OAAmBA,EAAO5F,MAAMY,SAASiF,cAAcC,QAAQjC,EAAMgC,gBAAkB,IAEpG1F,KAAKV,MAAM0I,mBAAmBpC,IAAI,SAAAuC,GAC/B,OACIlI,EAAAC,EAAAC,cAACiI,EAAD,CAAQ5G,MAAK,GAAAK,OAAOsG,EAAarC,KAAOC,IAAOoC,EAAarC,KAAMqC,EAAazG,kBAKzFzB,EAAAC,EAAAC,cAACkD,EAAA,EAAKE,KAAN1C,OAAA2C,OAAA,CAAWC,MAAM,cACXV,GACF9C,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAO2E,KAAK,QAAQ9G,KAAO,OAAOoC,YAAY,aAAaC,SAAY5D,KAAKmB,gBAEhFlB,EAAAC,EAAAC,cAACkD,EAAA,EAAKE,KAAN1C,OAAA2C,OAAA,CAAWC,MAAM,YACXV,GACJ9C,EAAAC,EAAAC,cAACmI,EAAA,EAAD,KACIrI,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAKtF,KAAM,IAAIhD,EAAAC,EAAAC,cAACqG,EAAD,CAAUjF,KAAO,eAAeC,MAASxB,KAAKV,MAAMwH,aAAc0B,KAAM,EAAG7E,YAAc,aAAaC,SAAY5D,KAAKmB,gBACtIlB,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAKtF,KAAM,GAAIG,OAAQ,GAAGnD,EAAAC,EAAAC,cAACqG,EAAD,CAAUjF,KAAO,aAAaC,MAASxB,KAAKV,MAAMqI,WAAYa,KAAM,EAAG7E,YAAc,WAAWC,SAAY5D,KAAKmB,kBAGjJlB,EAAAC,EAAAC,cAAA,OAAKkF,MAAS,CAAEoD,MAAQ,QAAUC,aAAe,QAC/CzI,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CAASC,KAAK,UAAUE,QAAWhE,KAAK6H,oBAAxC,aACc5H,EAAAC,EAAAC,cAACwI,EAAA,EAAD,CAAM7E,KAAK,kBAG3B7D,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACCH,KAAKV,MAAM0H,QAAQpB,IAAI,SAACH,EAAO6B,GAC9B,OAAOrH,EAAAC,EAAAC,cAACyI,EAAD,CAAgB7C,IAAOuB,EAAO7B,OAAUA,EAAQ6B,MAASA,EAAOD,mBAAsBrC,EAAKqC,uBAEpGpH,EAAAC,EAAAC,cAACkD,EAAA,EAAKE,KAAN1C,OAAA2C,OAAA,CAAWC,MAAM,kBACXV,GACJ9C,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAOI,KAAI,SAAc+E,IAAO7I,KAAKV,MAAM0H,QAAQ/B,OAAQ6D,IAAO,EAClEtH,MAASxB,KAAKV,MAAMyH,qBAAsBnD,SAAY5D,KAAKmB,aAAcI,KAAO,0BAElFtB,EAAAC,EAAAC,cAACkD,EAAA,EAAKE,KAASJ,EAAf,mCAEElD,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CAASC,KAAK,WACd7D,EAAAC,EAAAC,cAAA,SAAO6F,IAAI,eAAeX,MAAO,CAAEY,WAAY,OAA/C,eAGAhG,EAAAC,EAAAC,cAAA,SACE2D,KAAK,OACLoC,GAAG,eACHtC,SAAU,SAAAhE,GAAC,OAAIoF,EAAKV,WAAW1E,IAC/ByF,MAAO,CACLc,QAAS,EACTC,SAAU,WACVC,QAAS,OAKfpG,EAAAC,EAAAC,cAACkD,EAAA,EAAKE,KAASJ,EACXlD,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CAAQC,KAAK,UAAUC,QAAS/D,KAAKV,MAAM4B,cAAe8C,QAAShE,KAAKyB,cAAxE,aAKoB,IAAzBzB,KAAKV,MAAME,UAAqBS,EAAAC,EAAAC,cAAC8D,EAAD,CAAOnE,mBAAsBE,KAAKF,mBAAoBO,MAASL,KAAKV,MAAMwD,YAAatC,QAAWR,KAAKV,MAAMqC,gBAAoB1B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgE,SAAA,cA/OrIxD,IAAMC,WAuPzCoI,cACJ,SAAAA,EAAYlJ,GAAM,IAAAmJ,EAAA,OAAAnI,OAAAC,EAAA,EAAAD,CAAAb,KAAA+I,IAChBC,EAAAnI,OAAAE,EAAA,EAAAF,CAAAb,KAAAa,OAAAG,EAAA,EAAAH,CAAAkI,GAAA9H,KAAAjB,KAAMH,KACDP,MAAQ,CACXuD,WAAY,aACZiE,aAAe,IAJDkC,qHASV,IAAAC,EAAAjJ,KAEQ+C,EAAgC,eADvB/C,KAAKV,MAApBuD,WACqD,CACnDG,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,KAClB,KAEX,OACChD,EAAAC,EAAAC,cAACkD,EAAA,EAAKE,KAAN1C,OAAA2C,OAAA,CAAWC,MAAK,UAAA5B,OAAc7B,KAAKH,MAAMyH,MAAQ,IAC7CvE,GACJ9C,EAAAC,EAAAC,cAACmI,EAAA,EAAD,KACIrI,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAKtF,KAAM,IAAIhD,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAOlC,MAASxB,KAAKH,MAAM4F,OAAOqB,aAAcuB,KAAK,QAAQ9G,KAAO,eAAeoC,YAAY,kBAAkBC,SAAY,SAACxC,GAAD,OAAW6H,EAAKpJ,MAAMwH,mBAAmB4B,EAAKpJ,MAAMyH,MAAMlG,OACtMnB,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAKtF,KAAM,GAAIG,OAAQ,GAAGnD,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAOlC,MAASxB,KAAKH,MAAM4F,OAAOkC,WAAYU,KAAK,QAAQ9G,KAAO,aAAaoC,YAAY,gBAAgBC,SAAY,SAACxC,GAAD,OAAW6H,EAAKpJ,MAAMwH,mBAAmB4B,EAAKpJ,MAAMyH,MAAMlG,gBAtBxLV,IAAMC,+CC/P7BwD,EAASC,IAAOD,OAED+E,6MACnB5J,MAAQ,CACNwG,IAAK,GACL/B,SAAS,EACTrC,aAAc,GACdc,WAAY,GACZkC,YAAa,GACbH,KAAM,GACN4E,WAAY,GACZjI,eAAe,EACf1B,WAAW,EACXsD,YAAa,GACbnB,cAAe,GACfyH,eAAgB,QAGlBtJ,mBAAqB,WACnBL,EAAKC,SAAS,CAAEF,WAAW,EAAO0B,eAAe,OA6BnDC,aAAe,SAAAK,GACb/B,EAAKC,SAAS,CAAEgF,YAAalD,OAG/B6H,kBAAoB,SAAAzJ,GAClBH,EAAKC,SAAS,CAAE0J,eAAgBxJ,EAAE0B,OAAOkD,MAAM,QAGjD8E,iBAAmB,WACjB,GAAkC,OAA9B7J,EAAKH,MAAM8J,eACbG,MAAM,gCACD,CACL9J,EAAKC,SAAS,CAAEwB,eAAe,IAC/B,IAAIwG,EAAW,IAAI9C,SACnB8C,EAAS7C,OAAO,MAAOpF,EAAKH,MAAMwG,KAClC4B,EAAS7C,OAAO,OAAQpF,EAAKH,MAAM8J,gBACnC3J,EAAKC,SAAS,CAAEwB,eAAe,IAC/BU,MACEzC,EAAO,2DAAA0C,OACsDzC,GAC7D,CACE0C,OAAQ,OACRG,KAAMyF,IAGPtF,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GAAI,OACR9C,EAAKC,SAAS,CACZF,WAAW,EACXa,MAAO,eACPsB,cAAeY,EAAK/B,QACpB+D,KAAMhC,EAAKiH,cAGd/G,MAAM,SAAAC,GACLjD,EAAKC,SAAS,CACZF,WAAW,EACXa,MAAO,gBACPsB,cAAe,sCAEjBgB,QAAQC,IAAIF,SAKpB+G,iBAAmB,WACe,KAA5BhK,EAAKH,MAAMoC,aACb6H,MAAM,iCAEN9J,EAAKC,SAAS,CAAEwB,eAAe,IAC/BU,MACEzC,EAAO,0DAAA0C,OACqDzC,GAC5D,CACE0C,OAAQ,OACRC,QAAS,CACPC,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU1C,EAAKH,SAG3B8C,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GAAI,OACR9C,EAAKC,SAAS,CACZF,WAAW,EACXa,MAAO,eACPsB,cAAeY,EAAK/B,YAGvBiC,MAAM,SAAAC,GACLjD,EAAKC,SAAS,CACZF,WAAW,EACXa,MAAO,gBACPsB,cAAe,sCAEjBgB,QAAQC,IAAIF,0FArGA,IAAAqC,EAAA/E,KACdkG,EAAKlG,KAAKH,MAAM6J,MAAMC,OAAOzD,GACjClG,KAAKN,SAAS,CAAEqE,SAAS,EAAM+B,IAAKI,IACpCtE,MAAK,GAAAC,OACA1C,EADA,2DAAA0C,OACiEqE,EADjE,KAAArE,OACuEzC,IAEzEgD,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GACJwC,EAAKrF,SAAS,CACZgC,aAAca,EAAKb,aACnBc,WAAYD,EAAKC,WACjBkC,YAAanC,EAAKmC,YAClBH,KAAMhC,EAAKgC,OAEb3C,MAAK,GAAAC,OACA1C,EADA,uDAAA0C,OAC6DzC,IAE/DgD,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GACJwC,EAAKrF,SAAS,CAAEyJ,WAAY5G,EAAMwB,SAAS,MAE5CtB,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OAE7BD,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,sCAmFrB,IAAAsC,EAAAhF,KACP,OAA2B,IAAvBA,KAAKV,MAAMyE,QAEX9D,EAAAC,EAAAC,cAAA,OAAKkF,MAAO,CAAEuE,QAAS,MAAOC,YAAa,QACzC5J,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,CAAMmD,KAAK,WAKbpI,EAAAC,EAAAC,cAAA,OAAKkF,MAAO,CAAEuE,QAAS,OACrB3J,EAAAC,EAAAC,cAACmI,EAAA,EAAD,KACErI,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAKtF,KAAM,GACThD,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CACEC,YAAU,EACVC,MAAO,CAAEC,MAAO,KAChB3B,YAAY,kBACZ4B,iBAAiB,WACjBuE,cAAY,EACZC,aAAc,CAAEhE,IAAK/F,KAAKV,MAAMoF,aAChCd,SAAU5D,KAAKmB,aACfqE,aAAc,SAAC9B,EAAO+B,GAAR,OACZA,EAAO5F,MAAMY,SACViF,cACAC,QAAQjC,EAAMgC,gBAAkB,IAGpC1F,KAAKV,MAAM6J,WAAWvD,IAAI,SAACoE,EAAM1C,GAChC,OACErH,EAAAC,EAAAC,cAAC8J,EAAD,CAAQlE,IAAKiE,EAAKlE,IAAKtE,MAAOwI,EAAKlE,KAChCkE,EAAKtI,kBAMhBzB,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAKtF,KAAM,EAAGG,OAAQ,GACpBnD,EAAAC,EAAAC,cAAA,wCACAF,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CACElC,MAAOxB,KAAKV,MAAMoC,aAClBkC,SAAU,SAAAhE,GACRoF,EAAKtF,SAAS,CAAEgC,aAAc9B,EAAE0B,OAAOE,SAEzC6G,KAAK,QACL1E,YAAY,gBAGhB1D,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAKtF,KAAM,EAAGG,OAAQ,GACpBnD,EAAAC,EAAAC,cAAA,sCACAF,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CACElC,MAAOxB,KAAKV,MAAMkD,WAClB6F,KAAK,QACL1E,YAAY,aACZC,SAAU,SAAAhE,GACRoF,EAAKtF,SAAS,CAAE8C,WAAY5C,EAAE0B,OAAOE,aAK7CvB,EAAAC,EAAAC,cAACmI,EAAA,EAAD,KACErI,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAKtF,KAAM,IACThD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CACEC,KAAK,UACLC,QAAS/D,KAAKV,MAAM4B,cACpB8C,QAAS,kBAAMgB,EAAKyE,oBACpBpB,KAAM,SAJR,YAUJpI,EAAAC,EAAAC,cAACmI,EAAA,EAAD,KACErI,EAAAC,EAAAC,cAACoI,EAAA,EAAD,KACEtI,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OACE+J,OAAO,QACP5E,MAAM,QACN6E,IAAG,GAAAtI,OAAK1C,EAAL,yBAAA0C,OAAoC7B,KAAKV,MAAMiF,MAClD6F,IAAK,oBAIXnK,EAAAC,EAAAC,cAACmI,EAAA,EAAD,KACErI,EAAAC,EAAAC,cAACoI,EAAA,EAAD,KACEtI,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,SAAO6F,IAAI,eAAeX,MAAO,CAAEY,WAAY,OAA/C,eAGAhG,EAAAC,EAAAC,cAAA,SACE2D,KAAK,OACLoC,GAAG,eACHtC,SAAU5D,KAAKqJ,kBACfhE,MAAO,CACLc,QAAS,EACTC,SAAU,WACVC,QAAS,OAKjBpG,EAAAC,EAAAC,cAACmI,EAAA,EAAD,KACErI,EAAAC,EAAAC,cAACoI,EAAA,EAAD,KACEtI,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CACEC,KAAK,UACLC,QAAS/D,KAAKV,MAAM4B,cACpB8C,QAAShE,KAAKsJ,iBACdjB,KAAM,SAJR,aAUsB,IAAzBrI,KAAKV,MAAME,UACVS,EAAAC,EAAAC,cAAC8D,EAAD,CACEnE,mBAAoBE,KAAKF,mBACzBO,MAAOL,KAAKV,MAAMwD,YAClBtC,QAASR,KAAKV,MAAMqC,gBAGtB1B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgE,SAAA,cAzPqCxD,IAAMC,WCMjDwD,EAASC,IAAOD,OAEhBkG,6MACJ/K,MAAQ,CACNgL,oBAAoB,EACpBnB,WAAY,GACZoB,uBAAuB,EACvBC,cAAe,MAejB/F,mBAAqB,SAAAjD,GACnB/B,EAAKC,SAAS,CAAE4K,oBAAoB,IACpC1I,MAAK,GAAAC,OACA1C,EADA,iDAAA0C,OACuDL,EADvD,KAAAK,OACgEzC,IAElEgD,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GACJ9C,EAAKC,SAAS,CAAE6K,uBAAuB,EAAOC,cAAejI,MAE9DE,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,yFArBV,IAAAqC,EAAA/E,KAClBA,KAAKN,SAAS,CAAE4K,oBAAoB,IACpC1I,MAAK,GAAAC,OACA1C,EADA,uDAAA0C,OAC6DzC,IAE/DgD,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GAAI,OACRwC,EAAKrF,SAAS,CAAEyJ,WAAY5G,EAAM+H,oBAAoB,MAEvD7H,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,sCAerB,IAAAsC,EAAAhF,KACC6C,EAAe7C,KAAKV,MAApBuD,WACFE,EACW,eAAfF,EACI,CACEG,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,KAEtB,KAEN,OACEhD,EAAAC,EAAAC,cAACsK,EAAA,EAAD,CAAQC,SAAUC,kBAChB1K,EAAAC,EAAAC,cAAA,OACEkF,MAAO,CAAEwE,YAAa,MAAO5D,WAAY,KAAM2E,cAAe,OAE9D3K,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,iCAEFF,EAAAC,EAAAC,cAACkD,EAAA,EAAD,CAAMC,OAAQT,GACZ5C,EAAAC,EAAAC,cAACkD,EAAA,EAAKE,KAAN1C,OAAA2C,OAAA,CAAWC,MAAM,mBAAsBV,GACH,IAAjC/C,KAAKV,MAAM6J,WAAWlE,OACrBhF,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgE,SAAA,KACEjE,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,MADF,0BACkC,KAGlCjF,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CACEC,YAAU,EACVC,MAAO,CAAEC,MAAO,KAChB3B,YAAY,mBACZ4B,iBAAiB,WACjB3B,SAAU5D,KAAKyE,mBACfe,aAAc,SAAC9B,EAAO+B,GAAR,OACZA,EAAO5F,MAAMY,SACViF,cACAC,QAAQjC,EAAMgC,gBAAkB,IAGpC1F,KAAKV,MAAM6J,WAAWvD,IAAI,SAAAC,GACzB,OACE5F,EAAAC,EAAAC,cAAC0K,EAAD,CAAQrJ,MAAK,GAAAK,OAAKgE,EAASC,KAAOC,IAAKF,EAASC,KAC7CD,EAASnE,oBAQc,IAArC1B,KAAKV,MAAMiL,sBACVtK,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,CAAMmD,KAAK,UAEXpI,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,CACEC,WAAW,aACXC,WAAYhL,KAAKV,MAAMkL,cACvBS,WAAY,SAAAjB,GAAI,OACd/J,EAAAC,EAAAC,cAAC2K,EAAA,EAAKvH,KAAN,KACEtD,EAAAC,EAAAC,cAAC2K,EAAA,EAAKvH,KAAK2H,KAAX,CACE7K,MAAOJ,EAAAC,EAAAC,cAAA,SAAI6J,EAAKtI,cAChByJ,OACElL,EAAAC,EAAAC,cAACgL,EAAA,EAAD,CACEC,MAAM,SACN/C,KAAK,QACLhD,MAAO,CAAE6E,OAAQ,MAAO5E,MAAO,OAC/B6E,IAAG,GAAAtI,OAAK1C,EAAL,yBAAA0C,OAAoCmI,EAAKzF,UAIlDtE,EAAAC,EAAAC,cAACkL,EAAA,EAAD,CACEhG,MAAO,CAAEqD,aAAc,KAAM4C,YAAa,OAC1CC,GAAE,GAAA1J,OAAKmD,EAAKnF,MAAM6J,MAAM8B,IAAtB,KAAA3J,OAA6BmI,EAAKlE,MAEpC7F,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CAAQC,KAAK,UAAUuE,KAAM,SAA7B,sBAvGkB3H,IAAMC,WAqHvB8K,cACnB,SAAAA,EAAY5L,GAAO,IAAAmJ,EAAA,OAAAnI,OAAAC,EAAA,EAAAD,CAAAb,KAAAyL,IACjBzC,EAAAnI,OAAAE,EAAA,EAAAF,CAAAb,KAAAa,OAAAG,EAAA,EAAAH,CAAA4K,GAAAxK,KAAAjB,KAAMH,KACDP,MAAQ,GAFI0J,wEAKjB,GAA8C,SAA1C0C,aAAaC,QAAQ,iBAA6B,CACpD,IAAIjC,EAAQ1J,KAAKH,MAAM6J,MACvB,OACEzJ,EAAAC,EAAAC,cAACsK,EAAA,EAAD,CAAQC,SAAUC,kBAChB1K,EAAAC,EAAAC,cAACyL,EAAA,EAAD,KACE3L,EAAAC,EAAAC,cAAC0L,EAAA,EAAD,CACEC,OAAK,EACLC,KAAI,GAAAlK,OAAK6H,EAAM8B,KACfQ,OAAQ,SAAAnM,GAAK,OAAII,EAAAC,EAAAC,cAAC8L,EAA4BpM,MAEhDI,EAAAC,EAAAC,cAAC0L,EAAA,EAAD,CACEE,KAAI,GAAAlK,OAAK6H,EAAM8B,IAAX,QACJQ,OAAQ,SAAAnM,GAAK,OAAII,EAAAC,EAAAC,cAAC+L,EAAwBrM,QAMlD,OAAOI,EAAAC,EAAAC,cAACgM,EAAA,EAAD,CAAUZ,GAAI,CAAEa,SAAU,mBAxBK1L,IAAMC,WCrH1C0L,EAAYC,IAAZD,QACAE,EAAmBC,IAAnBD,QAASE,EAAUD,IAAVC,MAEIC,mLAEjB,GAA8C,SAA1ChB,aAAaC,QAAQ,iBAA6B,CACpD,IAAIjC,EAAQ1J,KAAKH,MAAM6J,MACvB,OACEzJ,EAAAC,EAAAC,cAACsK,EAAA,EAAD,CAAQC,SAAUC,kBAChB1K,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAQ+B,MAAO,CAAEY,WAAY,OAC3BhG,EAAAC,EAAAC,cAACsM,EAAD,CAAOnH,MAAO,MAAOD,MAAO,CAAEsH,WAAY,SACxC1M,EAAAC,EAAAC,cAACyM,EAAA,EAAD,CACEC,MAAM,OACNC,KAAK,SACLzH,MAAO,CAAE6E,OAAQ,OAAQ6C,YAAa,IAEtC9M,EAAAC,EAAAC,cAACkM,EAAD,CACEtG,IAAI,OACJ1F,MACEJ,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACwI,EAAA,EAAD,CAAM7E,KAAK,gBADb,eAMF7D,EAAAC,EAAAC,cAACyM,EAAA,EAAKrJ,KAAN,CAAWwC,IAAI,KACb9F,EAAAC,EAAAC,cAACkL,EAAA,EAAD,CAAME,GAAE,GAAA1J,OAAK6H,EAAM8B,IAAX,kBAAR,iBAEFvL,EAAAC,EAAAC,cAACyM,EAAA,EAAKrJ,KAAN,CAAWwC,IAAI,KAAf,kBACA9F,EAAAC,EAAAC,cAACyM,EAAA,EAAKrJ,KAAN,CAAWwC,IAAI,KAAf,iBACA9F,EAAAC,EAAAC,cAACyM,EAAA,EAAKrJ,KAAN,CAAWwC,IAAI,KAAf,oBAEF9F,EAAAC,EAAAC,cAACkM,EAAD,CACEtG,IAAI,OACJ1F,MACEJ,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACwI,EAAA,EAAD,CAAM7E,KAAK,gBADb,mBAMF7D,EAAAC,EAAAC,cAACyM,EAAA,EAAKrJ,KAAN,CAAWwC,IAAI,KACb9F,EAAAC,EAAAC,cAACkL,EAAA,EAAD,CAAME,GAAE,GAAA1J,OAAK6H,EAAM8B,IAAX,sBAAR,qBAIFvL,EAAAC,EAAAC,cAACyM,EAAA,EAAKrJ,KAAN,CAAWwC,IAAI,KACb9F,EAAAC,EAAAC,cAACkL,EAAA,EAAD,CAAME,GAAE,GAAA1J,OAAK6H,EAAM8B,IAAX,wBAAR,uBAIFvL,EAAAC,EAAAC,cAACyM,EAAA,EAAKrJ,KAAN,CAAWwC,IAAI,KAAf,qBACA9F,EAAAC,EAAAC,cAACyM,EAAA,EAAKrJ,KAAN,CAAWwC,IAAI,KAAf,wBAEF9F,EAAAC,EAAAC,cAACkM,EAAD,CACEtG,IAAI,OACJ1F,MACEJ,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACwI,EAAA,EAAD,CAAM7E,KAAK,oBADb,cAMF7D,EAAAC,EAAAC,cAACyM,EAAA,EAAKrJ,KAAN,CAAWwC,IAAI,KACb9F,EAAAC,EAAAC,cAACkL,EAAA,EAAD,CAAME,GAAE,GAAA1J,OAAK6H,EAAM8B,IAAX,mBACL,IADH,gBAEgB,MAGlBvL,EAAAC,EAAAC,cAACyM,EAAA,EAAKrJ,KAAN,CAAWwC,IAAI,MAAf,iBACA9F,EAAAC,EAAAC,cAACyM,EAAA,EAAKrJ,KAAN,CAAWwC,IAAI,MAAf,kBACA9F,EAAAC,EAAAC,cAACyM,EAAA,EAAKrJ,KAAN,CAAWwC,IAAI,MAAf,uBAIN9F,EAAAC,EAAAC,cAACoM,EAAD,KACEtM,EAAAC,EAAAC,cAACyL,EAAA,EAAD,KACE3L,EAAAC,EAAAC,cAAC0L,EAAA,EAAD,CACEE,KAAI,GAAAlK,OAAK6H,EAAM8B,IAAX,iBACJQ,OAAQ,SAAAnM,GAAK,OAAII,EAAAC,EAAAC,cAAC6M,EAAgBnN,MAEpCI,EAAAC,EAAAC,cAAC0L,EAAA,EAAD,CACEE,KAAI,GAAAlK,OAAK6H,EAAM8B,IAAX,qBACJQ,OAAQ,SAAAnM,GAAK,OAAII,EAAAC,EAAAC,cAAC8M,EAAmBpN,MAEvCI,EAAAC,EAAAC,cAAC0L,EAAA,EAAD,CACEE,KAAI,GAAAlK,OAAK6H,EAAM8B,IAAX,kBACJQ,OAAQ,SAAAnM,GAAK,OAAII,EAAAC,EAAAC,cAAC+M,EAAiBrN,MAErCI,EAAAC,EAAAC,cAAC0L,EAAA,EAAD,CACEE,KAAI,GAAAlK,OAAK6H,EAAM8B,IAAX,uBACJQ,OAAQ,SAAAnM,GAAK,OAAII,EAAAC,EAAAC,cAACgN,EAAmBtN,UAQjD,OAAOI,EAAAC,EAAAC,cAACgM,EAAA,EAAD,CAAUZ,GAAI,CAAEa,SAAU,mBAhGC1L,IAAMC,sCCXxCwD,GAASC,IAAOD,OAEDiJ,eACnB,SAAAA,IAAc,IAAA3N,EAAA,OAAAoB,OAAAC,EAAA,EAAAD,CAAAb,KAAAoN,IACZ3N,EAAAoB,OAAAE,EAAA,EAAAF,CAAAb,KAAAa,OAAAG,EAAA,EAAAH,CAAAuM,GAAAnM,KAAAjB,QAgBFsE,WAAa,SAAA1E,GACXH,EAAKC,SAAS,CAAE2N,IAAKzN,EAAE0B,OAAOkD,MAAM,MAlBxB/E,EAqBd0B,aAAe,SAAAC,GACb3B,EAAKC,SAALmB,OAAAQ,EAAA,EAAAR,CAAA,GAAiBO,EAAME,OAAOC,KAAOH,EAAME,OAAOE,SAtBtC/B,EAyBdgF,mBAAqB,SAAAjD,GACnB,IAAK,IAAIyF,EAAI,EAAGA,EAAIxH,EAAKH,MAAM0I,mBAAmB/C,OAAQgC,IACxD,GAAIxH,EAAKH,MAAM0I,mBAAmBf,GAAGnB,MAAQwH,SAAS9L,GAAQ,CAC5D/B,EAAKC,SAAS,CACZgC,aAAcjC,EAAKH,MAAM0I,mBAAmBf,GAAGvF,eAEjD,MAGJjC,EAAKC,SAAS,CAAEmH,gBAAiBrF,KAlCrB/B,EA8CdK,mBAAqB,WACnBL,EAAKC,SAAS,CAAEF,WAAW,EAAO0B,eAAe,KA/CrCzB,EAkDdgC,aAAe,WACb,GAAgC,KAA5BhC,EAAKH,MAAMoC,aACbjC,EAAKC,SAAS,CACZF,WAAW,EACXsD,YAAa,eACbnB,cAAe,8CAEZ,GAAmC,IAA/BlC,EAAKH,MAAMuH,gBACpBpH,EAAKC,SAAS,CACZF,WAAW,EACXsD,YAAa,eACbnB,cAAe,qCAEZ,GAAuB,OAAnBlC,EAAKH,MAAM+N,IACpB5N,EAAKC,SAAS,CACZF,WAAW,EACXsD,YAAa,eACbnB,cAAe,+BAEZ,CACLlC,EAAKC,SAAS,CAAEwB,eAAe,EAAMqM,aAAc,IACnD,IAAI5I,EAAW,IAAIC,SACnBD,EAASE,OAAO,WAAY3C,KAAKC,UAAU1C,EAAKH,QAChDqF,EAASE,OAAO,MAAOpF,EAAKH,MAAM+N,KAClCG,IACGC,QAAQ,CACP3L,OAAQ,OACR0J,IAAKrM,EAAO,kBAAA0C,OAAqBzC,GACjCmD,KAAMoC,EACN+I,iBAAkB,SAAAC,GAChBlO,EAAKC,SAAS,CACZ6N,aAAcI,EAAEC,OAASD,EAAEE,WAIhCzL,KAAK,SAAAG,GACJ9C,EAAKC,SAAS,CACZgC,aAAc,GACdc,WAAY,GACZqE,gBAAiB,EACjBrH,WAAW,EACXsD,YAAa,eACbnB,cAAe,mCAEjBlC,EAAKC,SAAS,CACZ6N,aAAc,MAGjB9K,MAAM,SAAAC,GACLjD,EAAKC,SAAS,CACZF,WAAW,EACXsD,YAAa,eACbnB,cAAe,kCAEjBgB,QAAQC,IAAIF,OAtGlBjD,EAAKH,MAAQ,CACXuD,WAAY,aACZnB,aAAc,GACdc,WAAY,GACZwF,mBAAoB,GACpBnB,gBAAiB,EACjBrH,WAAW,EACXsD,YAAa,GACbnB,cAAe,GACfT,eAAe,EACfmM,IAAK,KACLE,aAAc,GAbJ9N,mFAqCM,IAAAsF,EAAA/E,KAClB4B,MAAK,GAAAC,OACA1C,EADA,2DAAA0C,OACiEzC,IAEnEgD,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GAAI,OAAIwC,EAAKrF,SAAS,CAAEsI,mBAAoBzF,MACjDE,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,sCAkErB,IAAAsC,EAAAhF,KACC6C,EAAe7C,KAAKV,MAApBuD,WACFE,EACW,eAAfF,EACI,CACEG,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,KAEtB,KACAE,EACW,eAAfN,EACI,CACEK,WAAY,CAAED,KAAM,GAAIG,OAAQ,IAElC,KACN,OACEnD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,wBAAoB,KAEtBF,EAAAC,EAAAC,cAACkD,EAAA,EAAD,CAAMC,OAAQT,GACZ5C,EAAAC,EAAAC,cAACkD,EAAA,EAAKE,KAAN1C,OAAA2C,OAAA,CAAWC,MAAM,uBAA0BV,GACC,IAAzC/C,KAAKV,MAAM0I,mBAAmB/C,OAC7BhF,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgE,SAAA,KACEjE,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,MADF,0BACkC,KAGlCjF,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CACEC,YAAU,EACVC,MAAO,CAAEC,MAAO,KAChB3B,YAAY,wBACZ4B,iBAAiB,WACjB3B,SAAU5D,KAAKyE,mBACfe,aAAc,SAAC9B,EAAO+B,GAAR,OACZA,EAAO5F,MAAMY,SACViF,cACAC,QAAQjC,EAAMgC,gBAAkB,IAGpC1F,KAAKV,MAAM0I,mBAAmBpC,IAAI,SAAAuC,GACjC,OACElI,EAAAC,EAAAC,cAAC2N,GAAD,CACEtM,MAAK,GAAAK,OAAKsG,EAAarC,KACvBC,IAAKoC,EAAarC,KAEjBqC,EAAazG,kBAO1BzB,EAAAC,EAAAC,cAACkD,EAAA,EAAKE,KAAN1C,OAAA2C,OAAA,CAAWC,MAAM,qBAAwBV,GACvC9C,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CACEC,YAAY,uBACZnC,MAAOxB,KAAKV,MAAMoC,aAClBkC,SAAU5D,KAAKmB,aACfI,KAAK,kBAGTtB,EAAAC,EAAAC,cAACkD,EAAA,EAAKE,KAAN1C,OAAA2C,OAAA,CACEC,MAAM,qBACFV,EAFN,CAGEvB,MAAOxB,KAAKV,MAAMkD,WAClBoB,SAAU5D,KAAKmB,aACfI,KAAK,eAELtB,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CACEC,YAAY,0BACZnC,MAAOxB,KAAKV,MAAMkD,WAClBoB,SAAU5D,KAAKmB,aACfI,KAAK,gBAGTtB,EAAAC,EAAAC,cAACkD,EAAA,EAAKE,KAASJ,EAAf,2DAEElD,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CAAQC,KAAK,WACX7D,EAAAC,EAAAC,cAAA,SAAO6F,IAAI,eAAeX,MAAO,CAAEY,WAAY,OAA/C,eAGAhG,EAAAC,EAAAC,cAAA,SACE2D,KAAK,OACLoC,GAAG,eACHtC,SAAU,SAAAhE,GAAC,OAAIoF,EAAKV,WAAW1E,IAC/ByF,MAAO,CACLc,QAAS,EACTC,SAAU,WACVC,QAAS,OAKjBpG,EAAAC,EAAAC,cAAC4N,EAAA,EAAD,CAAUC,QAAmC,IAA1BhO,KAAKV,MAAMiO,aAAoBU,OAAO,WACzDhO,EAAAC,EAAAC,cAACkD,EAAA,EAAKE,KAASJ,EACblD,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CACEC,KAAK,UACLC,QAAS/D,KAAKV,MAAM4B,cACpB8C,QAAShE,KAAKyB,cAHhB,aASsB,IAAzBzB,KAAKV,MAAME,UACVS,EAAAC,EAAAC,cAAC8D,EAAD,CACEnE,mBAAoBE,KAAKF,mBACzBO,MAAOL,KAAKV,MAAMwD,YAClBtC,QAASR,KAAKV,MAAMqC,gBAGtB1B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgE,SAAA,cA5N6BxD,IAAMC,wCCJrCwD,GAAWC,IAAXD,OCQAkI,IDNiC3L,IAAMC,UCM3B2L,IAAZD,SACAE,GAAmBC,IAAnBD,QAASE,GAAUD,IAAVC,MAEIyB,oLAEjB,GAA8C,SAA1CxC,aAAaC,QAAQ,iBAA6B,CACpD,IAAIjC,EAAQ1J,KAAKH,MAAM6J,MACvB,OACEzJ,EAAAC,EAAAC,cAACsK,EAAA,EAAD,CAAQC,SAAUC,kBAChB1K,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAQ+B,MAAO,CAAEY,WAAY,OAC3BhG,EAAAC,EAAAC,cAACgO,GAAD,CAAO7I,MAAO,MAAOD,MAAO,CAAEsH,WAAY,SACxC1M,EAAAC,EAAAC,cAACyM,EAAA,EAAD,CACEC,MAAM,OACNC,KAAK,SACLzH,MAAO,CAAE6E,OAAQ,OAAQ6C,YAAa,IAEtC9M,EAAAC,EAAAC,cAACiO,GAAD,CACErI,IAAI,OACJ1F,MACEJ,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACwI,EAAA,EAAD,CAAM7E,KAAK,oBADb,cAMF7D,EAAAC,EAAAC,cAACyM,EAAA,EAAKrJ,KAAN,CAAWwC,IAAI,KACb9F,EAAAC,EAAAC,cAACkL,EAAA,EAAD,CAAME,GAAE,GAAA1J,OAAK6H,EAAM8B,IAAX,iBACL,IADH,mBAEmB,MAGrBvL,EAAAC,EAAAC,cAACyM,EAAA,EAAKrJ,KAAN,CAAWwC,IAAI,MACb9F,EAAAC,EAAAC,cAACkL,EAAA,EAAD,CAAME,GAAE,GAAA1J,OAAK6H,EAAM8B,IAAX,kBACL,IADH,qBAEqB,MAGvBvL,EAAAC,EAAAC,cAACyM,EAAA,EAAKrJ,KAAN,CAAWwC,IAAI,MAAf,aACA9F,EAAAC,EAAAC,cAACyM,EAAA,EAAKrJ,KAAN,CAAWwC,IAAI,MAAf,kBACA9F,EAAAC,EAAAC,cAACyM,EAAA,EAAKrJ,KAAN,CAAWwC,IAAI,MAAf,uBAIN9F,EAAAC,EAAAC,cAACkO,GAAD,KACEpO,EAAAC,EAAAC,cAACyL,EAAA,EAAD,KACE3L,EAAAC,EAAAC,cAAC0L,EAAA,EAAD,CACEE,KAAI,GAAAlK,OAAK6H,EAAM8B,IAAX,gBACJQ,OAAQ,SAAAnM,GAAK,OAAII,EAAAC,EAAAC,cAACmO,GAAczO,MAElCI,EAAAC,EAAAC,cAAC0L,EAAA,EAAD,CACEE,KAAI,GAAAlK,OAAK6H,EAAM8B,IAAX,iBACJQ,OAAQ,SAAAnM,GAAK,OAAII,EAAAC,EAAAC,cAAA,cAAiBN,MAEpCI,EAAAC,EAAAC,cAAC0L,EAAA,EAAD,CACEE,KAAI,GAAAlK,OAAK6H,EAAM8B,IAAX,aACJQ,OAAQ,SAAAnM,GAAK,OAAII,EAAAC,EAAAC,cAAA,8BAEnBF,EAAAC,EAAAC,cAAC0L,EAAA,EAAD,CACEE,KAAI,GAAAlK,OAAK6H,EAAM8B,IAAX,aACJQ,OAAQ,SAAAnM,GAAK,OAAII,EAAAC,EAAAC,cAAA,mCAEnBF,EAAAC,EAAAC,cAAC0L,EAAA,EAAD,CACEE,KAAI,GAAAlK,OAAK6H,EAAM8B,IAAX,eACJQ,OAAQ,SAAAnM,GAAK,OAAII,EAAAC,EAAAC,cAAA,2BAQ7B,OAAOF,EAAAC,EAAAC,cAACgM,EAAA,EAAD,CAAUZ,GAAI,CAAEa,SAAU,mBApEE1L,IAAMC,WCb1B4N,eACnB,SAAAA,EAAY1O,GAAO,IAAAJ,EAAA,OAAAoB,OAAAC,EAAA,EAAAD,CAAAb,KAAAuO,IACjB9O,EAAAoB,OAAAE,EAAA,EAAAF,CAAAb,KAAAa,OAAAG,EAAA,EAAAH,CAAA0N,GAAAtN,KAAAjB,KAAMH,KASR2O,OAAS,WACP/O,EAAKC,SAAS,CAAE+O,UAAU,IAC1B,IAAI/G,EAAWjI,EAAKH,MACpBsC,MAAK,GAAAC,OAAI1C,EAAJ,qBAAA0C,OAA+BzC,GAAU,CAC5C0C,OAAQ,OACRC,QAAS,CACPC,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUuF,KAEpBtF,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GACU,YAAdA,EAAKmM,KACDnF,MAAM,uBACNA,MAAM,qDACV9J,EAAKC,SAAS,CAAE+O,UAAU,MAE3BhM,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAzB5BjD,EAAKH,MAAQ,CACXoP,KAAM,GACNC,SAAU,GACV5K,SAAS,EACT0K,UAAU,GANKhP,mFA8BC,IAAAsF,EAAA/E,KAClBA,KAAKN,SAAS,CAAEqE,SAAS,IACzBnC,MAAK,GAAAC,OAAI1C,EAAJ,kBAAA0C,OAA4BzC,IAC9BgD,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GACJwC,EAAKrF,SAAS,CACZgP,KAAMnM,EAAKmM,KACXC,SAAUpM,EAAKoM,SACf5K,SAAS,MAGZtB,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,sCAGrB,IAAAsC,EAAAhF,KACP,OAA2B,IAAvBA,KAAKV,MAAMyE,QAEX9D,EAAAC,EAAAC,cAAA,OAAKkF,MAAO,CAAEuE,QAAS,MAAOC,YAAa,QACzC5J,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,CAAMmD,KAAK,WAKbpI,EAAAC,EAAAC,cAAA,OAAKkF,MAAO,CAAEuE,QAAS,KAAM3D,WAAY,QACvChG,EAAAC,EAAAC,cAAA,MAAIkF,MAAO,CAAEwE,YAAa,OAA1B,wBACA5J,EAAAC,EAAAC,cAAA,OAAKkF,MAAO,CAAEuE,QAAS,OACrB3J,EAAAC,EAAAC,cAACmI,EAAA,EAAD,KACErI,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAKtF,KAAM,IACThD,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CACEC,YAAY,GACZnC,MAAOxB,KAAKV,MAAMoP,KAClB9K,SAAU,SAAAgL,GAAG,OAAI5J,EAAKtF,SAAS,CAAEgP,KAAME,EAAItN,OAAOE,SAClDD,KAAK,UAGTtB,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAKnF,OAAQ,EAAGH,KAAM,IACpBhD,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CACEC,YAAY,GACZnC,MAAOxB,KAAKV,MAAMqP,SAClB/K,SAAU,SAAAgL,GAAG,OACX5J,EAAKtF,SAAS,CAAEiP,SAAUC,EAAItN,OAAOE,SAEvCD,KAAK,eAIXtB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACmI,EAAA,EAAD,KACErI,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAKtF,KAAM,KACXhD,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAKnF,OAAQ,EAAGH,KAAM,KACK,IAAxBjD,KAAKV,MAAMmP,SACVxO,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CACEwE,KAAM,QACNvE,KAAK,UACLC,QAAS/D,KAAKV,MAAMmP,UAHtB,gBAQAxO,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CACEyB,MAAM,OACNxB,KAAK,UACLuE,KAAM,QACNrE,QAAShE,KAAKwO,QAJhB,8BA7F2B9N,IAAMC,gFCG3C6F,GAAaC,IAAbD,SAEaqI,eACnB,SAAAA,EAAYhP,GAAO,IAAAJ,EAAA,OAAAoB,OAAAC,EAAA,EAAAD,CAAAb,KAAA6O,IACjBpP,EAAAoB,OAAAE,EAAA,EAAAF,CAAAb,KAAAa,OAAAG,EAAA,EAAAH,CAAAgO,GAAA5N,KAAAjB,KAAMH,KA6BRC,mBAAqB,WACnBL,EAAKC,SAAS,CAAEF,WAAW,EAAO0B,eAAe,KA/BhCzB,EAkCnBkH,aAAe,WACb,IADmBC,EASqCnH,EAAKH,MAArDwH,EATWF,EASXE,aAAcC,EATHH,EASGG,qBAAsBC,EATzBJ,EASyBI,QAC5C,MAAqB,KAAjBF,GACFrH,EAAKC,SAAS,CACZF,WAAW,EACXsD,YAAa,eACbnB,cAAe,8BAEV,GACqB,IAAnBqF,EAAQ/B,QACjBxF,EAAKC,SAAS,CACZF,WAAW,EACXsD,YAAa,eACbnB,cAAe,yBAEV,IACwB,IAvBX,WACpB,IAAK,IAAIsF,EAAI,EAAGA,EAAIxH,EAAKH,MAAM0H,QAAQ/B,OAAQgC,IAC7C,GAAkD,KAA9CxH,EAAKH,MAAM0H,QAAQC,GAAG6H,oBACxB,OAAO,EAGX,OAAO,EAiBE5H,IACTzH,EAAKC,SAAS,CACZF,WAAW,EACXsD,YAAa,eACbnB,cAAe,iCAEV,GAC2B,IAAzBoF,GACTtH,EAAKC,SAAS,CACZF,WAAW,EACXsD,YAAa,eACbnB,cAAe,sCAEV,KAEPoF,EAAuBC,EAAQ/B,QAC/B8B,EAAuB,KAEvBtH,EAAKC,SAAS,CACZF,WAAW,EACXsD,YAAa,eACbnB,cAAe,oBAEV,IAjFQlC,EAuFnB0B,aAAe,SAAAC,GAEb,IADA,IAAI+F,GAAQ,EACHF,EAAI,EAAGA,EAAIX,EAAarB,OAAQgC,IACvC,IAA0D,IAAtD7F,EAAME,OAAOE,MAAMmE,QAAQW,EAAaW,GAAG1F,MAAc,CAC3D4F,GAAQ,EACR1H,EAAKC,SAALmB,OAAAQ,EAAA,EAAAR,CAAA,GACGO,EAAME,OAAOC,KAAOH,EAAME,OAAOE,MAAM4F,QACtCd,EAAaW,GAAG1F,KAChB+E,EAAaW,GAAGV,WAGpB,MAGCY,GACH1H,EAAKC,SAALmB,OAAAQ,EAAA,EAAAR,CAAA,GAAiBO,EAAME,OAAOC,KAAOH,EAAME,OAAOE,SAtGnC/B,EA0GnB4H,mBAAqB,SAACC,EAAOlG,GAC3BA,EAAMmG,UAGN,IAFA,IAemDwH,EAf/CvH,EAAS,GACTL,GAAQ,EACHF,EAAI,EAAGA,EAAIX,EAAarB,OAAQgC,IACvC,IAA0D,IAAtD7F,EAAME,OAAOE,MAAMmE,QAAQW,EAAaW,GAAG1F,MAAc,CAC3D4F,GAAQ,EACRK,EAAS3G,OAAO2C,OAAO/D,EAAKH,MAAM0H,QAAQM,GAAjCzG,OAAAQ,EAAA,EAAAR,CAAA,GACNO,EAAME,OAAOC,KAAOH,EAAME,OAAOE,MAAM4F,QACtCd,EAAaW,GAAG1F,KAChB+E,EAAaW,GAAGV,WAGpB,MAGCY,IAEDK,EADwB,wBAAtBpG,EAAME,OAAOC,KACNV,OAAO2C,OAAO/D,EAAKH,MAAM0H,QAAQM,IAAjCyH,EAAA,GAAAlO,OAAAQ,EAAA,EAAAR,CAAAkO,EACN3N,EAAME,OAAOC,KAAOH,EAAME,OAAOE,OAD3BX,OAAAQ,EAAA,EAAAR,CAAAkO,EAAA,oBAEY3N,EAAME,OAAOE,OAFzBuN,IAKAlO,OAAO2C,OAAO/D,EAAKH,MAAM0H,QAAQM,GAAjCzG,OAAAQ,EAAA,EAAAR,CAAA,GACNO,EAAME,OAAOC,KAAOH,EAAME,OAAOE,SAIxC/B,EAAKC,SAAS,SAAAJ,GAAK,OAAAuB,OAAAQ,EAAA,EAAAR,CAAA,GAAQvB,EAAM0H,QAAQM,GAASE,MAtIjC/H,EAyInBgF,mBAAqB,SAAAjD,GACnB/B,EAAKC,SAAS,CAAEmH,gBAAiBrF,KA1IhB/B,EA6InBgC,aAAe,SAAA7B,GACb,IAA4B,IAAxBH,EAAKkH,eAAyB,CAChC,IAAIc,EAAW,4CAAA5F,OAA+CzC,GAC9DK,EAAKC,SAAS,CAAEwB,eAAe,IAC/B,IAAIyD,EAAW,IAAIC,SACb8C,EAAW,CACfK,YAAatI,EAAKH,MAAMyI,YACxBjB,aAAcrH,EAAKH,MAAMwH,aACzBa,WAAYlI,EAAKH,MAAMqI,WACvBX,QAASvH,EAAKH,MAAM0H,QACpBD,qBAAsBtH,EAAKH,MAAMyH,sBAEnCpC,EAASE,OAAO,WAAY3C,KAAKC,UAAUuF,IACpB,OAAnBjI,EAAKH,MAAMsI,MACbH,EAAW,yCAAA5F,OAA4CzC,GACvDuF,EAASE,OAAO,iBAAkBpF,EAAKH,MAAMsI,MAE/ChG,MAAMzC,EAAUsI,EAAa,CAC3B3F,OAAQ,OACRG,KAAM0C,IAELvC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GACc,YAAdA,EAAKmM,KACPjP,EAAKC,SAAS,CACZwB,eAAe,EACf1B,WAAW,EACXsD,YAAa,eACbnB,cAAe,kCAGjBlC,EAAKC,SAAS,CACZwB,eAAe,EACf1B,WAAW,EACXsD,YAAa,QACbnB,cAAe,mBAIpBc,MAAM,SAAAC,GACLjD,EAAKC,SAAS,CACZF,WAAW,EACXsD,YAAa,eACbnB,cAAe,qCAEjBgB,QAAQC,IAAIF,OA1LDjD,EAgMnB6E,WAAa,SAAA1E,GACXH,EAAKC,SAAS,CAAEkI,IAAKhI,EAAE0B,OAAOkD,MAAM,MAjMnB/E,EAoMnBoI,mBAAqB,WACnB,IAAMC,EAAY,CAChBhB,aAAc,GACda,WAAY,GACZI,YAAa,IAEftI,EAAKC,SAAS,SAAAJ,GAAK,MAAK,CACtB0H,QAAS1H,EAAM0H,QAAQnF,OAAOiG,OAzMhCrI,EAAKH,MAAQ,CACXwH,aAAc,GACda,WAAY,GACZ9E,WAAY,aACZmE,QAAS,GACTD,qBAAsB,KACtBgB,YAAa,GACbH,IAAK,KACLoH,QAAS,KACT9N,eAAe,EACf1B,WAAW,EACXsD,YAAa,GACbnB,cAAe,IAdAlC,mFAkBC,IACVwP,EAAajP,KAAKH,MAAlBoP,SACRjP,KAAKN,SAAS,CACZqI,YAAakH,EAASC,iBACtBpI,aAAcmI,EAASnI,aACvBa,WAAYsH,EAAStH,WACrBX,QAASiI,EAASE,aAClBpI,qBAAsBkI,EAASlI,qBAC/BiI,QAASC,EAASrH,uCAqLb,IAAA7C,EAAA/E,KACC6C,EAAe7C,KAAKV,MAApBuD,WACFE,EACW,eAAfF,EACI,CACEG,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,KAEtB,KACAE,EACW,eAAfN,EACI,CACEK,WAAY,CAAED,KAAM,GAAIG,OAAQ,IAElC,KAEN,OACEnD,EAAAC,EAAAC,cAAA,OAAKiP,UAAU,OACbnP,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACkD,EAAA,EAAD,CACEC,OAAQT,EACRoF,OAAO,IACPnG,OAAO,OACPoG,QAAQ,uBAERjI,EAAAC,EAAAC,cAACkD,EAAA,EAAKE,KAAN1C,OAAA2C,OAAA,CAAWC,MAAM,YAAeV,GAC9B9C,EAAAC,EAAAC,cAACmI,EAAA,EAAD,KACErI,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAKtF,KAAM,IACThD,EAAAC,EAAAC,cAACkP,GAAD,CACE9N,KAAK,eACLC,MAAOxB,KAAKV,MAAMwH,aAClB0B,KAAM,EACN7E,YAAY,aACZC,SAAU5D,KAAKmB,gBAGnBlB,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAKtF,KAAM,GAAIG,OAAQ,GACrBnD,EAAAC,EAAAC,cAACkP,GAAD,CACE9N,KAAK,aACLC,MAAOxB,KAAKV,MAAMqI,WAClBa,KAAM,EACN7E,YAAY,WACZC,SAAU5D,KAAKmB,kBAKvBlB,EAAAC,EAAAC,cAAA,OAAKkF,MAAO,CAAEuE,QAAS,OACrB3J,EAAAC,EAAAC,cAACmI,EAAA,EAAD,KACErI,EAAAC,EAAAC,cAACoI,EAAA,EAAD,KAC0B,OAAvBvI,KAAKV,MAAM0P,QACV/O,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgE,SAAA,MAEAjE,EAAAC,EAAAC,cAAA,OACEiK,IAAI,gBACJD,IAAG,GAAAtI,OAAK1C,GAAL0C,Ob5QA,Ua4QA,eAAAA,OAAoC7B,KAAKV,MAAM0P,cAM5D/O,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACCH,KAAKV,MAAM0H,QAAQpB,IAAI,SAACH,EAAQ6B,GAC/B,OACErH,EAAAC,EAAAC,cAACmP,GAAD,CACEvJ,IAAKuB,EACL7B,OAAQA,EACR6B,MAAOA,EACPD,mBAAoBtC,EAAKsC,mBACzBkI,aAAcxK,EAAKwK,iBAIzBtP,EAAAC,EAAAC,cAACkD,EAAA,EAAKE,KAAN1C,OAAA2C,OAAA,CAAWC,MAAM,kBAAqBV,GACpC9C,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CACEI,KAAI,SACJ+E,IAAK7I,KAAKV,MAAM0H,QAAQ/B,OACxB6D,IAAK,EACLtH,MAAOxB,KAAKV,MAAMyH,qBAClBnD,SAAU5D,KAAKmB,aACfI,KAAK,0BAGTtB,EAAAC,EAAAC,cAACkD,EAAA,EAAKE,KAASJ,EAAf,mCAEElD,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CAAQC,KAAK,WACX7D,EAAAC,EAAAC,cAAA,SAAO6F,IAAI,eAAeX,MAAO,CAAEY,WAAY,OAA/C,eAGAhG,EAAAC,EAAAC,cAAA,SACE2D,KAAK,OACLoC,GAAG,eACHtC,SAAU,SAAAhE,GAAC,OAAImF,EAAKT,WAAW1E,IAC/ByF,MAAO,CACLc,QAAS,EACTC,SAAU,WACVC,QAAS,OAKjBpG,EAAAC,EAAAC,cAACkD,EAAA,EAAKE,KAASJ,EACblD,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CACEC,KAAK,UACLC,QAAS/D,KAAKV,MAAM4B,cACpB8C,QAAShE,KAAKyB,cAHhB,sBASsB,IAAzBzB,KAAKV,MAAME,UACVS,EAAAC,EAAAC,cAAC8D,EAAD,CACEnE,mBAAoBE,KAAKF,mBACzBO,MAAOL,KAAKV,MAAMwD,YAClBtC,QAASR,KAAKV,MAAMqC,gBAGtB1B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgE,SAAA,cAvUgCxD,IAAMC,WA8U1CoI,eACJ,SAAAA,EAAYlJ,GAAO,IAAAmF,EAAA,OAAAnE,OAAAC,EAAA,EAAAD,CAAAb,KAAA+I,IACjB/D,EAAAnE,OAAAE,EAAA,EAAAF,CAAAb,KAAAa,OAAAG,EAAA,EAAAH,CAAAkI,GAAA9H,KAAAjB,KAAMH,KACDP,MAAQ,CACXuD,WAAY,cAHGmC,qHAQV,IAAAgE,EAAAhJ,KAED+C,EACW,eAFM/C,KAAKV,MAApBuD,WAGF,CACEG,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,KAEtB,KACN,OACEhD,EAAAC,EAAAC,cAACkD,EAAA,EAAKE,KAAN1C,OAAA2C,OAAA,CAAWC,MAAK,UAAA5B,OAAY7B,KAAKH,MAAMyH,MAAQ,IAASvE,GACtD9C,EAAAC,EAAAC,cAACmI,EAAA,EAAD,KACErI,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAKtF,KAAM,IACThD,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CACElC,MAAOxB,KAAKH,MAAM4F,OAAOqJ,oBACzBzG,KAAK,QACL9G,KAAK,sBACLoC,YAAY,kBACZC,SAAU,SAAAxC,GAAK,OACb4H,EAAKnJ,MAAMwH,mBAAmB2B,EAAKnJ,MAAMyH,MAAOlG,OAItDnB,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAKtF,KAAM,GAAIG,OAAQ,GACrBnD,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CACElC,MAAOxB,KAAKH,MAAM4F,OAAO+J,kBACzBnH,KAAK,QACL9G,KAAK,oBACLoC,YAAY,gBACZC,SAAU,SAAAxC,GAAK,OACb4H,EAAKnJ,MAAMwH,mBAAmB2B,EAAKnJ,MAAMyH,MAAOlG,gBAvCnCV,IAAMC,WClV3B8O,GAAUC,KAAVD,MAEaE,8MACnBrQ,MAAQ,CACNsQ,eAAgB,GAChB7L,SAAS,EACT8L,oBAAqB,MAEvBC,UAAY,SAAAhK,GACVrG,EAAKC,SAAS,CAAEqE,SAAS,IACzBnC,MAAK,GAAAC,OAAI1C,EAAJ,0CAAA0C,OAAoDiE,EAApD,KAAAjE,OAA2DzC,IAC7DgD,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GACJ,GAAoB,IAAhBA,EAAK0C,OAAc,CACrBxF,EAAKC,SAAS,CAAEkQ,eAAgBrN,IAQhC,IANA,IAAIqN,EAAiBrN,EACjBsN,EAAsB,GACtBE,EAAgB,CAAEZ,aAAc,IAGhCa,EAA4B,KACvB/I,EAAI,EAAGA,GAAK2I,EAAe3K,OAAQgC,IAAK,CAC/C,GAAIA,IAAM2I,EAAe3K,OAAQ,CAC/B4K,EAAoBI,KAAKF,GACzBG,EACA,MAGAF,IAA8BJ,EAAe3I,GAAGiI,kBAEtC,IAANjI,IACF4I,EAAoBI,KAAKF,GACzBG,GAEFH,EAAgB,CAAEZ,aAAc,IAChCa,EAA4BJ,EAAe3I,GAAGiI,iBAC9Ca,EAAcb,iBACZU,EAAe3I,GAAGiI,iBACpBa,EAAcjJ,aAAe8I,EAAe3I,GAAGH,aAC/CiJ,EAAcpI,WAAaiI,EAAe3I,GAAGU,WAC7CoI,EAAchJ,qBACZ6I,EAAe3I,GAAGF,qBACpBgJ,EAAcnI,IAAMgI,EAAe3I,GAAGW,IACtCmI,EAAcI,cAAe,EAC7BJ,EAAcK,gBAAkB,EAChCL,EAAcZ,aAAac,KAAK,CAC9BI,UAAWT,EAAe3I,GAAGoJ,UAC7BvB,oBAAqBc,EAAe3I,GAAG6H,oBACvCU,kBAAmBI,EAAe3I,GAAGuI,qBAGvCO,EAAcZ,aAAac,KAAK,CAC9BI,UAAWT,EAAe3I,GAAGoJ,UAC7BvB,oBAAqBc,EAAe3I,GAAG6H,oBACvCU,kBAAmBI,EAAe3I,GAAGuI,oBAK3C/P,EAAKC,SAAS,CACZmQ,oBAAqBA,EACrB9L,SAAS,SAIXwF,MAAM,qDAGT9G,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,yFAG5B1C,KAAK8P,UAAU9P,KAAKH,MAAMyQ,2DAGFC,GAEpBA,IAAcvQ,KAAKH,OACrBG,KAAK8P,UAAUS,EAAUD,0CAI3B,OAA2B,IAAvBtQ,KAAKV,MAAMyE,QACN9D,EAAAC,EAAAC,cAAA,0BAGPF,EAAAC,EAAAC,cAAA,OAAKkF,MAAO,CAAEY,WAAY,OACxBhG,EAAAC,EAAAC,cAACqQ,GAAA,EAAD,CAAUC,WAAS,GAChBzQ,KAAKV,MAAMuQ,oBAAoBjK,IAAI,SAACoE,EAAM1C,GACzC,OACErH,EAAAC,EAAAC,cAACsP,GAAD,CACEiB,OAAQ,GAAA7O,OAAGyF,EAAQ,EAAX,OAAoB0C,EAAKlD,aACjCf,IAAKiE,EAAKkF,kBAEVjP,EAAAC,EAAAC,cAACwQ,GAAD,CAAc1B,SAAUjF,gBA5FUtJ,IAAMC,WCGnCiQ,eACnB,SAAAA,EAAY/Q,GAAO,IAAAJ,EAAA,OAAAoB,OAAAC,EAAA,EAAAD,CAAAb,KAAA4Q,IACjBnR,EAAAoB,OAAAE,EAAA,EAAAF,CAAAb,KAAAa,OAAAG,EAAA,EAAAH,CAAA+P,GAAA3P,KAAAjB,KAAMH,KAqDRgR,WAAa,SAACC,EAAMC,EAAYC,GAC9B,OAAQA,GACN,IAAK,2BACHvR,EAAKC,SAAS,CACZuR,yBAA0BC,KACvBC,SAASJ,GACTK,YACAC,aAEL,MACF,IAAK,qBACH5R,EAAKC,SAAS,CAAE4R,mBAAoBP,IACpC,MACF,IAAK,WACHtR,EAAKC,SAAS,CAAE6R,SAAUR,IAC1B,MACF,QACEpO,QAAQC,IAAI,aAvECnD,EA2EnB+R,WAAa,SAACC,EAAMC,GAClBjS,EAAKC,SAAS,CAAEiS,mBAAoBD,KA5EnBjS,EA+EnB0B,aAAe,SAAAC,GACb3B,EAAKC,SAALmB,OAAAQ,EAAA,EAAAR,CAAA,GAAiBO,EAAME,OAAOC,KAAOH,EAAME,OAAOE,SAhFjC/B,EAqFnBmS,iBAAmB,SAACC,EAAMb,GACxB,OAAQA,GACN,IAAK,qBACHvR,EAAKC,SAAS,CAAEoS,mBAAoBD,IACpC,MACF,IAAK,gBACHpS,EAAKC,SAAS,CAAEqS,mBAAoBF,IACpC,MACF,IAAK,WACHpS,EAAKC,SAAS,CAAEsS,cAAeH,IAC/B,MACF,QACElP,QAAQC,IAAI,aAjGCnD,EAqGnBwS,YAAc,SAAAjB,GACZ,OAAQA,GACN,IAAK,qBACHvR,EAAKC,SAAS,CAAEoS,oBAAoB,IACpC,MACF,IAAK,gBACHrS,EAAKC,SAAS,CAAEqS,oBAAoB,IACpC,MACF,IAAK,WACHtS,EAAKC,SAAS,CAAEsS,eAAe,IAC/B,MACF,QACErP,QAAQC,IAAI,iBAjHCnD,EAqHnBK,mBAAqB,WACnBL,EAAKC,SAAS,CAAEF,WAAW,EAAO0B,eAAe,KAtHhCzB,EA2HnByS,iBAAmB,WACjB,IAAMxK,EAAWjI,EAAKH,MACS,KAA3BoI,EAASyK,cACX1S,EAAKC,SAAS,CACZF,WAAW,EACXa,MAAO,eACPsB,cAAe,0BAEwB,KAAhC+F,EAASiK,mBAClBlS,EAAKC,SAAS,CACZF,WAAW,EACXa,MAAO,eACPsB,cAAe,kCAEwB,KAAhC+F,EAAS4J,mBAClB7R,EAAKC,SAAS,CACZF,WAAW,EACXa,MAAO,eACPsB,cAAe,kCAE8B,KAAtC+F,EAASuJ,yBAClBxR,EAAKC,SAAS,CACZF,WAAW,EACXa,MAAO,eACPsB,cAAe,iCAEc,KAAtB+F,EAAS6J,SAClB9R,EAAKC,SAAS,CACZF,WAAW,EACXa,MAAO,eACPsB,cAAe,gCAGjBlC,EAAKC,SAAS,CAAEwB,eAAe,IAC/BU,MAAMzC,EAAO,gBAAqBC,EAAQ,CACxC0C,OAAQ,OACRC,QAAS,CACPC,eAAgB,oBAElBC,KAAMC,KAAKC,UAALtB,OAAAuR,GAAA,EAAAvR,CAAA,GAAoB6G,EAApB,CAA8B5B,IAAKrG,EAAKI,MAAMwS,KAAKvM,SAExD1D,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GACJ9C,EAAKC,SAAS,CACZF,WAAW,EACXa,MAAO,eACPsB,cAAeY,EAAK/B,QACpB8R,cAAc,EACdC,aAAchQ,EAAK8P,SAGtB5P,MAAM,SAAAC,GACLjD,EAAKC,SAAS,CACZF,WAAW,EACXa,MAAO,gBACPsB,cAAe,sCAEjBgB,QAAQC,IAAIF,OAlLlBjD,EAAKH,MAAQ,CACXuD,WAAY,aACZsP,cAAetS,EAAMwS,KAAKF,cAC1BK,YAAa3S,EAAMwS,KAAKG,YACxBtR,eAAe,EACf1B,WAAW,EACXsD,YAAa,GACbnB,cAAe,GACfsP,yBAA0BpR,EAAMwS,KAAKI,6BACrCd,mBAAoB9R,EAAMwS,KAAKV,mBAC/BL,mBAAoBzR,EAAMwS,KAAKf,mBAC/BS,oBAAoB,EACpBD,oBAAoB,EACpBE,eAAe,EACfT,SAAU1R,EAAMwS,KAAKd,SACrBmB,aAA0C,SAA5B7S,EAAMwS,KAAKK,aACzBC,iBAAkD,SAAhC9S,EAAMwS,KAAKM,iBAC7BL,cAAc,EACdC,aAAc,GACdjC,QAASzQ,EAAMwS,KAAKvM,KArBLrG,yFAyBO8Q,GAEpBA,IAAcvQ,KAAKH,OACrBG,KAAKN,SAAS,CACZmD,WAAY,aACZsP,cAAe5B,EAAU8B,KAAKF,cAC9BK,YAAajC,EAAU8B,KAAKG,YAC5BtR,eAAe,EACf1B,WAAW,EACXsD,YAAa,GACbnB,cAAe,GACfsP,yBAA0BV,EAAU8B,KAAKI,6BACzCd,mBAAoBpB,EAAU8B,KAAKV,mBACnCL,mBAAoBf,EAAU8B,KAAKf,mBACnCS,oBAAoB,EACpBD,oBAAoB,EACpBE,eAAe,EACfT,SAAUhB,EAAU8B,KAAKd,SACzBmB,aAA8C,SAAhCnC,EAAU8B,KAAKK,aAC7BC,iBAAsD,SAApCpC,EAAU8B,KAAKM,iBACjCL,cAAc,EACdC,aAAc,GACdjC,QAASC,EAAU8B,KAAKvM,uCA4IrB,IAAAf,EAAA/E,KACP,OACEC,EAAAC,EAAAC,cAAA,OAAKkF,MAAO,CAAEuE,QAAS,OACrB3J,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,4BAEFF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACmI,EAAA,EAAD,KACErI,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAKtF,KAAM,IACThD,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CACEC,YAAY,4DACZnC,MAAOxB,KAAKV,MAAM6S,cAClBvO,SAAU5D,KAAKmB,aACfI,KAAK,mBAGTtB,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAKnF,OAAQ,EAAGH,KAAM,IACpBhD,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CACEC,YAAY,4DACZnC,MAAOxB,KAAKV,MAAMkT,YAClB5O,SAAU5D,KAAKmB,aACfI,KAAK,kBAIXtB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACmI,EAAA,EAAD,KACErI,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAKtF,KAAM,IACThD,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAACyS,GAAA,EAAD,CACEhP,SAAU5D,KAAKwR,WACfhQ,MAAO0P,KAAOlR,KAAKV,MAAMqS,uBAG7B1R,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAKtF,KAAM,GAAIG,OAAQ,GACrBnD,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAC0S,GAAA,EAAD,CACE9I,aAAcmH,KAAOlR,KAAKV,MAAMgS,mBAAoB,YACpDO,KAAM7R,KAAKV,MAAMwS,mBACjBgB,aAAc,SAAAjB,GAAI,OAChB9M,EAAK6M,iBAAiBC,EAAM,uBAE9BjO,SAAU,SAACkN,EAAMC,GAAP,OACRhM,EAAK8L,WAAWC,EAAMC,EAAY,uBAEpCgC,MAAO,kBACL9S,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CACEwE,KAAK,QACLvE,KAAK,UACLE,QAAS,kBAAMe,EAAKkN,YAAY,wBAHlC,WAWRhS,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACmI,EAAA,EAAD,KACErI,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAKtF,KAAM,IACThD,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAC0S,GAAA,EAAD,CACE9I,aAAcmH,KAAO8B,IACmB,IAAtChT,KAAKV,MAAM2R,0BAEbY,KAAM7R,KAAKV,MAAMyS,mBACjBe,aAAc,SAAAjB,GAAI,OAChB9M,EAAK6M,iBAAiBC,EAAM,kBAE9BjO,SAAU,SAACkN,EAAMC,GAAP,OACRhM,EAAK8L,WAAWC,EAAMC,EAAY,6BAEpCgC,MAAO,kBACL9S,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CACEwE,KAAK,QACLvE,KAAK,UACLE,QAAS,kBAAMe,EAAKkN,YAAY,mBAHlC,UAUNhS,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAKtF,KAAM,GAAIG,OAAQ,GACrBnD,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAC0S,GAAA,EAAD,CACE9I,aAAcmH,KAAOlR,KAAKV,MAAMiS,SAAU,YAC1CM,KAAM7R,KAAKV,MAAM0S,cACjBc,aAAc,SAAAjB,GAAI,OAAI9M,EAAK6M,iBAAiBC,EAAM,aAClDjO,SAAU,SAACkN,EAAMC,GAAP,OACRhM,EAAK8L,WAAWC,EAAMC,EAAY,aAEpCgC,MAAO,kBACL9S,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CACEwE,KAAK,QACLvE,KAAK,UACLE,QAAS,kBAAMe,EAAKkN,YAAY,cAHlC,WAWRhS,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACmI,EAAA,EAAD,KACErI,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAKtF,KAAM,IACThD,EAAAC,EAAAC,cAAA,8CACAF,EAAAC,EAAAC,cAAC8S,GAAA,EAAD,CACEC,eAAgBlT,KAAKV,MAAMoT,aAC3B9O,SAAU,SAAApC,GACRuD,EAAKrF,SAAS,CAAEgT,aAAclR,QAIpCvB,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAKnF,OAAQ,EAAGH,KAAM,IACpBhD,EAAAC,EAAAC,cAAA,wDACAF,EAAAC,EAAAC,cAAC8S,GAAA,EAAD,CACEC,eAAgBlT,KAAKV,MAAMqT,iBAC3B/O,SAAU,SAAApC,GACRuD,EAAKrF,SAAS,CAAEiT,iBAAkBnR,SAK1CvB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,YAC8B,IAA7BH,KAAKV,MAAM4B,cACVjB,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CACEwE,KAAM,QACNvE,KAAK,UACLC,QAAS/D,KAAKV,MAAM4B,eAHtB,mBAQAjB,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CACEyB,MAAM,OACNxB,KAAK,UACLuE,KAAM,QACNrE,QAAShE,KAAKkS,kBAJhB,gBASwB,IAAzBlS,KAAKV,MAAME,UACVS,EAAAC,EAAAC,cAAC8D,EAAD,CACEnE,mBAAoBE,KAAKF,mBACzBO,MAAOL,KAAKV,MAAMwD,YAClBtC,QAASR,KAAKV,MAAMqC,gBAGtB1B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgE,SAAA,MAEFjE,EAAAC,EAAAC,cAACgT,GAAD,CAAsB7C,QAAStQ,KAAKV,MAAMgR,kBAzVV5P,IAAMC,WCFxCwD,GAASC,IAAOD,OAEDiP,8MACnB9T,MAAQ,CACN+T,UAAW,GACXC,eAAgB,GAChBC,iBAAkB,GAClBlB,KAAM,MAURvC,UAAY,SAAAhK,GACVlE,MAAK,GAAAC,OAAI1C,EAAJ,2BAAA0C,OAAqCiE,EAArC,KAAAjE,OAA4CzC,IAC9CgD,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAFH,eAAAoR,EAAA3S,OAAA4S,GAAA,EAAA5S,CAAA6S,GAAAxT,EAAAyT,KAEQ,SAAAC,EAAMrR,GAAN,OAAAmR,GAAAxT,EAAA2T,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACEvU,EAAKC,SAAS,CAAE2S,KAAM9P,EAAMgR,iBAAkBzN,IADhD,wBAAAgO,EAAAG,SAAAL,EAAA5T,SAFR,gBAAAkU,GAAA,OAAAV,EAAAW,MAAAnU,KAAAoU,YAAA,IAKG3R,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAG9B2R,qDAAe,SAAAC,EAAMxO,GAAN,OAAA4N,GAAAxT,EAAA2T,KAAA,SAAAU,GAAA,cAAAA,EAAAR,KAAAQ,EAAAP,MAAA,OACbvU,EAAKqQ,UAAUhK,GADF,wBAAAyO,EAAAN,SAAAK,EAAAtU,kJAhBK,IAAA+E,EAAA/E,KAClB4B,MAAK,GAAAC,OAAI1C,EAAJ,yBAAA0C,OAAmCzC,IACrCgD,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GAAI,OAAIwC,EAAKrF,SAAS,CAAE2T,UAAW9Q,EAAM+Q,eAAgB/Q,MAC9DE,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,sCAiB5B,OACEzC,EAAAC,EAAAC,cAAA,OAAKkF,MAAO,CAAEY,WAAY,OACxBhG,EAAAC,EAAAC,cAACmI,EAAA,EAAD,CAAKjD,MAAO,CAAEwE,YAAa,OACzB5J,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAKtF,KAAM,GAAIG,OAAQ,GACrBnD,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CACEC,YAAU,EACVC,MAAO,CAAEC,MAAO,KAChB3B,YAAY,gBACZ4B,iBAAiB,WACjB3B,SAAU5D,KAAKqU,aACf7O,aAAc,SAAC9B,EAAO+B,GAAR,OACZA,EAAO5F,MAAMY,SACViF,cACAC,QAAQjC,EAAMgC,gBAAkB,IAGpC1F,KAAKV,MAAMgU,eAAe1N,IAAI,SAACoE,EAAMjE,GACpC,OACE9F,EAAAC,EAAAC,cAACqU,GAAD,CAAQzO,IAAKiE,EAAKlE,IAAKtE,MAAOwI,EAAKlE,KAChCkE,EAAKmI,oBAOe,KAAhCnS,KAAKV,MAAMiU,iBACVtT,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgE,SAAA,MAEAjE,EAAAC,EAAAC,cAACsU,GAAD,CAAYpC,KAAMrS,KAAKV,MAAM+S,eA3DD3R,IAAMC,WCNvB+T,oLAEd,OACIzU,EAAAC,EAAAC,cAAA,gCAH6BO,IAAMC,WCAzBgU,oLAEd,OACI1U,EAAAC,EAAAC,cAAA,gCAH8BO,IAAMC,WCK1BC,eACnB,SAAAA,IAAc,IAAAnB,EAAA,OAAAoB,OAAAC,EAAA,EAAAD,CAAAb,KAAAY,IACZnB,EAAAoB,OAAAE,EAAA,EAAAF,CAAAb,KAAAa,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAAjB,QAyBF6Q,WAAa,SAACC,EAAMC,EAAYC,GAC9B,OAAQA,GACN,IAAK,2BACHvR,EAAKC,SAAS,CACZuR,yBAA0BC,KACvBC,SAASJ,GACTK,YACAC,aAEL,MACF,IAAK,qBACH5R,EAAKC,SAAS,CAAE4R,mBAAoBP,IACpC,MACF,IAAK,WACHtR,EAAKC,SAAS,CAAE6R,SAAUR,IAC1B,MACF,QACEpO,QAAQC,IAAI,aA3CJnD,EA+Cd+R,WAAa,SAACC,EAAMC,GAClBjS,EAAKC,SAAS,CAAEiS,mBAAoBD,KAhDxBjS,EAmDd0B,aAAe,SAAAC,GACb3B,EAAKC,SAALmB,OAAAQ,EAAA,EAAAR,CAAA,GAAiBO,EAAME,OAAOC,KAAOH,EAAME,OAAOE,SApDtC/B,EAyDdmS,iBAAmB,SAACC,EAAMb,GACxB,OAAQA,GACN,IAAK,qBACHvR,EAAKC,SAAS,CAAEoS,mBAAoBD,IACpC,MACF,IAAK,gBACHpS,EAAKC,SAAS,CAAEqS,mBAAoBF,IACpC,MACF,IAAK,WACHpS,EAAKC,SAAS,CAAEsS,cAAeH,IAC/B,MACF,QACElP,QAAQC,IAAI,aArEJnD,EAyEdwS,YAAc,SAAAjB,GACZ,OAAQA,GACN,IAAK,qBACHvR,EAAKC,SAAS,CAAEoS,oBAAoB,IACpC,MACF,IAAK,gBACHrS,EAAKC,SAAS,CAAEqS,oBAAoB,IACpC,MACF,IAAK,WACHtS,EAAKC,SAAS,CAAEsS,eAAe,IAC/B,MACF,QACErP,QAAQC,IAAI,iBArFJnD,EAyFdK,mBAAqB,WACnBL,EAAKC,SAAS,CAAEF,WAAW,EAAO0B,eAAe,KACjB,IAA5BzB,EAAKH,MAAMgT,cACb7S,EAAKI,MAAM+U,WAAWnV,EAAKH,MAAMiT,eA5FvB9S,EAkGdyS,iBAAmB,WACjB,IAAMxK,EAAWjI,EAAKH,MACS,KAA3BoI,EAASyK,cACX1S,EAAKC,SAAS,CACZF,WAAW,EACXa,MAAO,eACPsB,cAAe,0BAEwB,KAAhC+F,EAASiK,mBAClBlS,EAAKC,SAAS,CACZF,WAAW,EACXa,MAAO,eACPsB,cAAe,kCAEwB,KAAhC+F,EAAS4J,mBAClB7R,EAAKC,SAAS,CACZF,WAAW,EACXa,MAAO,eACPsB,cAAe,kCAE8B,KAAtC+F,EAASuJ,yBAClBxR,EAAKC,SAAS,CACZF,WAAW,EACXa,MAAO,eACPsB,cAAe,iCAEc,KAAtB+F,EAAS6J,SAClB9R,EAAKC,SAAS,CACZF,WAAW,EACXa,MAAO,eACPsB,cAAe,gCAGjBlC,EAAKC,SAAS,CAAEwB,eAAe,IAC/BU,MAAMzC,EAAO,gBAAqBC,EAAQ,CACxC0C,OAAQ,OACRC,QAAS,CACPC,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUuF,KAEpBtF,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GACJ9C,EAAKC,SAAS,CACZF,WAAW,EACXa,MAAO,eACPsB,cAAeY,EAAK/B,QACpB8R,cAAc,EACdC,aAAchQ,EAAK8P,SAGtB5P,MAAM,SAAAC,GACLjD,EAAKC,SAAS,CACZF,WAAW,EACXa,MAAO,gBACPsB,cAAe,sCAEjBgB,QAAQC,IAAIF,OAzJlBjD,EAAKH,MAAQ,CACXuD,WAAY,aACZsP,cAAe,GACfK,YAAa,GACbtR,eAAe,EACf1B,WAAW,EACXsD,YAAa,GACbnB,cAAe,GACfsP,yBAA0B,GAC1BU,mBAAoB,GACpBL,mBAAoB,GACpBS,oBAAoB,EACpBD,oBAAoB,EACpBE,eAAe,EACfT,SAAU,GACVmB,cAAc,EACdC,kBAAkB,EAClBL,cAAc,EACdC,aAAc,IApBJ9S,wEAkKL,IAAAsF,EAAA/E,KACP,OACEC,EAAAC,EAAAC,cAAA,OAAKkF,MAAO,CAAEuE,QAAS,OACrB3J,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,0BAEFF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACmI,EAAA,EAAD,KACErI,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAKtF,KAAM,IACThD,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CACEC,YAAY,4DACZnC,MAAOxB,KAAKV,MAAM6S,cAClBvO,SAAU5D,KAAKmB,aACfI,KAAK,mBAGTtB,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAKnF,OAAQ,EAAGH,KAAM,IACpBhD,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CACEC,YAAY,4DACZnC,MAAOxB,KAAKV,MAAMkT,YAClB5O,SAAU5D,KAAKmB,aACfI,KAAK,kBAIXtB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACmI,EAAA,EAAD,KACErI,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAKtF,KAAM,IACThD,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAACyS,GAAA,EAAD,CAAYhP,SAAU5D,KAAKwR,cAE7BvR,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAKtF,KAAM,GAAIG,OAAQ,GACrBnD,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAC0S,GAAA,EAAD,CACE9I,aAAcmH,KAAO,WAAY,YACjCW,KAAM7R,KAAKV,MAAMwS,mBACjBgB,aAAc,SAAAjB,GAAI,OAChB9M,EAAK6M,iBAAiBC,EAAM,uBAE9BjO,SAAU,SAACkN,EAAMC,GAAP,OACRhM,EAAK8L,WAAWC,EAAMC,EAAY,uBAEpCgC,MAAO,kBACL9S,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CACEwE,KAAK,QACLvE,KAAK,UACLE,QAAS,kBAAMe,EAAKkN,YAAY,wBAHlC,WAWRhS,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACmI,EAAA,EAAD,KACErI,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAKtF,KAAM,IACThD,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAC0S,GAAA,EAAD,CACE9I,aAAcmH,KAAO,WAAY,YACjCW,KAAM7R,KAAKV,MAAMyS,mBACjBe,aAAc,SAAAjB,GAAI,OAChB9M,EAAK6M,iBAAiBC,EAAM,kBAE9BjO,SAAU,SAACkN,EAAMC,GAAP,OACRhM,EAAK8L,WAAWC,EAAMC,EAAY,6BAEpCgC,MAAO,kBACL9S,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CACEwE,KAAK,QACLvE,KAAK,UACLE,QAAS,kBAAMe,EAAKkN,YAAY,mBAHlC,UAUNhS,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAKtF,KAAM,GAAIG,OAAQ,GACrBnD,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAC0S,GAAA,EAAD,CACE9I,aAAcmH,KAAO,WAAY,YACjCW,KAAM7R,KAAKV,MAAM0S,cACjBc,aAAc,SAAAjB,GAAI,OAAI9M,EAAK6M,iBAAiBC,EAAM,aAClDjO,SAAU,SAACkN,EAAMC,GAAP,OACRhM,EAAK8L,WAAWC,EAAMC,EAAY,aAEpCgC,MAAO,kBACL9S,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CACEwE,KAAK,QACLvE,KAAK,UACLE,QAAS,kBAAMe,EAAKkN,YAAY,cAHlC,WAWRhS,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACmI,EAAA,EAAD,KACErI,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAKtF,KAAM,IACThD,EAAAC,EAAAC,cAAA,8CACAF,EAAAC,EAAAC,cAAC8S,GAAA,EAAD,CACEC,gBAAc,EACdtP,SAAU,SAAApC,GACRuD,EAAKrF,SAAS,CAAEgT,aAAclR,QAIpCvB,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAKnF,OAAQ,EAAGH,KAAM,IACpBhD,EAAAC,EAAAC,cAAA,wDACAF,EAAAC,EAAAC,cAAC8S,GAAA,EAAD,CACEC,gBAAc,EACdtP,SAAU,SAAApC,GACRuD,EAAKrF,SAAS,CAAEiT,iBAAkBnR,SAK1CvB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,YAC8B,IAA7BH,KAAKV,MAAM4B,cACVjB,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CACEwE,KAAM,QACNvE,KAAK,UACLC,QAAS/D,KAAKV,MAAM4B,eAHtB,iBAQAjB,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CACEyB,MAAM,OACNxB,KAAK,UACLuE,KAAM,QACNrE,QAAShE,KAAKkS,kBAJhB,gBASwB,IAAzBlS,KAAKV,MAAME,UACVS,EAAAC,EAAAC,cAAC8D,EAAD,CACEnE,mBAAoBE,KAAKF,mBACzBO,MAAOL,KAAKV,MAAMwD,YAClBtC,QAASR,KAAKV,MAAMqC,gBAGtB1B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgE,SAAA,cAzT+BxD,IAAMC,WCFvC6F,WAAaC,IAAbD,UAEaE,eACnB,SAAAA,EAAY7G,GAAO,IAAAJ,EAAA,OAAAoB,OAAAC,EAAA,EAAAD,CAAAb,KAAA0G,IACjBjH,EAAAoB,OAAAE,EAAA,EAAAF,CAAAb,KAAAa,OAAAG,EAAA,EAAAH,CAAA6F,GAAAzF,KAAAjB,KAAMH,KAoBRC,mBAAqB,WACnBL,EAAKC,SAAS,CAAEF,WAAW,EAAO0B,eAAe,KAtBhCzB,EAyBnBkH,aAAe,WACb,IADmBC,EASqCnH,EAAKH,MAArDwH,EATWF,EASXE,aAAcC,EATHH,EASGG,qBAAsBC,EATzBJ,EASyBI,QAC5C,MAAqB,KAAjBF,GACFrH,EAAKC,SAAS,CACZF,WAAW,EACXsD,YAAa,eACbnB,cAAe,8BAEV,GACqB,IAAnBqF,EAAQ/B,QACjBxF,EAAKC,SAAS,CACZF,WAAW,EACXsD,YAAa,eACbnB,cAAe,yBAEV,IACwB,IAvBX,WACpB,IAAK,IAAIsF,EAAI,EAAGA,EAAIxH,EAAKH,MAAM0H,QAAQ/B,OAAQgC,IAC7C,GAA2C,KAAvCxH,EAAKH,MAAM0H,QAAQC,GAAGH,aACxB,OAAO,EAGX,OAAO,EAiBEI,IACTzH,EAAKC,SAAS,CACZF,WAAW,EACXsD,YAAa,eACbnB,cAAe,iCAEV,GAC2B,IAAzBoF,GACTtH,EAAKC,SAAS,CACZF,WAAW,EACXsD,YAAa,eACbnB,cAAe,sCAEV,KAEPoF,EAAuBC,EAAQ/B,QAC/B8B,EAAuB,KAEvBtH,EAAKC,SAAS,CACZF,WAAW,EACXsD,YAAa,eACbnB,cAAe,oBAEV,IAxEQlC,EA8EnB0B,aAAe,SAAAC,GAEb,IADA,IAAI+F,GAAQ,EACHF,EAAI,EAAGA,EAAIX,EAAarB,OAAQgC,IACvC,IAA0D,IAAtD7F,EAAME,OAAOE,MAAMmE,QAAQW,EAAaW,GAAG1F,MAAc,CAC3D4F,GAAQ,EACR1H,EAAKC,SAALmB,OAAAQ,EAAA,EAAAR,CAAA,GACGO,EAAME,OAAOC,KAAOH,EAAME,OAAOE,MAAM4F,QACtCd,EAAaW,GAAG1F,KAChB+E,EAAaW,GAAGV,WAGpB,MAGCY,GACH1H,EAAKC,SAALmB,OAAAQ,EAAA,EAAAR,CAAA,GAAiBO,EAAME,OAAOC,KAAOH,EAAME,OAAOE,SA7FnC/B,EAiGnB4H,mBAAqB,SAACC,EAAOlG,GAC3BA,EAAMmG,UAGN,IAFA,IAe4CwH,EAfxCvH,EAAS,GACTL,GAAQ,EACHF,EAAI,EAAGA,EAAIX,EAAarB,OAAQgC,IACvC,IAA0D,IAAtD7F,EAAME,OAAOE,MAAMmE,QAAQW,EAAaW,GAAG1F,MAAc,CAC3D4F,GAAQ,EACRK,EAAS3G,OAAO2C,OAAO/D,EAAKH,MAAM0H,QAAQM,GAAjCzG,OAAAQ,EAAA,EAAAR,CAAA,GACNO,EAAME,OAAOC,KAAOH,EAAME,OAAOE,MAAM4F,QACtCd,EAAaW,GAAG1F,KAChB+E,EAAaW,GAAGV,WAGpB,MAGCY,IAEDK,EADwB,iBAAtBpG,EAAME,OAAOC,KACNV,OAAO2C,OAAO/D,EAAKH,MAAM0H,QAAQM,IAAjCyH,EAAA,GAAAlO,OAAAQ,EAAA,EAAAR,CAAAkO,EACN3N,EAAME,OAAOC,KAAOH,EAAME,OAAOE,OAD3BX,OAAAQ,EAAA,EAAAR,CAAAkO,EAAA,aAEK3N,EAAME,OAAOE,OAFlBuN,IAKAlO,OAAO2C,OAAO/D,EAAKH,MAAM0H,QAAQM,GAAjCzG,OAAAQ,EAAA,EAAAR,CAAA,GACNO,EAAME,OAAOC,KAAOH,EAAME,OAAOE,SAIxC/B,EAAKC,SAAS,SAAAJ,GAAK,OAAAuB,OAAAQ,EAAA,EAAAR,CAAA,GAAQvB,EAAM0H,QAAQM,GAASE,MA7HjC/H,EAgInBgF,mBAAqB,SAAAjD,GACnB/B,EAAKC,SAAS,CAAEmH,gBAAiBrF,KAjIhB/B,EAoInBgC,aAAe,SAAA7B,GACb,IAA4B,IAAxBH,EAAKkH,eAAyB,CAChC,IAAIc,EAAW,wCAAA5F,OAA2CzC,GAC1DK,EAAKC,SAAS,CAAEwB,eAAe,IAC/B,IAAIyD,EAAW,IAAIC,SACb8C,EAAW,CACf4I,QAAS7Q,EAAKH,MAAMgR,QACpBxJ,aAAcrH,EAAKH,MAAMwH,aACzBa,WAAYlI,EAAKH,MAAMqI,WACvBX,QAASvH,EAAKH,MAAM0H,QACpBD,qBAAsBtH,EAAKH,MAAMyH,sBAEnCpC,EAASE,OAAO,WAAY3C,KAAKC,UAAUuF,IACpB,OAAnBjI,EAAKH,MAAMsI,MACbH,EAAW,qCAAA5F,OAAwCzC,GACnDuF,EAASE,OAAO,iBAAkBpF,EAAKH,MAAMsI,MAE/ChG,MAAMzC,EAAUsI,EAAa,CAC3B3F,OAAQ,OACRG,KAAM0C,IAELvC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GACJ9C,EAAKI,MAAMgV,oBACXpV,EAAKC,SAAS,CACZwB,eAAe,EACf4F,aAAc,GACda,WAAY,GACZ9E,WAAY,aACZmE,QAAS,GACTD,qBAAsB,KACtBa,IAAK,KACLpI,WAAW,EACXsD,YAAa,eACbnB,cAAe,kCAGlBc,MAAM,SAAAC,GACLjD,EAAKC,SAAS,CACZF,WAAW,EACXsD,YAAa,eACbnB,cAAe,qCAEjBgB,QAAQC,IAAIF,OA/KDjD,EAqLnB6E,WAAa,SAAA1E,GACXH,EAAKC,SAAS,CAAEkI,IAAKhI,EAAE0B,OAAOkD,MAAM,MAtLnB/E,EAyLnBoI,mBAAqB,WACnB,IAAMC,EAAY,CAChBhB,aAAc,GACda,WAAY,GACZI,YAAa,IAEftI,EAAKC,SAAS,SAAAJ,GAAK,MAAK,CACtB0H,QAAS1H,EAAM0H,QAAQnF,OAAOiG,OA9LhCrI,EAAKH,MAAQ,CACXwH,aAAc,GACda,WAAY,GACZ9E,WAAY,aACZmE,QAAS,GACTD,qBAAsB,KACtBuJ,QAAS,GACT1I,IAAK,KACL1G,eAAe,EACf1B,WAAW,EACXsD,YAAa,GACbnB,cAAe,IAbAlC,mFAkBjBO,KAAKN,SAAS,CAAE4Q,QAAStQ,KAAKH,MAAMyQ,2CAkL7B,IAAAvL,EAAA/E,KACC6C,EAAe7C,KAAKV,MAApBuD,WACFE,EACW,eAAfF,EACI,CACEG,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,KAEtB,KACAE,EACW,eAAfN,EACI,CACEK,WAAY,CAAED,KAAM,GAAIG,OAAQ,IAElC,KAEN,OACEnD,EAAAC,EAAAC,cAAA,OAAKiP,UAAU,OACbnP,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,2BAEFF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACkD,EAAA,EAAD,CACEC,OAAQT,EACRoF,OAAO,IACPnG,OAAO,OACPoG,QAAQ,uBAERjI,EAAAC,EAAAC,cAACkD,EAAA,EAAKE,KAAN1C,OAAA2C,OAAA,CAAWC,MAAM,YAAeV,GAC9B9C,EAAAC,EAAAC,cAACmI,EAAA,EAAD,KACErI,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAKtF,KAAM,IACThD,EAAAC,EAAAC,cAAC2U,GAAD,CACEvT,KAAK,eACLC,MAAOxB,KAAKV,MAAMwH,aAClB0B,KAAM,EACN7E,YAAY,aACZC,SAAU5D,KAAKmB,gBAGnBlB,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAKtF,KAAM,GAAIG,OAAQ,GACrBnD,EAAAC,EAAAC,cAAC2U,GAAD,CACEvT,KAAK,aACLC,MAAOxB,KAAKV,MAAMqI,WAClBa,KAAM,EACN7E,YAAY,WACZC,SAAU5D,KAAKmB,kBAKvBlB,EAAAC,EAAAC,cAAA,OAAKkF,MAAO,CAAEoD,MAAO,QAASC,aAAc,QAC1CzI,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CAAQC,KAAK,UAAUE,QAAShE,KAAK6H,oBAArC,aAEE5H,EAAAC,EAAAC,cAACwI,EAAA,EAAD,CAAM7E,KAAK,kBAGf7D,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACCH,KAAKV,MAAM0H,QAAQpB,IAAI,SAACH,EAAQ6B,GAC/B,OACErH,EAAAC,EAAAC,cAAC4U,GAAD,CACEhP,IAAKuB,EACL7B,OAAQA,EACR6B,MAAOA,EACPD,mBAAoBtC,EAAKsC,uBAI/BpH,EAAAC,EAAAC,cAACkD,EAAA,EAAKE,KAAN1C,OAAA2C,OAAA,CAAWC,MAAM,kBAAqBV,GACpC9C,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CACEI,KAAI,SACJ+E,IAAK7I,KAAKV,MAAM0H,QAAQ/B,OACxB6D,IAAK,EACLtH,MAAOxB,KAAKV,MAAMyH,qBAClBnD,SAAU5D,KAAKmB,aACfI,KAAK,0BAGTtB,EAAAC,EAAAC,cAACkD,EAAA,EAAKE,KAASJ,EAAf,mCAEElD,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CAAQC,KAAK,WACX7D,EAAAC,EAAAC,cAAA,SAAO6F,IAAI,eAAeX,MAAO,CAAEY,WAAY,OAA/C,eAGAhG,EAAAC,EAAAC,cAAA,SACE2D,KAAK,OACLoC,GAAG,eACHtC,SAAU,SAAAhE,GAAC,OAAImF,EAAKT,WAAW1E,IAC/ByF,MAAO,CACLc,QAAS,EACTC,SAAU,WACVC,QAAS,OAKjBpG,EAAAC,EAAAC,cAACkD,EAAA,EAAKE,KAASJ,EACblD,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CACEC,KAAK,UACLC,QAAS/D,KAAKV,MAAM4B,cACpB8C,QAAShE,KAAKyB,cAHhB,aASsB,IAAzBzB,KAAKV,MAAME,UACVS,EAAAC,EAAAC,cAAC8D,EAAD,CACEnE,mBAAoBE,KAAKF,mBACzBO,MAAOL,KAAKV,MAAMwD,YAClBtC,QAASR,KAAKV,MAAMqC,gBAGtB1B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgE,SAAA,cAtT+BxD,IAAMC,WA6TzCoI,eACJ,SAAAA,EAAYlJ,GAAO,IAAAmF,EAAA,OAAAnE,OAAAC,EAAA,EAAAD,CAAAb,KAAA+I,IACjB/D,EAAAnE,OAAAE,EAAA,EAAAF,CAAAb,KAAAa,OAAAG,EAAA,EAAAH,CAAAkI,GAAA9H,KAAAjB,KAAMH,KACDP,MAAQ,CACXuD,WAAY,cAHGmC,qHAQV,IAAAgE,EAAAhJ,KAED+C,EACW,eAFM/C,KAAKV,MAApBuD,WAGF,CACEG,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,KAEtB,KACN,OACEhD,EAAAC,EAAAC,cAACkD,EAAA,EAAKE,KAAN1C,OAAA2C,OAAA,CAAWC,MAAK,UAAA5B,OAAY7B,KAAKH,MAAMyH,MAAQ,IAASvE,GACtD9C,EAAAC,EAAAC,cAACmI,EAAA,EAAD,KACErI,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAKtF,KAAM,IACThD,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CACElC,MAAOxB,KAAKH,MAAM4F,OAAOqB,aACzBuB,KAAK,QACL9G,KAAK,eACLoC,YAAY,kBACZC,SAAU,SAAAxC,GAAK,OACb4H,EAAKnJ,MAAMwH,mBAAmB2B,EAAKnJ,MAAMyH,MAAOlG,OAItDnB,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAKtF,KAAM,GAAIG,OAAQ,GACrBnD,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CACElC,MAAOxB,KAAKH,MAAM4F,OAAOkC,WACzBU,KAAK,QACL9G,KAAK,aACLoC,YAAY,gBACZC,SAAU,SAAAxC,GAAK,OACb4H,EAAKnJ,MAAMwH,mBAAmB2B,EAAKnJ,MAAMyH,MAAOlG,gBAvCnCV,IAAMC,WCjUdqU,eACnB,SAAAA,EAAYnV,GAAO,IAAAJ,EAAA,OAAAoB,OAAAC,EAAA,EAAAD,CAAAb,KAAAgV,IACjBvV,EAAAoB,OAAAE,EAAA,EAAAF,CAAAb,KAAAa,OAAAG,EAAA,EAAAH,CAAAmU,GAAA/T,KAAAjB,KAAMH,KAQRgV,kBAAoB,WAClBpV,EAAKC,SAAS,SAAAJ,GAAK,MAAK,CAAE2V,gBAAiB3V,EAAM2V,gBAAkB,MAVlDxV,EAanByV,kBAAoB,WAClB,IAAIC,EAAkB,CAAE7E,QAAS7Q,EAAKH,MAAMgR,SAC5C7Q,EAAKC,SAAS,SAAAJ,GAAK,MAAK,CACtB8V,UAAW9V,EAAM8V,UAAUvT,OAAO,CAAEsT,wBAdtC1V,EAAKH,MAAQ,CACX8V,UAAW,GACX9E,QAAS,GACT2E,gBAAiB,GALFxV,mFAqBjBO,KAAKN,SAAS,CAAE4Q,QAAStQ,KAAKH,MAAMwS,KAAKvM,uCAGlC,IAAAf,EAAA/E,KACHqS,EAAOrS,KAAKH,MAAMwS,KACtB,OACEpS,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgE,SAAA,KACEjE,EAAAC,EAAAC,cAAA,OAAKkF,MAAO,CAAEY,WAAY,OACxBhG,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,UAAKkS,EAAKF,gBAEZlS,EAAAC,EAAAC,cAACmI,EAAA,EAAD,CAAKjD,MAAO,CAAEwE,YAAa,QACzB5J,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAKtF,KAAM,GAAIG,OAAQ,GACrBnD,EAAAC,EAAAC,cAAA,2BADF,oBACkD,IAC/CkS,EAAKV,oBAER1R,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAKtF,KAAM,GAAIG,OAAQ,GACrBnD,EAAAC,EAAAC,cAAA,2BADF,mBACiD,IAC9CkS,EAAKf,qBAGVrR,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACmI,EAAA,EAAD,CAAKjD,MAAO,CAAEwE,YAAa,QACzB5J,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAKtF,KAAM,GAAIG,OAAQ,GACrBnD,EAAAC,EAAAC,cAAA,0BADF,oBACiD,IAC9C+Q,KACE8B,IAAI1F,SAA6C,IAApC+E,EAAKI,+BAClB4C,OAAO,aAEZpV,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAKtF,KAAM,GAAIG,OAAQ,GACrBnD,EAAAC,EAAAC,cAAA,sDADF,oBAE4BkS,EAAKiD,yBAGnCrV,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACmI,EAAA,EAAD,CAAKjD,MAAO,CAAEwE,YAAa,QACzB5J,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAKtF,KAAM,GAAIG,OAAQ,GACrBnD,EAAAC,EAAAC,cAAA,8CADF,oBACqE,IAC5C,SAAtBkS,EAAKK,aAA0B,MAAQ,MAE1CzS,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAKtF,KAAM,GAAIG,OAAQ,GACrBnD,EAAAC,EAAAC,cAAA,mDADF,mBAE2B,IACE,SAA1BkS,EAAKM,iBAA8B,MAAQ,OAGhD1S,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACmI,EAAA,EAAD,CAAKjD,MAAO,CAAEwE,YAAa,QACzB5J,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAKtF,KAAM,GAAIG,OAAQ,GACrBnD,EAAAC,EAAAC,cAAA,6BADF,gBAC8C,IAC3CH,KAAKV,MAAM2V,iBAEdhV,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAKtF,KAAM,GAAIG,OAAQ,GACrBnD,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CACEC,KAAK,UACLsH,MAAM,QACNzC,KAAK,WACLN,KAAM,QACNrE,QAAShE,KAAKkV,mBALhB,mBAYNjV,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACiC,IAAhCH,KAAKV,MAAM8V,UAAUnQ,OACpBhF,EAAAC,EAAAC,cAAA,gBAEAF,EAAAC,EAAAC,cAAA,WACGH,KAAKV,MAAM8V,UAAUxP,IAAI,SAACqJ,EAAU3H,GACnC,OACErH,EAAAC,EAAAC,cAACoV,GAAD,CACEV,kBAAmB9P,EAAK8P,kBACxBvE,QAASvL,EAAKzF,MAAMgR,QACpBvK,IAAKuB,eAnGe5G,IAAMC,WCAvB6U,eACjB,SAAAA,EAAY3V,GAAM,IAAAJ,EAAA,OAAAoB,OAAAC,EAAA,EAAAD,CAAAb,KAAAwV,IACd/V,EAAAoB,OAAAE,EAAA,EAAAF,CAAAb,KAAAa,OAAAG,EAAA,EAAAH,CAAA2U,GAAAvU,KAAAjB,KAAMH,KAMV+U,WAAa,SAACa,GACVhW,EAAKC,SAAS,CAAEgW,aAAc,EAAOD,YAAcA,KANnDhW,EAAKH,MAAQ,CACToW,aAAc,EACdD,YAAc,IAJJhW,wEAYd,OAA8B,IAA3BO,KAAKV,MAAMoW,YACHzV,EAAAC,EAAAC,cAACwV,GAAD,CAAUf,WAAc5U,KAAK4U,aAE7B3U,EAAAC,EAAAC,cAACyV,GAAD,CAAUvD,KAAQrS,KAAKV,MAAMmW,qBAhBH/U,IAAMC,qBCE9BkV,eACnB,SAAAA,EAAYhW,GAAO,IAAAJ,EAAA,OAAAoB,OAAAC,EAAA,EAAAD,CAAAb,KAAA6V,IACjBpW,EAAAoB,OAAAE,EAAA,EAAAF,CAAAb,KAAAa,OAAAG,EAAA,EAAAH,CAAAgV,GAAA5U,KAAAjB,KAAMH,KAURgV,kBAAoB,WAClBpV,EAAKC,SAAS,SAAAJ,GAAK,MAAK,CAAE2V,gBAAiB3V,EAAM2V,gBAAkB,MAZlDxV,EAenByV,kBAAoB,WAClB,IAAIC,EAAkB,CAAE7E,QAAS7Q,EAAKH,MAAMgR,SAC5C7Q,EAAKC,SAAS,SAAAJ,GAAK,MAAK,CACtB8V,UAAW9V,EAAM8V,UAAUvT,OAAO,CAAEsT,wBAhBtC1V,EAAKH,MAAQ,CACX8V,UAAW,GACX9E,QAAS,GACT2E,gBAAiB,EACjB5C,KAAM,GACNtO,SAAS,GAPMtE,mFAsBC,IAAAsF,EAAA/E,KAClBA,KAAKN,SAAS,CAAEqE,SAAS,IACzB,IAAImC,EAAKlG,KAAKH,MAAM6J,MAAMC,OAAOzD,GACjCtE,MAAK,GAAAC,OAAI1C,EAAJ,2BAAA0C,OAAqCqE,EAArC,KAAArE,OAA2CzC,IAC7CgD,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GACJwC,EAAKrF,SAAS,CACZ2S,KAAM9P,EACNwB,SAAS,EACTuM,QAAS/N,EAAKuD,IACdmP,gBAAiB3H,SAAS/K,EAAKuT,WAGlCrT,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,sCAGrB,IAAAsC,EAAAhF,KACHqS,EAAOrS,KAAKV,MAAM+S,KACtB,OAA2B,IAAvBrS,KAAKV,MAAMyE,QAEX9D,EAAAC,EAAAC,cAAA,OAAKkF,MAAO,CAAEuE,QAAS,MAAOC,YAAa,QACzC5J,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,CAAMmD,KAAK,WAKbpI,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgE,SAAA,KACEjE,EAAAC,EAAAC,cAAA,OAAKkF,MAAO,CAAEY,WAAY,OACxBhG,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,UAAKkS,EAAKF,gBAEZlS,EAAAC,EAAAC,cAACmI,EAAA,EAAD,CAAKjD,MAAO,CAAEwE,YAAa,QACzB5J,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAKtF,KAAM,GAAIG,OAAQ,GACrBnD,EAAAC,EAAAC,cAAA,2BADF,oBACkD,IAC/CkS,EAAKV,oBAER1R,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAKtF,KAAM,GAAIG,OAAQ,GACrBnD,EAAAC,EAAAC,cAAA,2BADF,mBACiD,IAC9CkS,EAAKf,qBAGVrR,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACmI,EAAA,EAAD,CAAKjD,MAAO,CAAEwE,YAAa,QACzB5J,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAKtF,KAAM,GAAIG,OAAQ,GACrBnD,EAAAC,EAAAC,cAAA,0BADF,oBACiD,IAC9C+Q,KACE8B,IAAI1F,SAA6C,IAApC+E,EAAKI,+BAClB4C,OAAO,aAEZpV,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAKtF,KAAM,GAAIG,OAAQ,GACrBnD,EAAAC,EAAAC,cAAA,2BADF,oBACkDkS,EAAKd,WAGzDtR,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACmI,EAAA,EAAD,CAAKjD,MAAO,CAAEwE,YAAa,QACzB5J,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAKtF,KAAM,GAAIG,OAAQ,GACrBnD,EAAAC,EAAAC,cAAA,8CAA0C,IAD5C,mBAE2B,IACF,SAAtBkS,EAAKK,aACF,MAAMqD,cACN,KAAKA,eAEX9V,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAKtF,KAAM,GAAIG,OAAQ,GACrBnD,EAAAC,EAAAC,cAAA,mDADF,mBAE2B,IACE,SAA1BkS,EAAKM,iBACF,MAAMoD,cACN,KAAKA,gBAGb9V,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACmI,EAAA,EAAD,CAAKjD,MAAO,CAAEwE,YAAa,QACzB5J,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAKtF,KAAM,GAAIG,OAAQ,GACrBnD,EAAAC,EAAAC,cAAA,6BADF,gBAC8C,IAC3CH,KAAKV,MAAM2V,iBAEdhV,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAKtF,KAAM,GAAIG,OAAQ,GACrBnD,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CACEC,KAAK,UACLsH,MAAM,QACNzC,KAAK,WACLN,KAAM,QACNrE,QAAShE,KAAKkV,mBALhB,mBAYNjV,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACiC,IAAhCH,KAAKV,MAAM8V,UAAUnQ,OACpBhF,EAAAC,EAAAC,cAAA,gBAEAF,EAAAC,EAAAC,cAAA,WACGH,KAAKV,MAAM8V,UAAUxP,IAAI,SAACqJ,EAAU3H,GACnC,OACErH,EAAAC,EAAAC,cAACoV,GAAD,CACEV,kBAAmB7P,EAAK6P,kBACxBvE,QAAStL,EAAK1F,MAAMgR,QACpBvK,IAAKuB,eA7HiB5G,IAAMC,WCO1CqV,8MACJ1W,MAAQ,CACN2W,aAAa,EACblS,SAAS,EACTxB,KAAM,GACN2T,KAAM,MAGRC,QAAU,SAAAC,GACRxU,MAAK,GAAAC,OAAI1C,EAAJ,yBAAA0C,OAAmCzC,IACrCgD,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GACJ6T,EAAS7T,KAEVE,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAa9B2T,SAAW,SAAAzH,GACT,IAAI0H,EAAgB1H,EAAI+C,mBAAqB,IAAM/C,EAAI2C,SACnDgF,EAAkB3H,EAAI+C,mBAAqB,IAAM/C,EAAI0C,mBACzDiF,EAAkBrF,KAAOqF,GACzBD,EAAgBpF,KAAOoF,GACvB,IAIIE,EAJkBtF,MACpB,IAAIuF,MAAOC,eAAe,QAAS,CAAEC,SAAU,kBAGAC,KAC/CL,EACA,WAGEM,EAAQP,EAAcM,KAAKL,EAAiB,WAChD,OAAIC,EAA6B,EACxB,eACEA,EAA6BK,EAC/B,mBAEA,uGA9BS,IAAA9R,EAAA/E,KAClBA,KAAKmW,QAAQ,SAAA9T,GACX0C,EAAKrF,SAAS,CACZuW,aAAa,EACb1T,KAAMF,EACN6T,KAAM7T,uCA6BH,IAAA2C,EAAAhF,KACH0J,EAAQ1J,KAAKH,MAAM6J,MADhB9C,EAEuB5G,KAAKV,MAA3B2W,EAFDrP,EAECqP,YAAaC,EAFdtP,EAEcsP,KAErB,OACEjW,EAAAC,EAAAC,cAACsK,EAAA,EAAD,CAAQC,SAAUC,kBAChB1K,EAAAC,EAAAC,cAAA,OAAKkF,MAAO,CAAEuE,QAAS,OACrB3J,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,gCAGJF,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,CACEsE,UAAU,qBACVrL,QAASkS,EACTlL,WAAW,aACXC,WAAYkL,EACZjL,WAAY,SAAAjB,GAAI,OACd/J,EAAAC,EAAAC,cAAC2K,EAAA,EAAKvH,KAAN,CACEuT,QAAS,CAAC7W,EAAAC,EAAAC,cAACkL,EAAA,EAAD,CAAME,GAAE,GAAA1J,OAAK6H,EAAM8B,IAAX,KAAA3J,OAAkBmI,EAAKlE,MAA/B,UAEV7F,EAAAC,EAAAC,cAAC4W,GAAA,EAAD,CAAU5L,QAAM,EAAC9K,OAAO,EAAO0D,QAASiG,EAAKjG,QAASiT,QAAM,GAC1D/W,EAAAC,EAAAC,cAAC2K,EAAA,EAAKvH,KAAK2H,KAAX,CACE7K,MACEJ,EAAAC,EAAAC,cAAA,OAAKkF,MAAO,CAAE4R,WAAY,OAAQC,SAAU,KACzClN,EAAKmI,eAGVgF,YACElX,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UACG+Q,KAAOlH,EAAK2H,oBAAoB0D,OAC/B,oBAGJpV,EAAAC,EAAAC,cAAA,6BAAqB6J,EAAKsH,uBAIhCrR,EAAAC,EAAAC,cAAA,2CAEEF,EAAAC,EAAAC,cAAA,UAAK6E,EAAKqR,SAASrM,mBA5FRtJ,IAAMC,WAwGhByW,eACnB,SAAAA,EAAYvX,GAAO,IAAAmJ,EAAA,OAAAnI,OAAAC,EAAA,EAAAD,CAAAb,KAAAoX,IACjBpO,EAAAnI,OAAAE,EAAA,EAAAF,CAAAb,KAAAa,OAAAG,EAAA,EAAAH,CAAAuW,GAAAnW,KAAAjB,KAAMH,KACDP,MAAQ,GAFI0J,wEAKjB,GAA8C,SAA1C0C,aAAaC,QAAQ,iBAA6B,CACpD,IAAIjC,EAAQ1J,KAAKH,MAAM6J,MACvB,OACEzJ,EAAAC,EAAAC,cAACsK,EAAA,EAAD,CAAQC,SAAUC,kBAChB1K,EAAAC,EAAAC,cAACyL,EAAA,EAAD,KACE3L,EAAAC,EAAAC,cAAC0L,EAAA,EAAD,CACEC,OAAK,EACLC,KAAI,GAAAlK,OAAK6H,EAAM8B,KACfQ,OAAQ,SAAAnM,GAAK,OAAII,EAAAC,EAAAC,cAACkX,GAAqBxX,MAEzCI,EAAAC,EAAAC,cAAC0L,EAAA,EAAD,CACEE,KAAI,GAAAlK,OAAK6H,EAAM8B,IAAX,QACJQ,OAAQ,SAAAnM,GAAK,OAAII,EAAAC,EAAAC,cAACmX,GAAiBzX,QAM3C,OAAOI,EAAAC,EAAAC,cAACgM,EAAA,EAAD,CAAUZ,GAAI,CAAEa,SAAU,mBAxBF1L,IAAMC,WCjHnCwD,GAAWC,IAAXD,OAER,SAASoT,GAAU1X,GACjB,OACEI,EAAAC,EAAAC,cAAA,UACGU,OAAO2W,OAAO3X,EAAMyI,KAAK1C,IAAI,SAACoE,EAAMjE,GACnC,OAAO9F,EAAAC,EAAAC,cAAA,MAAI4F,IAAKA,GAAMiE,MAM9B,SAASyN,GAAY5X,GACnB,OAAsB,IAAlBA,EAAMkE,QAEN9D,EAAAC,EAAAC,cAAA,OAAKkF,MAAO,CAAEuE,QAAS,MAAOC,YAAa,QACzC5J,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,CAAMmD,KAAK,WAGqB,KAA3BxI,EAAM0T,iBAEbtT,EAAAC,EAAAC,cAAA,OAAKkF,MAAO,CAAEuE,QAAS,MAAO3D,WAAY,OACxChG,EAAAC,EAAAC,cAAA,8CAG8B,IAAzBN,EAAM6X,QAAQzS,OAErBhF,EAAAC,EAAAC,cAAA,OAAKkF,MAAO,CAAEuE,QAAS,MAAO3D,WAAY,OACxChG,EAAAC,EAAAC,cAAA,mCAG8B,IAAzBN,EAAM6X,QAAQzS,OAErBhF,EAAAC,EAAAC,cAAA,SAAOiP,UAAU,SACfnP,EAAAC,EAAAC,cAAA,SAAOiP,UAAU,eACfnP,EAAAC,EAAAC,cAAA,UACGU,OAAO8W,KAAK9X,EAAM6X,QAAQ,IAAI9R,IAAI,SAACoE,EAAMjE,GACxC,OACE9F,EAAAC,EAAAC,cAAA,MACE4F,IAAKA,EACLV,MAAO,CAAEe,SAAU,SAAUwR,IAAK,EAAGvR,OAAQ,IAC7CwR,MAAM,OAEL7N,OAMX/J,EAAAC,EAAAC,cAAA,aACGN,EAAM6X,QAAQ9R,IAAI,SAACoE,EAAMjE,GACxB,OAAO9F,EAAAC,EAAAC,cAACoX,GAAD,CAAWjP,IAAK0B,EAAMjE,IAAKA,aApBrC,MA4BY+R,eACnB,SAAAA,EAAYjY,GAAO,IAAAJ,EAAA,OAAAoB,OAAAC,EAAA,EAAAD,CAAAb,KAAA8X,IACjBrY,EAAAoB,OAAAE,EAAA,EAAAF,CAAAb,KAAAa,OAAAG,EAAA,EAAAH,CAAAiX,GAAA7W,KAAAjB,KAAMH,KAWRkY,eAAiB,WACqB,KAAhCtY,EAAKH,MAAMiU,iBACbhK,MAAM,2BAEN9J,EAAKuY,iBAhBUvY,EAoBnBuY,cAAgB,WACdvY,EAAKC,SAAS,CAAEuY,iBAAiB,IACjCrW,MAAK,GAAAC,OAAI1C,EAAJ,kBAAA0C,OAA4BpC,EAAKH,MAAMiU,iBAAvC,KAAA1R,OAA2DzC,IAC7DgD,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GAAI,OAAI9C,EAAKC,SAAS,CAAEgY,QAASnV,EAAM0V,iBAAiB,MAC7DxV,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAzBXjD,EAmCnByY,qBAAuB,SAAAzG,GACrB,IAAI6B,EAAiB7T,EAAKH,MAAM+T,UAAU8E,OAAO,SAAAnO,GAC/C,OAAOA,EAAK2H,qBAAuBT,KAAOO,GAAM4D,OAAO,gBAE3B,IAA1B/B,EAAerO,OACjBxF,EAAKC,SAAS,CAAE4T,eAAgBA,IAEhC7T,EAAKC,SAAS,CAAE4T,eAAgB7T,EAAKH,MAAM+T,aA1C5B5T,EA8CnB2Y,mBAAqB,SAAA3G,GACnBhS,EAAKC,SAAS,CAAE2Y,UAAW5G,IAC3BhS,EAAKyY,qBAAqBzG,IAhDThS,EAmDnB4U,aAnDmB,eAAAb,EAAA3S,OAAA4S,GAAA,EAAA5S,CAAA6S,GAAAxT,EAAAyT,KAmDJ,SAAAC,EAAM9N,GAAN,OAAA4N,GAAAxT,EAAA2T,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACPvU,EAAKC,SAAS,CAAE6T,iBAAkBzN,IAD3B,OAEbrG,EAAKuY,gBAFQ,wBAAAlE,EAAAG,SAAAL,EAAA5T,SAnDI,gBAAAkU,GAAA,OAAAV,EAAAW,MAAAnU,KAAAoU,YAAA,GAEjB3U,EAAKH,MAAQ,CACXgZ,mBAAoB,GACpBjF,UAAW,GACXC,eAAgB,GAChBoE,QAAS,GACTnE,iBAAkB,GAClB0E,iBAAiB,GARFxY,mFA4BC,IAAAsF,EAAA/E,KAClB4B,MAAK,GAAAC,OAAI1C,EAAJ,yBAAA0C,OAAmCzC,IACrCgD,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GAAI,OAAIwC,EAAKrF,SAAS,CAAE2T,UAAW9Q,EAAM+Q,eAAgB/Q,MAC9DE,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,sCAyB5B,OACEzC,EAAAC,EAAAC,cAAA,OAAKkF,MAAO,CAAEY,WAAY,OACxBhG,EAAAC,EAAAC,cAACmI,EAAA,EAAD,CAAKjD,MAAO,CAAEwE,YAAa,QACzB5J,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAKtF,KAAM,GAAIG,OAAQ,GACrBnD,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAACyS,GAAA,EAAD,CAAYhP,SAAU5D,KAAKoY,sBAE7BnY,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAKtF,KAAM,GAAIG,OAAQ,GACrBnD,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CACEC,YAAU,EACVC,MAAO,CAAEC,MAAO,KAChB3B,YAAY,gBACZ4B,iBAAiB,WACjB3B,SAAU5D,KAAKqU,aACf7O,aAAc,SAAC9B,EAAO+B,GAAR,OACZA,EAAO5F,MAAMY,SACViF,cACAC,QAAQjC,EAAMgC,gBAAkB,IAGpC1F,KAAKV,MAAMgU,eAAe1N,IAAI,SAACoE,EAAMjE,GACpC,OACE9F,EAAAC,EAAAC,cAACoY,GAAD,CAAQxS,IAAKiE,EAAKlE,IAAKtE,MAAOwI,EAAKlE,KAChCkE,EAAKmI,oBAOlBlS,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACmI,EAAA,EAAD,CAAKjD,MAAO,CAAEwE,YAAa,QACzB5J,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAKtF,KAAM,GAAIG,OAAQ,GACrBnD,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UAAKH,KAAKV,MAAMoY,QAAQzS,SAE1BhF,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAKtF,KAAM,GAAIG,OAAQ,GACrBnD,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CAAQC,KAAK,UAAUE,QAAShE,KAAK+X,gBAArC,aAKJ9X,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACsX,GAAD,CACEC,QAAS1X,KAAKV,MAAMoY,QACpB3T,QAAS/D,KAAKV,MAAM2Y,gBACpB1E,iBAAkBvT,KAAKV,MAAMiU,2BA5GF7S,IAAMC,WC1DnCwD,GAAWC,IAAXD,OCcAkI,IDZmC3L,IAAMC,UCY7B2L,IAAZD,SACAE,GAAmBC,IAAnBD,QAASE,GAAUD,IAAVC,MAEI+L,oLAEjB,GAA8C,SAA1C9M,aAAaC,QAAQ,iBAA6B,CACpD,IAAIjC,EAAQ1J,KAAKH,MAAM6J,MACvB,OACEzJ,EAAAC,EAAAC,cAACsK,EAAA,EAAD,CAAQC,SAAUC,kBAChB1K,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAQ+B,MAAO,CAAEY,WAAY,OAC3BhG,EAAAC,EAAAC,cAACsY,GAAD,CAAOnT,MAAO,MAAOD,MAAO,CAAEsH,WAAY,SACxC1M,EAAAC,EAAAC,cAACyM,EAAA,EAAD,CACEC,MAAM,OACNC,KAAK,SACLzH,MAAO,CAAE6E,OAAQ,OAAQ6C,YAAa,IAEtC9M,EAAAC,EAAAC,cAACuY,GAAD,CACE3S,IAAI,OACJ1F,MACEJ,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACwI,EAAA,EAAD,CAAM7E,KAAK,gBADb,gBAMF7D,EAAAC,EAAAC,cAACyM,EAAA,EAAKrJ,KAAN,CAAWwC,IAAI,KACb9F,EAAAC,EAAAC,cAACkL,EAAA,EAAD,CAAME,GAAE,GAAA1J,OAAK6H,EAAM8B,IAAX,eAAR,kBAEFvL,EAAAC,EAAAC,cAACyM,EAAA,EAAKrJ,KAAN,CAAWwC,IAAI,KACb9F,EAAAC,EAAAC,cAACkL,EAAA,EAAD,CAAME,GAAE,GAAA1J,OAAK6H,EAAM8B,IAAX,eAAR,cAEFvL,EAAAC,EAAAC,cAACyM,EAAA,EAAKrJ,KAAN,CAAWwC,IAAI,KACb9F,EAAAC,EAAAC,cAACkL,EAAA,EAAD,CAAME,GAAE,GAAA1J,OAAK6H,EAAM8B,IAAX,aAAR,YAEFvL,EAAAC,EAAAC,cAACyM,EAAA,EAAKrJ,KAAN,CAAWwC,IAAI,KACb9F,EAAAC,EAAAC,cAACkL,EAAA,EAAD,CAAME,GAAE,GAAA1J,OAAK6H,EAAM8B,IAAX,eAAR,cAEFvL,EAAAC,EAAAC,cAACyM,EAAA,EAAKrJ,KAAN,CAAWwC,IAAI,KACb9F,EAAAC,EAAAC,cAACkL,EAAA,EAAD,CAAME,GAAE,GAAA1J,OAAK6H,EAAM8B,IAAX,mBAAR,gBACgB,MAGlBvL,EAAAC,EAAAC,cAACyM,EAAA,EAAKrJ,KAAN,CAAWwC,IAAI,KACb9F,EAAAC,EAAAC,cAACkL,EAAA,EAAD,CAAME,GAAE,GAAA1J,OAAK6H,EAAM8B,IAAX,iBAAR,gBAEFvL,EAAAC,EAAAC,cAACyM,EAAA,EAAKrJ,KAAN,CAAWwC,IAAI,KACb9F,EAAAC,EAAAC,cAACkL,EAAA,EAAD,CAAME,GAAE,GAAA1J,OAAK6H,EAAM8B,IAAX,kBAAR,qBAKRvL,EAAAC,EAAAC,cAACwY,GAAD,KACE1Y,EAAAC,EAAAC,cAACyL,EAAA,EAAD,KACE3L,EAAAC,EAAAC,cAAC0L,EAAA,EAAD,CACEE,KAAI,GAAAlK,OAAK6H,EAAM8B,IAAX,cACJQ,OAAQ,SAAAnM,GAAK,OAAII,EAAAC,EAAAC,cAACyY,GAAoB/Y,MAExCI,EAAAC,EAAAC,cAAC0L,EAAA,EAAD,CACEE,KAAI,GAAAlK,OAAK6H,EAAM8B,IAAX,cACJQ,OAAQ,SAAAnM,GAAK,OAAII,EAAAC,EAAAC,cAAC0Y,GAAYhZ,MAEhCI,EAAAC,EAAAC,cAAC0L,EAAA,EAAD,CACEE,KAAI,GAAAlK,OAAK6H,EAAM8B,IAAX,YACJQ,OAAQ,SAAAnM,GAAK,OAAII,EAAAC,EAAAC,cAAC2Y,GAAYjZ,MAEhCI,EAAAC,EAAAC,cAAC0L,EAAA,EAAD,CACEE,KAAI,GAAAlK,OAAK6H,EAAM8B,IAAX,cACJQ,OAAQ,SAAAnM,GAAK,OAAII,EAAAC,EAAAC,cAAC4Y,GAAalZ,MAEjCI,EAAAC,EAAAC,cAAC0L,EAAA,EAAD,CACEE,KAAI,GAAAlK,OAAK6H,EAAM8B,IAAX,kBACJQ,OAAQ,SAAAnM,GAAK,OAAII,EAAAC,EAAAC,cAAA,cAAiBN,MAEpCI,EAAAC,EAAAC,cAAC0L,EAAA,EAAD,CACEE,KAAI,GAAAlK,OAAK6H,EAAM8B,IAAX,gBACJQ,OAAQ,SAAAnM,GAAK,OAAII,EAAAC,EAAAC,cAAC6Y,GAAenZ,MAEnCI,EAAAC,EAAAC,cAAC0L,EAAA,EAAD,CACEE,KAAI,GAAAlK,OAAK6H,EAAM8B,IAAX,iBACJQ,OAAQ,SAAAnM,GAAK,OAAII,EAAAC,EAAAC,cAAC8Y,GAAgBpZ,UAQ9C,OAAOI,EAAAC,EAAAC,cAACgM,EAAA,EAAD,CAAUZ,GAAI,CAAEa,SAAU,mBApFL1L,IAAMC,WClBnBuY,eACnB,SAAAA,EAAYrZ,GAAO,IAAAJ,EAAA,OAAAoB,OAAAC,EAAA,EAAAD,CAAAb,KAAAkZ,IACjBzZ,EAAAoB,OAAAE,EAAA,EAAAF,CAAAb,KAAAa,OAAAG,EAAA,EAAAH,CAAAqY,GAAAjY,KAAAjB,KAAMH,KAQRsZ,WAAa,WACX1Z,EAAKC,SAAS,CAAE0Z,gBAAgB,IAChC,IAAI1R,EAAWjI,EAAKH,MAAM+Z,aAC1BzX,MAAK,GAAAC,OAAI1C,EAAJ,+BAAA0C,OAAyCzC,GAAU,CACtD0C,OAAQ,OACRC,QAAS,CACPC,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUuF,KAEpBtF,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GACJ9C,EAAKC,SAAS,CAAE+O,UAAU,IACR,YAAdlM,EAAKmM,OACPnF,MAAM,6BACN9J,EAAKI,MAAMyZ,QAAQC,YAGtB9W,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MA3BXjD,EAyCnB0B,aAAe,SAACqY,EAAahY,GAC3B,IAAI6X,EAAe5Z,EAAKH,MAAM+Z,aAC1BI,EAAmB,GACvB,OAAQD,GACN,IAAK,cACHC,EAAmB5Y,OAAO2C,OAAO6V,EAAc,CAC7CK,YAAalY,EAAM6P,aAErB,MACF,IAAK,sBACHoI,EAAmB5Y,OAAO2C,OAAO6V,EAAc,CAC7CM,oBAAqBnY,EAAM6P,aAE7B,MACF,IAAK,uBACHoI,EAAmB5Y,OAAO2C,OAAO6V,EAAc,CAC7CO,qBAAsBpY,EAAM6P,aAMlC5R,EAAKC,SAAS,CAAE2Z,aAAcI,KA7D9Bha,EAAKH,MAAQ,CACXyE,SAAS,EACTsV,aAAc,GACdD,gBAAgB,GALD3Z,mFA8BC,IAAAsF,EAAA/E,KACd6Z,EAAa7Z,KAAKH,MAAM6J,MAAMC,OAAOkQ,WACzC7Z,KAAKN,SAAS,CAAEqE,SAAS,IACzBnC,MAAK,GAAAC,OAAI1C,EAAJ,wBAAA0C,OAAkCgY,EAAlC,KAAAhY,OAAgDzC,IAClDgD,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GACJwC,EAAKrF,SAAS,CAAE2Z,aAAc9W,EAAMwB,SAAS,MAE9CtB,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,sCA4BrB,IAAAsC,EAAAhF,KACDuC,EAAOvC,KAAKV,MAAM+Z,aACxB,OAA2B,IAAvBrZ,KAAKV,MAAMyE,QAEX9D,EAAAC,EAAAC,cAAA,OAAKkF,MAAO,CAAEuE,QAAS,MAAOC,YAAa,QACzC5J,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,CAAMmD,KAAK,WAKbpI,EAAAC,EAAAC,cAAA,OAAKkF,MAAO,CAAEY,WAAY,OACxBhG,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,YAEFF,EAAAC,EAAAC,cAACmI,EAAA,EAAD,CAAKjD,MAAO,CAAEwE,YAAa,QACzB5J,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAKtF,KAAM,GAAIG,OAAQ,GACrBnD,EAAAC,EAAAC,cAAA,mBADF,QACuBF,EAAAC,EAAAC,cAAA,UAAKoC,EAAKhB,OAEjCtB,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAKtF,KAAM,GAAIG,OAAQ,GACrBnD,EAAAC,EAAAC,cAAA,uBADF,OAC0BF,EAAAC,EAAAC,cAAA,UAAKoC,EAAKuX,YAGtC7Z,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACmI,EAAA,EAAD,CAAKjD,MAAO,CAAEwE,YAAa,QACzB5J,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAKtF,KAAM,GAAIG,OAAQ,GACrBnD,EAAAC,EAAAC,cAAA,iCADF,QAEEF,EAAAC,EAAAC,cAAC8S,GAAA,EAAD,CACErP,SAAU,SAAApC,GAAK,OAAIwD,EAAK7D,aAAa,cAAeK,IACpD0R,eAAqC,SAArB3Q,EAAKmX,eAGzBzZ,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAKtF,KAAM,GAAIG,OAAQ,GACrBnD,EAAAC,EAAAC,cAAA,yCADF,QAEEF,EAAAC,EAAAC,cAAC8S,GAAA,EAAD,CACErP,SAAU,SAAApC,GAAK,OACbwD,EAAK7D,aAAa,sBAAuBK,IAE3C0R,eAA6C,SAA7B3Q,EAAKoX,wBAI3B1Z,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACmI,EAAA,EAAD,CAAKjD,MAAO,CAAEwE,YAAa,QACzB5J,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAKtF,KAAM,GAAIG,OAAQ,GACrBnD,EAAAC,EAAAC,cAAA,yCADF,SAEEF,EAAAC,EAAAC,cAAC8S,GAAA,EAAD,CACEC,eAA8C,SAA9B3Q,EAAKqX,qBACrBhW,SAAU,SAAApC,GAAK,OACbwD,EAAK7D,aAAa,uBAAwBK,OAIhDvB,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAKtF,KAAM,GAAIG,OAAQ,GACrBnD,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CACEC,KAAK,UACLsH,MAAM,QACNzC,KAAK,OACLN,KAAM,QACNrE,QAAShE,KAAKmZ,YALhB,sBAWJlZ,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,mBApI4CO,IAAMC,WCAvCoZ,eACnB,SAAAA,EAAYla,GAAO,IAAAJ,EAAA,OAAAoB,OAAAC,EAAA,EAAAD,CAAAb,KAAA+Z,IACjBta,EAAAoB,OAAAE,EAAA,EAAAF,CAAAb,KAAAa,OAAAG,EAAA,EAAAH,CAAAkZ,GAAA9Y,KAAAjB,KAAMH,KAMRma,aAAe,WACbva,EAAKC,SAAS,CAAE+O,UAAU,IAC1B7M,MAAK,GAAAC,OAAI1C,EAAJ,mCAAA0C,OAA6CzC,IAC/CgD,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GACJ9C,EAAKC,SAAS,CAAE+O,UAAU,IACR,YAAdlM,EAAKmM,KACPnF,MAAM,+BAENA,MAAM,iEAGT9G,MAAM,SAAAC,GAAG,OAAI6G,MAAM,sBAjBtB9J,EAAKH,MAAQ,CACXmP,UAAU,GAHKhP,wEAuBjB,OAA4B,IAAxBO,KAAKV,MAAMmP,SAEXxO,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CAAQC,KAAK,UAAUuE,KAAM,QAAStE,SAAO,EAACsB,MAAO,CAAEC,MAAO,SAA9D,2BAMArF,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CACEC,KAAK,UACLuE,KAAM,QACNrE,QAAShE,KAAKga,aACd3U,MAAO,CAAEC,MAAO,SAJlB,yCAhCyC5E,IAAMC,WCA/CwD,GAAWC,IAAXD,OAEa8V,eACnB,SAAAA,EAAYpa,GAAO,IAAAJ,EAAA,OAAAoB,OAAAC,EAAA,EAAAD,CAAAb,KAAAia,IACjBxa,EAAAoB,OAAAE,EAAA,EAAAF,CAAAb,KAAAa,OAAAG,EAAA,EAAAH,CAAAoZ,GAAAhZ,KAAAjB,KAAMH,KAURqa,cAAgB,WAEoB,OAAhCza,EAAKH,MAAM6a,kBACiB,KAA5B1a,EAAKH,MAAM8a,aAEX3a,EAAKC,SAAS,CAAEc,QAAS,iCAEzBf,EAAKC,SAAS,CAAE2a,cAAc,IAC9BzY,MAAMzC,EAAO,+BAAoCC,EAAQ,CACvD0C,OAAQ,OACRC,QAAS,CACPC,eAAgB,oBAElBC,KAAMC,KAAKC,UAALtB,OAAAuR,GAAA,EAAAvR,CAAA,GAAoBpB,EAAKH,MAAzB,CAAgCua,WAAYpa,EAAKI,MAAMiG,SAE5D1D,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GACJ9C,EAAKC,SAAS,CACZ2a,cAAc,IAEhB9Q,MAAM,sBACN9J,EAAKI,MAAMya,6BAEZ7X,MAAM,SAAAC,GACL6G,MAAM,sBACN5G,QAAQC,IAAIF,OApCDjD,EAyCnB+R,WAAa,SAACC,EAAMC,GAClBjS,EAAKC,SAAS,CAAE0a,aAAc1I,KA1CbjS,EA6CnB0B,aAAe,SAAAK,GAEb,OADA/B,EAAKC,SAAS,CAAE6a,QAAS/Y,IACjBA,GACN,KAAK,EACH/B,EAAKC,SAAS,CAAE8a,OAAQ,QACxB,MACF,KAAK,EACH/a,EAAKC,SAAS,CAAE8a,OAAQ,QACxB,MACF,KAAK,EACH/a,EAAKC,SAAS,CAAE8a,OAAQ,QACxB,MACF,QACE7X,QAAQC,IAAI,uBAxDhBnD,EAAKH,MAAQ,CACX+a,cAAc,EACdE,QAAS,KACTH,aAAc,GACd5Z,QAAS,GACTga,OAAQ,IAPO/a,wEA8DV,IAAAsF,EAAA/E,KACP,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqa,UAAQ,EACRpa,MAAM,qBACNgF,MAAO,CAAEuS,IAAK,IACdtS,MAAO,IACP/F,QAASS,KAAKH,MAAM6a,gBACpBpa,KAAM,kBAAMyE,EAAKmV,cAAcnV,EAAKlF,MAAMiG,MAC1CvF,SAAU,kBAAMwE,EAAKlF,MAAMya,6BAE3Bra,EAAAC,EAAAC,cAACmI,EAAA,EAAD,KACErI,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAKtF,KAAM,IACThD,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CACE4E,aAAa,cACb1E,MAAO,CAAEC,MAAO,KAChB1B,SAAU5D,KAAKmB,cAEflB,EAAAC,EAAAC,cAACwa,GAAD,CAAQnZ,MAAO,GAAf,iCACAvB,EAAAC,EAAAC,cAACwa,GAAD,CAAQnZ,MAAO,GAAf,+BACAvB,EAAAC,EAAAC,cAACwa,GAAD,CAAQnZ,MAAO,GAAf,qCAGJvB,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAKnF,OAAQ,EAAGH,KAAM,IACpBhD,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAACyS,GAAA,EAAD,CAAYhP,SAAU5D,KAAKwR,eAG/BvR,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACmI,EAAA,EAAD,KACErI,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAKtF,KAAM,KACXhD,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAKnF,OAAQ,EAAGH,KAAM,IAClBjD,KAAKV,MAAM+a,aAKXpa,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CAAQE,SAAO,GAAf,wBAJA9D,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CAAQG,QAAShE,KAAKka,eAAtB,gCAQNja,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,MAAIkF,MAAO,CAAEuV,MAAO,QAAU5a,KAAKV,MAAMkB,iBA1GFE,IAAMC,WCUrD,SAAS4W,GAAU1X,GACjB,OACEI,EAAAC,EAAAC,cAAA,UACGU,OAAO2W,OAAO3X,EAAMyI,KAAK1C,IAAI,SAACoE,EAAMjE,GACnC,OAAO9F,EAAAC,EAAAC,cAAA,MAAI4F,IAAKA,GAAMiE,KAExB/J,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CAAQC,KAAK,UAAUuE,KAAM,SAC3BpI,EAAAC,EAAAC,cAACkL,EAAA,EAAD,CAAME,GAAE,GAAA1J,OAAKhC,EAAM6J,MAAM8B,IAAjB,KAAA3J,OAAwBhC,EAAMyI,IAAIxC,MAA1C,2BAKJ7F,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CACEC,KAAK,UACLuE,KAAM,QACNrE,QAAS,WACPnE,EAAMgb,eAAehb,EAAMyI,IAAIxC,KAC/BjG,EAAMib,yBALV,wBAeR,SAASC,GAAclb,GACrB,OAAsB,IAAlBA,EAAMkE,QAEN9D,EAAAC,EAAAC,cAAA,OAAKkF,MAAO,CAAEuE,QAAS,MAAOC,YAAa,QACzC5J,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,CAAMmD,KAAK,WAGoB,IAA1BxI,EAAMmb,SAAS/V,OAEtBhF,EAAAC,EAAAC,cAAA,OAAKkF,MAAO,CAAEuE,QAAS,MAAO3D,WAAY,OACxChG,EAAAC,EAAAC,cAAA,gCAG+B,IAA1BN,EAAMmb,SAAS/V,OAEtBhF,EAAAC,EAAAC,cAAA,SAAOiP,UAAU,SACfnP,EAAAC,EAAAC,cAAA,SAAOiP,UAAU,eACfnP,EAAAC,EAAAC,cAAA,UACGU,OAAO8W,KAAK9X,EAAMmb,SAAS,IAAIpV,IAAI,SAACoE,EAAMjE,GACzC,OACE9F,EAAAC,EAAAC,cAAA,MACE4F,IAAKA,EACLV,MAAO,CAAEe,SAAU,SAAUwR,IAAK,EAAGvR,OAAQ,IAC7CwR,MAAM,OAEL7N,KAIP/J,EAAAC,EAAAC,cAAA,MAAIkF,MAAO,CAAEe,SAAU,SAAUwR,IAAK,EAAGvR,OAAQ,IAAMwR,MAAM,OAA7D,eAGA5X,EAAAC,EAAAC,cAAA,MAAIkF,MAAO,CAAEe,SAAU,SAAUwR,IAAK,EAAGvR,OAAQ,IAAMwR,MAAM,OAA7D,sBAKJ5X,EAAAC,EAAAC,cAAA,aACGN,EAAMmb,SAASpV,IAAI,SAACoE,EAAMjE,GACzB,OACE9F,EAAAC,EAAAC,cAAC8a,GAAD,CACEJ,eAAgBhb,EAAMgb,eACtBC,qBAAsBjb,EAAMib,qBAC5BpR,MAAO7J,EAAM6J,MACbpB,IAAK0B,EACLjE,IAAKA,aAhCZ,MA0CHmV,eACJ,SAAAA,EAAYrb,GAAO,IAAAJ,EAAA,OAAAoB,OAAAC,EAAA,EAAAD,CAAAb,KAAAkb,IACjBzb,EAAAoB,OAAAE,EAAA,EAAAF,CAAAb,KAAAa,OAAAG,EAAA,EAAAH,CAAAqa,GAAAja,KAAAjB,KAAMH,KASRib,qBAAuB,WACrBrb,EAAKC,SAAS,CAAEgb,iBAAiB,KAXhBjb,EAcnB6a,yBAA2B,WACzB7a,EAAKC,SAAS,CAAEgb,iBAAiB,KAfhBjb,EAkBnBob,eAAiB,SAAA/U,GACfrG,EAAKC,SAAS,CAAEyb,oBAAqBrV,KAjBrCrG,EAAKH,MAAQ,CACXyE,SAAS,EACTiX,SAAU,GACVN,iBAAiB,EACjBS,oBAAqB,MANN1b,mFAsBC,IAAAsF,EAAA/E,KAClBA,KAAKN,SAAS,CAAEqE,SAAS,IACzBnC,MAAK,GAAAC,OAAI1C,EAAJ,sBAAA0C,OAAgCzC,IAClCgD,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GACJwC,EAAKrF,SAAS,CAAEsb,SAAUzY,EAAMwB,SAAS,MAE1CtB,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,sCAG5B,OACEzC,EAAAC,EAAAC,cAAA,OAAKkF,MAAO,CAAEY,WAAY,OACxBhG,EAAAC,EAAAC,cAACib,GAAD,MACAnb,EAAAC,EAAAC,cAACkb,GAAD,CACEvV,IAAK9F,KAAKV,MAAM6b,oBAChBT,gBAAiB1a,KAAKV,MAAMob,gBAC5BJ,yBAA0Bta,KAAKsa,2BAEjCra,EAAAC,EAAAC,cAAC4a,GAAD,CACED,qBAAsB9a,KAAK8a,qBAC3BD,eAAgB7a,KAAK6a,eACrBnR,MAAO1J,KAAKH,MAAM6J,MAClB3F,QAAS/D,KAAKV,MAAMyE,QACpBiX,SAAUhb,KAAKV,MAAM0b,mBA9CLta,IAAMC,WAqDX2a,eACnB,SAAAA,EAAYzb,GAAO,IAAAmF,EAAA,OAAAnE,OAAAC,EAAA,EAAAD,CAAAb,KAAAsb,IACjBtW,EAAAnE,OAAAE,EAAA,EAAAF,CAAAb,KAAAa,OAAAG,EAAA,EAAAH,CAAAya,GAAAra,KAAAjB,KAAMH,KACDP,MAAQ,GAFI0F,wEAKjB,GAA8C,SAA1C0G,aAAaC,QAAQ,iBAA6B,CACpD,IAAIjC,EAAQ1J,KAAKH,MAAM6J,MACvB,OACEzJ,EAAAC,EAAAC,cAACsK,EAAA,EAAD,CAAQC,SAAUC,kBAChB1K,EAAAC,EAAAC,cAACyL,EAAA,EAAD,KACE3L,EAAAC,EAAAC,cAAC0L,EAAA,EAAD,CACEC,OAAK,EACLC,KAAI,GAAAlK,OAAK6H,EAAM8B,KACfQ,OAAQ,SAAAnM,GAAK,OAAII,EAAAC,EAAAC,cAACob,GAAgB1b,MAEpCI,EAAAC,EAAAC,cAAC0L,EAAA,EAAD,CACEE,KAAI,GAAAlK,OAAK6H,EAAM8B,IAAX,gBACJQ,OAAQ,SAAAnM,GAAK,OAAII,EAAAC,EAAAC,cAACqb,GAA6B3b,QAMvD,OAAOI,EAAAC,EAAAC,cAACgM,EAAA,EAAD,CAAUZ,GAAI,CAAEa,SAAU,mBAxBK1L,IAAMC,kBCpJlD,SAAS4W,GAAU1X,GACjB,OACEI,EAAAC,EAAAC,cAAA,UACGU,OAAO2W,OAAO3X,EAAMyI,KAAK1C,IAAI,SAACoE,EAAMjE,GACnC,OAAO9F,EAAAC,EAAAC,cAAA,MAAI4F,IAAKA,GAAMiE,MAM9B,SAASyR,GAAa5b,GACpB,OAAsB,IAAlBA,EAAMkE,QAEN9D,EAAAC,EAAAC,cAAA,OAAKkF,MAAO,CAAEuE,QAAS,MAAOC,YAAa,QACzC5J,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,CAAMmD,KAAK,WAGqB,IAA3BxI,EAAM6b,UAAUzW,OAEvBhF,EAAAC,EAAAC,cAAA,OAAKkF,MAAO,CAAEuE,QAAS,MAAO3D,WAAY,OACxChG,EAAAC,EAAAC,cAAA,iCAGgC,IAA3BN,EAAM6b,UAAUzW,OAEvBhF,EAAAC,EAAAC,cAAA,SAAOiP,UAAU,SACfnP,EAAAC,EAAAC,cAAA,SAAOiP,UAAU,eACfnP,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,UAAKN,EAAM6b,UAAUzW,SAEvBhF,EAAAC,EAAAC,cAAA,UACGU,OAAO8W,KAAK9X,EAAM6b,UAAU,IAAI9V,IAAI,SAACoE,EAAMjE,GAC1C,OACE9F,EAAAC,EAAAC,cAAA,MACE4F,IAAKA,EACLV,MAAO,CAAEe,SAAU,SAAUwR,IAAK,EAAGvR,OAAQ,IAC7CwR,MAAM,OAEL7N,OAMX/J,EAAAC,EAAAC,cAAA,aACGN,EAAM6b,UAAU9V,IAAI,SAACoE,EAAMjE,GAC1B,OAAO9F,EAAAC,EAAAC,cAACwb,GAAD,CAAWrT,IAAK0B,EAAMjE,IAAKA,aAxBrC,MAgCY6V,eACnB,SAAAA,EAAY/b,GAAO,IAAAJ,EAAA,OAAAoB,OAAAC,EAAA,EAAAD,CAAAb,KAAA4b,IACjBnc,EAAAoB,OAAAE,EAAA,EAAAF,CAAAb,KAAAa,OAAAG,EAAA,EAAAH,CAAA+a,GAAA3a,KAAAjB,KAAMH,KACDP,MAAQ,CACXyE,SAAS,EACT2X,UAAW,IAJIjc,mFAOC,IAAAsF,EAAA/E,KAClBA,KAAKN,SAAS,CAAEqE,SAAS,IACzBnC,MAAK,GAAAC,OAAI1C,EAAJ,qBAAA0C,OAA+BzC,IACjCgD,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GACJwC,EAAKrF,SAAS,CAAEgc,UAAWnZ,EAAMwB,SAAS,MAE3CtB,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,sCAG5B,OACEzC,EAAAC,EAAAC,cAAA,OAAKkF,MAAO,CAAEY,WAAY,OACxBhG,EAAAC,EAAAC,cAACsb,GAAD,CACE1X,QAAS/D,KAAKV,MAAMyE,QACpB2X,UAAW1b,KAAKV,MAAMoc,oBAtBKhb,IAAMC,8BCpDtBkb,eACnB,SAAAA,EAAYhc,GAAO,IAAAJ,EAAA,OAAAoB,OAAAC,EAAA,EAAAD,CAAAb,KAAA6b,IACjBpc,EAAAoB,OAAAE,EAAA,EAAAF,CAAAb,KAAAa,OAAAG,EAAA,EAAAH,CAAAgb,GAAA5a,KAAAjB,KAAMH,KAiBRic,YAAc,SAAAjW,GACZ,GAAyB,OAArBpG,EAAKH,MAAMyc,MACbxS,MAAM,4BACD,CACL9J,EAAKC,SAAS,CAAEsc,WAAW,EAAMzO,aAAc,IAC/C,IAAI5I,EAAW,IAAIC,SACnBD,EAASE,OACP,WACA3C,KAAKC,UAALtB,OAAAuR,GAAA,EAAAvR,CAAA,GAAoBpB,EAAKH,MAAzB,CAAgCuG,SAAUA,MAE5ClB,EAASE,OAAO,QAASpF,EAAKH,MAAMyc,OACpCvO,IACGC,QAAQ,CACP3L,OAAQ,OACR0J,IAAKrM,EAAO,uBAAA0C,OAA0BzC,GACtCmD,KAAMoC,EACN+I,iBAAkB,SAAAC,GAChBlO,EAAKC,SAAS,CACZ6N,aAAcI,EAAEC,OAASD,EAAEE,WAIhCzL,KAAK,SAAAG,GACJgH,MAAM,uBACN9J,EAAKC,SAAS,CACZsc,WAAW,EACXzO,aAAc,IAEhB9N,EAAKwc,mBAENxZ,MAAM,SAAAC,GACL6G,MAAM,mBACN5G,QAAQC,IAAIF,OAlDDjD,EAuDnB6E,WAAa,SAAA1E,GACX,IAAIsc,EAASrb,OAAAsb,GAAA,EAAAtb,QAAAsb,GAAA,EAAAtb,CAAApB,IACbG,EAAE2H,UAEF,IAAI6U,EAAM,IAAIC,MACdD,EAAIE,OAAS,WACQ,MAAftc,KAAKsF,OAAiC,MAAhBtF,KAAKkK,OAC7BgS,EAAUxc,SAAS,CAAEqc,MAAOnc,EAAE0B,OAAOkD,MAAM,KAE3C+E,MAAM,6CAIV,IAAIgT,EAAS,IAAIC,WACjBD,EAAOE,UAAY,SAASC,GAC1BN,EAAIjS,IAAMuS,EAAMpb,OAAOqb,QAEzBJ,EAAOK,cAAchd,EAAE0B,OAAOkD,MAAM,KAxEnB/E,EA2EnBod,YAAc,aA3EKpd,EA6EnBwc,eA7EmBpb,OAAA4S,GAAA,EAAA5S,CAAA6S,GAAAxT,EAAAyT,KA6EF,SAAAC,IAAA,OAAAF,GAAAxT,EAAA2T,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACfvU,EAAKC,SAAS,CAAEod,aAAa,IAC7Blb,MAAK,GAAAC,OAAI1C,EAAJ,qBAAA0C,OAA+BzC,IACjCgD,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GACJ,IAAIwa,EAAmBxa,EAAK4V,OAAO,SAAAnO,GACjC,MAAyB,UAAlBA,EAAKnE,WAGVmX,EAAmBza,EAAK4V,OAAO,SAAAnO,GACjC,MAAyB,UAAlBA,EAAKnE,WAGdpG,EAAKC,SAAS,CACZud,UAAW1a,EACXwa,iBAAkBA,EAClBC,iBAAkBA,EAClBF,aAAa,MAGhBra,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,KApBb,wBAAAoR,EAAAG,SAAAL,EAAA5T,SA3EfP,EAAKH,MAAQ,CACXwd,aAAa,EACbd,WAAW,EACXiB,UAAW,GACXF,iBAAkB,GAClBC,iBAAkB,GAClBjB,MAAO,KACPxO,aAAc,EACd1H,SAAU,IAVKpG,mFAejBO,KAAKic,kDAqFE,IAAAlX,EAAA/E,KACP,OACEC,EAAAC,EAAAC,cAAA,OAAKkF,MAAO,CAAEY,WAAY,OACvBjG,KAAKV,MAAMwd,YACV7c,EAAAC,EAAAC,cAAA,OAAKkF,MAAO,CAAEuE,QAAS,MAAOC,YAAa,QACzC5J,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,CAAMmD,KAAK,WAGbpI,EAAAC,EAAAC,cAAA,OACEkF,MAAO,CACLY,WAAY,KACZ4D,YAAa,QAGf5J,EAAAC,EAAAC,cAAC+c,GAAA,EAAD,CAAUC,UAAQ,EAACC,cAAe,IAAMC,OAAO,QAC5Crd,KAAKV,MAAMyd,iBAAiBnX,IAAI,SAACoE,EAAM1C,GACtC,OACErH,EAAAC,EAAAC,cAAA,OAAK4F,IAAKuB,GACRrH,EAAAC,EAAAC,cAAA,OACEmF,MAAM,MACN4E,OAAO,MACPE,IAAK,iBACLD,IAAG,GAAAtI,OAAK1C,GAAL0C,OjChIF,UiCgIE,SAAAA,OAA8BmI,EAAKR,kBAQpDvJ,EAAAC,EAAAC,cAAA,OACEkF,MAAO,CACLwE,YAAa,QAGf5J,EAAAC,EAAAC,cAACkD,EAAA,EAAD,KACEpD,EAAAC,EAAAC,cAACkD,EAAA,EAAKE,KAAN,gEAGEtD,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CAAQC,KAAK,WACX7D,EAAAC,EAAAC,cAAA,SAAO6F,IAAI,eAAeX,MAAO,CAAEY,WAAY,OAA/C,eAGAhG,EAAAC,EAAAC,cAAA,SACE2D,KAAK,OACLoC,GAAG,eACHtC,SAAU,SAAAhE,GAAC,OAAImF,EAAKT,WAAW1E,IAC/ByF,MAAO,CACLc,QAAS,EACTC,SAAU,WACVC,QAAS,OAKjBpG,EAAAC,EAAAC,cAAC4N,EAAA,EAAD,CAAUC,QAAmC,IAA1BhO,KAAKV,MAAMiO,aAAoBU,OAAO,WACzDhO,EAAAC,EAAAC,cAACkD,EAAA,EAAKE,KAAN,KACEtD,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CACEC,KAAK,UACLC,QAAS/D,KAAKV,MAAM0c,UACpBhY,QAAS,kBAAMe,EAAK+W,YAAY,WAHlC,aAUL9b,KAAKV,MAAMwd,YACV7c,EAAAC,EAAAC,cAAA,OAAKkF,MAAO,CAAEuE,QAAS,MAAOC,YAAa,QACzC5J,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,CAAMmD,KAAK,WAGbpI,EAAAC,EAAAC,cAAA,OACEkF,MAAO,CACLwE,YAAa,QAGf5J,EAAAC,EAAAC,cAAC+c,GAAA,EAAD,CAAUC,UAAQ,EAACC,cAAe,IAAMC,OAAO,QAC5Crd,KAAKV,MAAM0d,iBAAiBpX,IAAI,SAACoE,EAAM1C,GACtC,OACErH,EAAAC,EAAAC,cAAA,OAAK4F,IAAKuB,GACRrH,EAAAC,EAAAC,cAAA,OACEmF,MAAM,MACN4E,OAAO,MACPE,IAAK,iBACLD,IAAG,GAAAtI,OAAK1C,GAAL0C,OjC/LF,UiC+LE,SAAAA,OAA8BmI,EAAKR,kBAQpDvJ,EAAAC,EAAAC,cAAA,OACEkF,MAAO,CACLwE,YAAa,QAGf5J,EAAAC,EAAAC,cAACkD,EAAA,EAAD,KACEpD,EAAAC,EAAAC,cAACkD,EAAA,EAAKE,KAAN,gEAGEtD,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CAAQC,KAAK,WACX7D,EAAAC,EAAAC,cAAA,SAAO6F,IAAI,eAAeX,MAAO,CAAEY,WAAY,OAA/C,eAGAhG,EAAAC,EAAAC,cAAA,SACE2D,KAAK,OACLoC,GAAG,eACHtC,SAAU,SAAAhE,GAAC,OAAImF,EAAKT,WAAW1E,IAC/ByF,MAAO,CACLc,QAAS,EACTC,SAAU,WACVC,QAAS,OAKjBpG,EAAAC,EAAAC,cAAC4N,EAAA,EAAD,CAAUC,QAAmC,IAA1BhO,KAAKV,MAAMiO,aAAoBU,OAAO,WACzDhO,EAAAC,EAAAC,cAACkD,EAAA,EAAKE,KAAN,KACEtD,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CACEC,KAAK,UACLC,QAAS/D,KAAKV,MAAM0c,UACpBhY,QAAS,kBAAMe,EAAK+W,YAAY,WAHlC,aAUN7b,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,mBAxOiCO,IAAMC,qBCavC2c,GAAW9Q,IAAX8Q,OAEaC,gMAEY,MAAzBvd,KAAKH,MAAM6J,MAAM8B,KACnBxL,KAAKH,MAAMyZ,QAAQrJ,KAAK,+CAGnB,IAAAxQ,EAAAO,KACP,GAA8C,SAA1C0L,aAAaC,QAAQ,iBAA6B,CACpD,IAAIjC,EAAQ1J,KAAKH,MAAM6J,MACvB,OACEzJ,EAAAC,EAAAC,cAACsK,EAAA,EAAD,CAAQC,SAAUC,kBAChB1K,EAAAC,EAAAC,cAACmD,EAAA,EAAD,KACErD,EAAAC,EAAAC,cAACmd,GAAD,CACElO,UAAU,SACV/J,MAAO,CACLe,SAAU,QACVd,MAAO,OACPkY,KAAM,EACN5F,IAAK,EACL6F,MAAO,EACPpX,OAAQ,MAGVpG,EAAAC,EAAAC,cAAA,OAAKiP,UAAU,SACfnP,EAAAC,EAAAC,cAACyM,EAAA,EAAD,CACEC,MAAM,OACNC,KAAK,aACLzH,MAAO,CAAEqY,WAAY,OAAQ7T,YAAa,OAE1C5J,EAAAC,EAAAC,cAACyM,EAAA,EAAKrJ,KAAN,CAAWwC,IAAI,IAAIiR,QAAM,GACvB/W,EAAAC,EAAAC,cAACkL,EAAA,EAAD,CAAME,GAAE,GAAA1J,OAAK6H,EAAM8B,MACjBvL,EAAAC,EAAAC,cAACwI,EAAA,EAAD,CAAM7E,KAAK,SADb,cAKF7D,EAAAC,EAAAC,cAACyM,EAAA,EAAKrJ,KAAN,CAAWwC,IAAI,KACb9F,EAAAC,EAAAC,cAACkL,EAAA,EAAD,CAAME,GAAE,GAAA1J,OAAK6H,EAAM8B,IAAX,gBACNvL,EAAAC,EAAAC,cAACwI,EAAA,EAAD,CAAM7E,KAAK,cADb,sBAKF7D,EAAAC,EAAAC,cAACyM,EAAA,EAAKrJ,KAAN,CAAWwC,IAAI,KACb9F,EAAAC,EAAAC,cAACkL,EAAA,EAAD,CAAME,GAAE,GAAA1J,OAAK6H,EAAM8B,IAAX,WACNvL,EAAAC,EAAAC,cAACwI,EAAA,EAAD,CAAM7E,KAAK,mBADb,iBAKF7D,EAAAC,EAAAC,cAACyM,EAAA,EAAKrJ,KAAN,CAAWwC,IAAI,KACb9F,EAAAC,EAAAC,cAACkL,EAAA,EAAD,CAAME,GAAE,GAAA1J,OAAK6H,EAAM8B,IAAX,aACNvL,EAAAC,EAAAC,cAACwI,EAAA,EAAD,CAAM7E,KAAK,SADb,mBAKF7D,EAAAC,EAAAC,cAACyM,EAAA,EAAKrJ,KAAN,CAAWwC,IAAI,KACb9F,EAAAC,EAAAC,cAACkL,EAAA,EAAD,CAAME,GAAE,GAAA1J,OAAK6H,EAAM8B,IAAX,UACNvL,EAAAC,EAAAC,cAACwI,EAAA,EAAD,CAAM7E,KAAK,SADb,qBAKF7D,EAAAC,EAAAC,cAACyM,EAAA,EAAKrJ,KAAN,CAAWwC,IAAI,KACb9F,EAAAC,EAAAC,cAACkL,EAAA,EAAD,CAAME,GAAE,GAAA1J,OAAK6H,EAAM8B,IAAX,cACNvL,EAAAC,EAAAC,cAACwI,EAAA,EAAD,CAAM7E,KAAK,SADb,oBAKF7D,EAAAC,EAAAC,cAACyM,EAAA,EAAKrJ,KAAN,CAAWwC,IAAI,KACb9F,EAAAC,EAAAC,cAACkL,EAAA,EAAD,CAAME,GAAE,GAAA1J,OAAK6H,EAAM8B,IAAX,aACNvL,EAAAC,EAAAC,cAACwI,EAAA,EAAD,CAAM7E,KAAK,SADb,cAKF7D,EAAAC,EAAAC,cAACyM,EAAA,EAAKrJ,KAAN,CAAWwC,IAAI,KACb9F,EAAAC,EAAAC,cAACwd,GAAA,OAAD,CACE3Z,QAAS,WACP0H,aAAakS,WAAW,iBACxBlS,aAAakS,WAAW,SACxBne,EAAKI,MAAMyZ,QAAQrJ,KAAK,YAG1BhQ,EAAAC,EAAAC,cAACwI,EAAA,EAAD,CAAM7E,KAAK,SAPb,aAaN7D,EAAAC,EAAAC,cAACyL,EAAA,EAAD,KACE3L,EAAAC,EAAAC,cAAC0L,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAI,GAAAlK,OAAK6H,EAAM8B,IAAX,MACfvL,EAAAC,EAAAC,cAAC0d,GAAD,OAEF5d,EAAAC,EAAAC,cAAC0L,EAAA,EAAD,CACEE,KAAI,GAAAlK,OAAK6H,EAAM8B,IAAX,eACJQ,OAAQ,SAAAnM,GAAK,OAAII,EAAAC,EAAAC,cAAC2d,EAAeje,MAEnCI,EAAAC,EAAAC,cAAC0L,EAAA,EAAD,CACEE,KAAI,GAAAlK,OAAK6H,EAAM8B,IAAX,UACJQ,OAAQ,SAAAnM,GAAK,OAAII,EAAAC,EAAAC,cAAC4d,GAASle,MAE7BI,EAAAC,EAAAC,cAAC0L,EAAA,EAAD,CACEE,KAAI,GAAAlK,OAAK6H,EAAM8B,IAAX,YACJQ,OAAQ,SAAAnM,GAAK,OAAII,EAAAC,EAAAC,cAAC6d,GAAoBne,MAExCI,EAAAC,EAAAC,cAAC0L,EAAA,EAAD,CACEE,KAAI,GAAAlK,OAAK6H,EAAM8B,IAAX,SACJQ,OAAQ,SAAAnM,GAAK,OAAII,EAAAC,EAAAC,cAAC8d,GAAgBpe,MAEpCI,EAAAC,EAAAC,cAAC0L,EAAA,EAAD,CACEE,KAAI,GAAAlK,OAAK6H,EAAM8B,IAAX,aACJQ,OAAQ,SAAAnM,GAAK,OAAII,EAAAC,EAAAC,cAAC+d,GAAmBre,MAEvCI,EAAAC,EAAAC,cAAC0L,EAAA,EAAD,CACEE,KAAI,GAAAlK,OAAK6H,EAAM8B,IAAX,YACJQ,OAAQ,SAAAnM,GAAK,OAAII,EAAAC,EAAAC,cAACge,GAAYte,SAOxC,OAAOI,EAAAC,EAAAC,cAACgM,EAAA,EAAD,CAAUZ,GAAI,CAAEa,SAAU,mBAtHA1L,IAAMC,WClBvCyd,8MACJ9e,MAAQ,CACN+e,MAAO,GACP1P,SAAU,GACV2P,YAAY,EACZC,YAAY,EACZ5c,cAAe,GACfmB,YAAa,GACbiB,SAAS,KAGXjE,mBAAqB,WACnBL,EAAKC,SAAS,CAAE6e,YAAY,OAG9BC,qBAAuB,SAAA5e,GACrBA,EAAE6e,iBACFhf,EAAKC,SAAS,CACZ6e,YAAY,EACZ5c,cAAe,iDACfoC,SAAS,IAGXnC,MAAK,GAAAC,OAAI1C,EAAJ,0BAAA0C,OAAoCzC,IACtCgD,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GACJ9C,EAAKC,SAAS,CACZ6e,YAAY,EACZ5c,cAAe,8CACfoC,SAAS,MAGZtB,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAG9Bgc,YAAc,WACa,KAArBjf,EAAKH,MAAM+e,OAAwC,KAAxB5e,EAAKH,MAAMqP,SACxClP,EAAKC,SAAS,CACZ6e,YAAY,EACZle,MAAO,wBACPsB,cAAe,6BAGjBlC,EAAKC,SAAS,CACZ6e,YAAY,EACZ5c,cAAe,mCACfoC,SAAS,IAEXnC,MAAMzC,EAAO,qBAA0BC,EAAQ,CAC7C0C,OAAQ,OACRC,QAAS,CACPC,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU1C,EAAKH,SAEzB8C,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GACc,kBAAdA,EAAKmM,MACPhD,aAAaiT,QAAQ,gBAAiB,QACtCjT,aAAaiT,QAAQ,QAASpc,GAC9B9C,EAAKC,SAAS,CAAE6e,YAAY,EAAOxa,SAAS,IAC5CtE,EAAKI,MAAMyZ,QAAQrJ,KAAK,eAExBxQ,EAAKC,SAAS,CACZ6e,YAAY,EACZle,MAAO,uBACPsB,cAAe,uBACfoC,SAAS,MAIdtB,MAAM,SAAAC,GACLC,QAAQC,IAAIF,+EAKX,IAAAqC,EAAA/E,KACC4e,EAAsB5e,KAAKH,MAAMgf,KAAjCD,kBACR,OACE3e,EAAAC,EAAAC,cAAA,QACEkF,MAAO,CACLyZ,gBACE,kHAKJ7e,EAAAC,EAAAC,cAAA,OACEkF,MAAO,CACLY,WAAY,MACZ4D,YAAa,MACbnB,aAAc,MACdkC,cAAe,QAGjB3K,EAAAC,EAAAC,cAAA,MAAIkF,MAAO,CAAEuV,MAAO,UAClB3a,EAAAC,EAAAC,cAAA,8BAEFF,EAAAC,EAAAC,cAACkD,EAAA,EAAD,CAAM+L,UAAU,cACdnP,EAAAC,EAAAC,cAACkD,EAAA,EAAKE,KAAN,KACGqb,EAAkB,WAAY,CAC7BG,MAAO,CACL,CAAEC,UAAU,EAAMxe,QAAS,iCAF9Boe,CAKC3e,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CACEub,OACEhf,EAAAC,EAAAC,cAACwI,EAAA,EAAD,CAAM7E,KAAK,OAAOuB,MAAO,CAAEuV,MAAO,qBAEpCjX,YAAY,QACZC,SAAU,SAAAhE,GACRmF,EAAKrF,SAAS,CAAE2e,MAAOze,EAAE0B,OAAOE,aAKxCvB,EAAAC,EAAAC,cAACkD,EAAA,EAAKE,KAAN,KACGqb,EAAkB,WAAY,CAC7BG,MAAO,CACL,CAAEC,UAAU,EAAMxe,QAAS,iCAF9Boe,CAKC3e,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CACEub,OACEhf,EAAAC,EAAAC,cAACwI,EAAA,EAAD,CAAM7E,KAAK,OAAOuB,MAAO,CAAEuV,MAAO,qBAEpC9W,KAAK,WACLH,YAAY,WACZC,SAAU,SAAAhE,GACRmF,EAAKrF,SAAS,CAAEiP,SAAU/O,EAAE0B,OAAOE,aAK3CvB,EAAAC,EAAAC,cAACkD,EAAA,EAAKE,KAAN,KACEtD,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CACEC,KAAK,UACLob,SAAS,SACT9P,UAAU,oBACV/J,MAAO,CAAEC,MAAO,QAChBtB,QAAShE,KAAK0e,aALhB,WAWFze,EAAAC,EAAAC,cAAA,KACEkF,MAAO,CAAEuV,MAAO,QAAS1D,SAAU,IACnCiI,KAAK,KACLnb,QAAS,SAAApE,GACPmF,EAAKyZ,qBAAqB5e,KAJ9B,sBAUDI,KAAKV,MAAMif,WACVte,EAAAC,EAAAC,cAAC8D,EAAD,CACEnE,mBAAoBE,KAAKF,mBACzBO,MAAOL,KAAKV,MAAMwD,YAClBtC,QAASR,KAAKV,MAAMqC,gBAEI,IAAvB3B,KAAKV,MAAMyE,QAAmB9D,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,MAAWjF,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgE,SAAA,OAG5CjE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgE,SAAA,eAtKkBxD,IAAMC,WA8KrBye,OAAKC,OAAO,CAAE9d,KAAM,gBAApB6d,CAAsChB,IC9KhCkB,eACnB,SAAAA,EAAYzf,GAAO,IAAAJ,EAAA,OAAAoB,OAAAC,EAAA,EAAAD,CAAAb,KAAAsf,IACjB7f,EAAAoB,OAAAE,EAAA,EAAAF,CAAAb,KAAAa,OAAAG,EAAA,EAAAH,CAAAye,GAAAre,KAAAjB,KAAMH,KACDP,MAAQ,GAFIG,qHAMjB,OACEQ,EAAAC,EAAAC,cAACsK,EAAA,EAAD,CAAQC,SAAUC,kBAChB1K,EAAAC,EAAAC,cAACyL,EAAA,EAAD,KACE3L,EAAAC,EAAAC,cAAC0L,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,OAAQ,SAAAnM,GAAK,OAAII,EAAAC,EAAAC,cAACof,GAAc1f,MACtDI,EAAAC,EAAAC,cAAC0L,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,OAAQ,SAAAnM,GAAK,OAAII,EAAAC,EAAAC,cAACqf,GAAU3f,MACvDI,EAAAC,EAAAC,cAAC0L,EAAA,EAAD,CAAOE,KAAK,aAAaC,OAAQ,SAAAnM,GAAK,OAAII,EAAAC,EAAAC,cAACof,GAAc1f,eAZjCa,IAAMC,WCAnB8e,uBACnB,SAAAA,EAAY5f,GAAO,IAAAJ,EAAA,OAAAoB,OAAAC,EAAA,EAAAD,CAAAb,KAAAyf,IACjBhgB,EAAAoB,OAAAE,EAAA,EAAAF,CAAAb,KAAAa,OAAAG,EAAA,EAAAH,CAAA4e,GAAAxe,KAAAjB,KAAMH,KACDP,MAAQ,GAFIG,qHAMjB,OACEQ,EAAAC,EAAAC,cAACuf,GAAD,aAR2Bhf,IAAMC,YCOnBgf,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASpW,MACvB,2DCXNqW,IAAS/T,OACP/L,EAAAC,EAAAC,cAACsK,EAAA,EAAD,CAAYC,SAAUC,kBACpB1K,EAAAC,EAAAC,cAAC6f,GAAD,OAEFC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMje,KAAK,SAAAke,GACjCA,EAAaC","file":"static/js/main.f441141a.chunk.js","sourcesContent":["//export const baseurl = 'http://localhost:3000/';\r\nexport const baseurl = 'https://aaaacedmy2.herokuapp.com/';\r\nexport const endurl = 'p';\r\nexport const fileurl = 'uploads';\r\n","import React from 'react';\r\nimport { Modal } from 'antd';\r\n\r\nexport default class Alert extends React.Component {\r\n  state = { visible: false };\r\n  componentDidMount() {\r\n    this.setState({ visible: true });\r\n  }\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n\r\n  handleOk = e => {\r\n    this.props.makeShowModalFalse();\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  handleCancel = e => {\r\n    this.props.makeShowModalFalse();\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Modal\r\n          title={this.props.title}\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n        >\r\n          <p>{this.props.message}</p>\r\n          {this.props.children}\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react'\r\n\r\nimport {\r\n    Form, Input, Button\r\n} from 'antd';\r\n\r\nimport { baseurl , endurl} from '../../../baseurl'\r\nimport Alert from '../../Alert.js'\r\n\r\n\r\nexport default class AddCategory extends React.Component {\r\n    constructor() {\r\n      super();\r\n      this.state = {\r\n        formLayout: 'horizontal',\r\n        english_name : '',\r\n        hindi_name : '',\r\n        UploadingData : false,\r\n        showModal : false,\r\n        modal_title : '',\r\n        modal_message : ''\r\n      };\r\n    }\r\n  \r\n    makeShowModalFalse = () => {\r\n      this.setState({ showModal : false , UploadingData : false,})\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({ [event.target.name] : event.target.value })\r\n    }\r\n    \r\n    handleSubmit = () => {\r\n        if(this.state.english_name === ''){\r\n            this.setState( { showModal : true , title : 'Requirements' , modal_message : \"Category Name In English Is Required\"})\r\n        }\r\n        else {\r\n            this.setState({ UploadingData : true })\r\n            fetch(baseurl+`categories_and_sub_categories/add_category/${endurl}` , {\r\n                method : 'POST',\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body : JSON.stringify(this.state)\r\n            })\r\n            .then((res) => res.json())\r\n            .then((data) => this.setState( { english_name : '' , hindi_name : '' , showModal : true , title : 'Confirmation' , modal_message : data.message}))\r\n            .catch(err => { this.setState( { showModal : true , title : 'Server Error ' , modal_message : \"Please Contact To Technical Team \"}); console.log(err)})\r\n        }\r\n    }\r\n\r\n    render() {\r\n      const { formLayout } = this.state;\r\n      const formItemLayout = formLayout === 'horizontal' ? {\r\n        labelCol: { span: 4 },\r\n        wrapperCol: { span: 14 },\r\n      } : null;\r\n      const buttonItemLayout = formLayout === 'horizontal' ? {\r\n        wrapperCol: { span: 14, offset: 4 },\r\n      } : null;\r\n      return (\r\n        <div>\r\n          <center><h1>Add Category </h1>  </center>\r\n          <Form layout={formLayout}>\r\n            <Form.Item\r\n              label=\"Category Name(English)\"\r\n              {...formItemLayout}\r\n            >\r\n            <Input placeholder=\"Enter Category In English\" \r\n                value = {this.state.english_name}\r\n                onChange = {this.handleChange}\r\n                name = 'english_name'\r\n            />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"Category Name(Hindi)\"\r\n              {...formItemLayout}\r\n              value = {this.state.hindi_name}\r\n              onChange = {this.handleChange}\r\n              name = 'hindi_name'\r\n            >\r\n            <Input placeholder=\"Enter Category In English\" \r\n              value = {this.state.hindi_name}\r\n              onChange = {this.handleChange}\r\n              name = 'hindi_name'\r\n            />  \r\n            </Form.Item>\r\n            <Form.Item {...buttonItemLayout}>\r\n                <Button type=\"primary\" loading={this.state.UploadingData} onClick={this.handleSubmit}>\r\n                  Submit\r\n                </Button>\r\n            </Form.Item>\r\n          </Form>\r\n          {this.state.showModal === true ? <Alert makeShowModalFalse = {this.makeShowModalFalse} title = {this.state.modal_title} message = {this.state.modal_message} /> : <></>}\r\n        </div>\r\n      );\r\n    }\r\n  } \r\n","import React from 'react';\r\nimport { baseurl, endurl } from '../../../baseurl';\r\nimport { Form, Input, Button, Select, Spin } from 'antd';\r\n\r\nimport Alert from '../../Alert.js';\r\nconst Option = Select.Option;\r\n\r\nexport default class AddSubCategory extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      formLayout: 'horizontal',\r\n      english_name: '',\r\n      hindi_name: '',\r\n      all_categories: [],\r\n      category_id: 0,\r\n      logo: null,\r\n      showModal: false,\r\n      modal_title: '',\r\n      modal_message: '',\r\n      UploadingData: false\r\n    };\r\n  }\r\n\r\n  handleFile = e => {\r\n    this.setState({ logo: e.target.files[0] });\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  handleSelectChange = value => {\r\n    this.setState({ category_id: value });\r\n  };\r\n  componentDidMount() {\r\n    fetch(\r\n      `${baseurl}categories_and_sub_categories/fetch_all_categories/${endurl}`\r\n    )\r\n      .then(res => res.json())\r\n      .then(data => this.setState({ all_categories: data }))\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  makeShowModalFalse = () => {\r\n    this.setState({ showModal: false, UploadingData: false });\r\n  };\r\n\r\n  handleSubmit = () => {\r\n    if (this.state.english_name === '') {\r\n      this.setState({\r\n        showModal: true,\r\n        modal_title: 'Requirements',\r\n        modal_message: 'Category Name In English Is Required'\r\n      });\r\n    } else if (this.state.category_id === 0) {\r\n      this.setState({\r\n        showModal: true,\r\n        modal_title: 'Requirements',\r\n        modal_message: 'Please Choose Category'\r\n      });\r\n    } else if (this.state.logo === null) {\r\n      this.setState({\r\n        showModal: true,\r\n        modal_title: 'Requirements',\r\n        modal_message: 'Please Upload Logo'\r\n      });\r\n    } else {\r\n      this.setState({ UploadingData: true });\r\n      let formData = new FormData();\r\n      formData.append('SendData', JSON.stringify(this.state));\r\n      formData.append('sub_category_image', this.state.logo);\r\n      fetch(\r\n        baseurl + `categories_and_sub_categories/add_sub_category/${endurl}`,\r\n        {\r\n          method: 'POST',\r\n          body: formData\r\n        }\r\n      )\r\n        .then(res => res.json())\r\n        .then(data =>\r\n          this.setState({\r\n            english_name: '',\r\n            hindi_name: '',\r\n            category_id: 0,\r\n            showModal: true,\r\n            modal_title: 'Confirmation',\r\n            modal_message: 'Sub Category Added Successfully... '\r\n          })\r\n        )\r\n        .catch(err => {\r\n          this.setState({\r\n            showModal: true,\r\n            modal_title: 'Server Error',\r\n            modal_message: 'Please Contact Technical Team'\r\n          });\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { formLayout } = this.state;\r\n    const formItemLayout =\r\n      formLayout === 'horizontal'\r\n        ? {\r\n            labelCol: { span: 4 },\r\n            wrapperCol: { span: 14 }\r\n          }\r\n        : null;\r\n    const buttonItemLayout =\r\n      formLayout === 'horizontal'\r\n        ? {\r\n            wrapperCol: { span: 14, offset: 4 }\r\n          }\r\n        : null;\r\n    return (\r\n      <div>\r\n        <center>\r\n          <h1>Add Sub Category </h1>{' '}\r\n        </center>\r\n        <Form layout={formLayout}>\r\n          <Form.Item label='Select Category' {...formItemLayout}>\r\n            {this.state.all_categories.length === 0 ? (\r\n              <>\r\n                <Spin /> Loading Categories ...{' '}\r\n              </>\r\n            ) : (\r\n              <Select\r\n                showSearch\r\n                style={{ width: 200 }}\r\n                placeholder='Select Category '\r\n                optionFilterProp='children'\r\n                onChange={this.handleSelectChange}\r\n                filterOption={(input, option) =>\r\n                  option.props.children\r\n                    .toLowerCase()\r\n                    .indexOf(input.toLowerCase()) >= 0\r\n                }\r\n              >\r\n                {this.state.all_categories.map(category => {\r\n                  return (\r\n                    <Option value={`${category._id}`} key={category._id}>\r\n                      {category.english_name}\r\n                    </Option>\r\n                  );\r\n                })}\r\n              </Select>\r\n            )}\r\n          </Form.Item>\r\n          <Form.Item label='Sub Category Name(English)' {...formItemLayout}>\r\n            <Input\r\n              placeholder='Enter Sub Category In English'\r\n              value={this.state.english_name}\r\n              onChange={this.handleChange}\r\n              name='english_name'\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label='Sub Category Name(Hindi)'\r\n            {...formItemLayout}\r\n            value={this.state.hindi_name}\r\n            onChange={this.handleChange}\r\n            name='hindi_name'\r\n          >\r\n            <Input\r\n              placeholder='Enter Sub  Category In English'\r\n              value={this.state.hindi_name}\r\n              onChange={this.handleChange}\r\n              name='hindi_name'\r\n            />\r\n          </Form.Item>\r\n          <Form.Item {...buttonItemLayout}>\r\n            Attach Logo ( &nbsp;Required &nbsp;) &nbsp; : &nbsp;&nbsp;&nbsp;\r\n            <Button type='primary'>\r\n              <label for='upload-photo' style={{ paddingTop: '5%' }}>\r\n                Browse File\r\n              </label>\r\n              <input\r\n                type='file'\r\n                id='upload-photo'\r\n                onChange={e => this.handleFile(e)}\r\n                style={{\r\n                  opacity: 0,\r\n                  position: 'absolute',\r\n                  zIndex: -1\r\n                }}\r\n              />\r\n            </Button>\r\n          </Form.Item>\r\n          <Form.Item {...buttonItemLayout}>\r\n            <Button\r\n              type='primary'\r\n              loading={this.state.UploadingData}\r\n              onClick={this.handleSubmit}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n        {this.state.showModal === true ? (\r\n          <Alert\r\n            makeShowModalFalse={this.makeShowModalFalse}\r\n            title={this.state.modal_title}\r\n            message={this.state.modal_message}\r\n          />\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export const encoded_data = [\r\n  { name: 'theta', js_code: '\\u03B8' },\r\n  { name: 'angle', js_code: '\\u2220' },\r\n  { name: 'degree', js_code: '\\u00B0' },\r\n  { name: 'alpha', js_code: '\\u03B1' },\r\n  { name: 'beta', js_code: '\\u03B2' },\r\n  { name: 'gamma', js_code: '\\u03B3' },\r\n  { name: 'delta', js_code: '\\u0394' },\r\n  { name: 'sqrt', js_code: '\\u221A' },\r\n  { name: 'cbrt', js_code: '\\u221B' },\r\n  { name: 'square', js_code: '\\u00B2' },\r\n  { name: 'cube', js_code: '\\u00B3' },\r\n  { name: 'powern', js_code: '\\u207F' },\r\n  { name: 'bar', js_code: '\\u203E' }\r\n];\r\n","import React from 'react'\r\nimport { baseurl , endurl } from '../../../baseurl'\r\nimport {\r\n    Form, Input, Button, Select , Row, Col , Icon ,  Spin \r\n} from 'antd';\r\n \r\nimport Alert from '../../Alert'\r\n\r\nimport { encoded_data } from '../../../encoded_data'\r\n\r\nconst { TextArea } = Input;\r\nconst Option = Select.Option;\r\n\r\nexport default class AddQuestion extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            \"english_text\" : '',\r\n            \"hindi_text\" : '',\r\n            \"all_sub_categories\" : [],\r\n            formLayout: 'horizontal',\r\n            options : [],\r\n            correct_option_index : null,\r\n            sub_category_id : 0,\r\n            pic : null , \r\n            UploadingData : false,\r\n            showModal : false,\r\n            modal_title : '',\r\n            modal_message : '',\r\n            type : ''\r\n        }\r\n    }\r\n    \r\n    makeShowModalFalse = () => {\r\n      this.setState({ showModal : false , UploadingData : false,})\r\n    }\r\n\r\n    validateForm = () => {\r\n      let validateOptions = () => {\r\n        for(let i = 0 ; i  < this.state.options.length ; i++){\r\n          if(this.state.options[i].english_text === '' ){\r\n            return false\r\n          }\r\n        }\r\n        return true\r\n      }\r\n      const { sub_category_id , english_text , correct_option_index , options , type } = this.state\r\n      if(sub_category_id === 0){\r\n        this.setState({ showModal : true , modal_title : 'Requirements' , modal_message : 'Please Choose Category'})\r\n        return false\r\n      }else if(type === ''){\r\n        this.setState({ showModal : true , modal_title : 'Requirements' , modal_message : 'Please Enter Type '})\r\n        return false\r\n      }else if(english_text === ''){\r\n        this.setState({ showModal : true , modal_title : 'Requirements' , modal_message : 'Please Type The Question'})\r\n        return false\r\n      }else if(options.length === 0){\r\n        this.setState({ showModal : true , modal_title : 'Requirements' , modal_message : 'Please Make Options'})\r\n        return false\r\n      }\r\n      else if(validateOptions() === false){\r\n        this.setState({ showModal : true , modal_title : 'Requirements' , modal_message : 'Please Fill All The Options'})\r\n         return false\r\n      }else if(correct_option_index === 0){\r\n        this.setState({ showModal : true , modal_title : 'Requirements' , modal_message : 'Please Fill Correct Option Field'})\r\n        return false\r\n      }else if(correct_option_index > options.length || correct_option_index < 1){\r\n        this.setState({ showModal : true , modal_title : 'Requirements' , modal_message : 'Invalid Option'})\r\n        return false\r\n      } else {\r\n        return true\r\n      }\r\n    }\r\n\r\n\r\n    handleChange = (event) => {\r\n        let found = false ;\r\n        for(let i = 0 ; i < encoded_data.length ; i++){\r\n          if(event.target.value.indexOf(encoded_data[i].name) !== -1){\r\n            found = true\r\n            this.setState({ [event.target.name] : event.target.value.replace(encoded_data[i].name,encoded_data[i].js_code) })  \r\n            break ;\r\n          }\r\n        }\r\n        if(!found){\r\n          this.setState({ [event.target.name] : event.target.value })  \r\n        }\r\n    }\r\n\r\n    handleOptionChange = (index , event) => {\r\n      event.persist();\r\n      let object = {};\r\n      let found = false ;\r\n      for(let i = 0 ; i < encoded_data.length ; i++){\r\n        if(event.target.value.indexOf(encoded_data[i].name) !== -1){\r\n          found = true\r\n          object = Object.assign(this.state.options[index] , { [event.target.name] : event.target.value.replace(encoded_data[i].name,encoded_data[i].js_code)})\r\n          break ;\r\n        }\r\n      }\r\n      if(!found){\r\n         object = Object.assign(this.state.options[index] , { [event.target.name] : event.target.value})\r\n      }\r\n      this.setState(state => ({ [state.options[index]] : object}))\r\n    }\r\n  \r\n\r\n    handleSelectChange = (value) => {\r\n      this.setState({ sub_category_id : value })\r\n    }\r\n    \r\n    handleSubmit = (e) => {\r\n        if(this.validateForm() === true){\r\n          let custome_url = `questions/add_without_image/${endurl}`\r\n          this.setState({ UploadingData : true})\r\n          let formData = new FormData()\r\n          const sendData = {\r\n            \"english_text\" : this.state.english_text,\r\n            \"hindi_text\" : this.state.hindi_text,\r\n            options : this.state.options,\r\n            correct_option_index : this.state.correct_option_index,\r\n            sub_category_id : this.state.sub_category_id,\r\n            type : this.state.type\r\n          }\r\n          formData.append(\"SendData\" , JSON.stringify(sendData))\r\n          if(this.state.pic !== null ){\r\n          custome_url = `questions/add_with_image/${endurl}`;  \r\n          formData.append(\"question_image\" , this.state.pic)}\r\n          fetch(baseurl+custome_url , {\r\n              method : 'POST',\r\n              body : formData\r\n          })\r\n          .then((res) => res.json())\r\n          .then((data) => {this.setState({ UploadingData : false ,\r\n            \"english_text\" : '',\r\n            \"hindi_text\" : '',\r\n            formLayout: 'horizontal',\r\n            options : [],\r\n            correct_option_index : null,\r\n            sub_category_id : 0,\r\n            pic : null , \r\n            showModal : true,\r\n            modal_title : 'Confirmation',\r\n            modal_message : 'Question Added Successfully'});})\r\n          .catch(err => {this.setState({showModal : true , modal_title : 'Server Error' , modal_message : 'Please Contact To Technical Team'});console.log(err)})\r\n      } else {}\r\n    }\r\n\r\n    handleFile = (e) => {\r\n      this.setState({ pic : e.target.files[0]})\r\n    }\r\n\r\n    handleAppendButton = () => {\r\n        const newOption = {\r\n          \"english_text\" : '',\r\n          \"hindi_text\" : '',\r\n          \"question_id\" : ''\r\n        }\r\n        this.setState(state => ({\r\n          options : state.options.concat(newOption)\r\n        }))\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch(`${baseurl}categories_and_sub_categories/fetch_all_sub_categories/${endurl}`)\r\n        .then(res => res.json())\r\n        .then(data => this.setState({ all_sub_categories : data}))\r\n        .catch(err => console.log(err))\r\n    }\r\n    render(){\r\n        const { formLayout } = this.state;\r\n        const formItemLayout = formLayout === 'horizontal' ? {\r\n          labelCol: { span: 4 },\r\n          wrapperCol: { span: 14 },\r\n        } : null;\r\n        const buttonItemLayout = formLayout === 'horizontal' ? {\r\n          wrapperCol: { span: 14, offset: 4 },\r\n        } : null;\r\n\r\n        return (\r\n          <div>\r\n            <center><h1>Add Question</h1></center>\r\n            <Form layout={formLayout} action = '#' method = 'post'  encType = 'multipart/form-data'  >\r\n              <Form.Item\r\n                label=\"Select Sub Category\"\r\n                {...formItemLayout}\r\n              >  \r\n                {this.state.all_sub_categories.length === 0 ? (<><Spin /> Loading Sub Categories ... </>) : (<Select\r\n                showSearch\r\n                style={{ width: 200 }}\r\n                placeholder=\"Select Sub Category \"\r\n                optionFilterProp=\"children\"\r\n                onChange={this.handleSelectChange}\r\n                filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n            > \r\n                {this.state.all_sub_categories.map(sub_category => {\r\n                    return(\r\n                        <Option value = {`${sub_category._id}`} key = {sub_category._id}>{sub_category.english_name}</Option>\r\n                    )\r\n                })}\r\n                </Select>)}\r\n              </Form.Item>\r\n              <Form.Item label=\"Enter Type\"\r\n                {...formItemLayout}>\r\n                  <Input size=\"large\" name = \"type\" placeholder=\"Enter Type\" onChange = {this.handleChange} />\r\n              </Form.Item>\r\n              <Form.Item label=\"Question\"\r\n                {...formItemLayout}>\r\n                <Row>\r\n                    <Col span={10}><TextArea name = \"english_text\" value = {this.state.english_text} rows={4} placeholder = \"In English\" onChange = {this.handleChange} /></Col>\r\n                    <Col span={10} offset={1}><TextArea name = \"hindi_text\" value = {this.state.hindi_text} rows={4} placeholder = \"In Hindi\" onChange = {this.handleChange} /></Col>\r\n                </Row>\r\n              </Form.Item>\r\n              <div style = {{ float : \"right\" , paddingRight : \"10%\"}}>\r\n                <Button  type=\"primary\" onClick = {this.handleAppendButton} >\r\n                    Add Option<Icon type=\"plus-square\" />\r\n                </Button>\r\n              </div>\r\n              <br/>\r\n              <br/>\r\n              {this.state.options.map((option,index) => {\r\n                return <QuestionOption key = {index} option = {option} index = {index} handleOptionChange = {this.handleOptionChange} />\r\n              })}\r\n              <Form.Item label=\"Correct Option\"\r\n                {...formItemLayout}>\r\n                <Input type = {`number`} max = {this.state.options.length} min = {1}\r\n                value = {this.state.correct_option_index} onChange = {this.handleChange} name = 'correct_option_index'  />\r\n              </Form.Item>\r\n              <Form.Item {...buttonItemLayout}  >\r\n                Attach Image &nbsp; : &nbsp;&nbsp;&nbsp;\r\n                <Button  type=\"primary\" >\r\n                <label for='upload-photo' style={{ paddingTop: '5%' }}>\r\n                  Browse File\r\n                </label>\r\n                <input\r\n                  type='file'\r\n                  id='upload-photo'\r\n                  onChange={e => this.handleFile(e)}\r\n                  style={{\r\n                    opacity: 0,\r\n                    position: 'absolute',\r\n                    zIndex: -1\r\n                  }}\r\n                />\r\n                </Button>\r\n              </Form.Item>\r\n              <Form.Item {...buttonItemLayout}>\r\n                  <Button type=\"primary\" loading={this.state.UploadingData} onClick={this.handleSubmit}>\r\n                    Submit\r\n                  </Button>\r\n              </Form.Item>\r\n            </Form>\r\n            {this.state.showModal === true ? <Alert makeShowModalFalse = {this.makeShowModalFalse} title = {this.state.modal_title} message = {this.state.modal_message} /> : <></>}\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nclass QuestionOption extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      formLayout: 'horizontal',\r\n      english_text : ''\r\n    }\r\n  }\r\n  componentDidMount(){}\r\n  \r\n  render(){\r\n    const { formLayout } = this.state;\r\n            const formItemLayout = formLayout === 'horizontal' ? {\r\n              labelCol: { span: 4 },\r\n              wrapperCol: { span: 14 },\r\n            } : null;\r\n           \r\n     return(\r\n      <Form.Item label = {`Option ${this.props.index + 1}`}\r\n      {...formItemLayout}>\r\n      <Row>\r\n          <Col span={10}><Input value = {this.props.option.english_text} size=\"large\" name = \"english_text\" placeholder=\"Type In English\" onChange = {(event) => this.props.handleOptionChange(this.props.index,event)} /></Col>\r\n          <Col span={10} offset={1}><Input value = {this.props.option.hindi_text} size=\"large\" name = \"hindi_text\" placeholder=\"Type In Hindi\" onChange = {(event) => this.props.handleOptionChange(this.props.index,event)} /></Col>\r\n      </Row>\r\n    </Form.Item>\r\n     )\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { baseurl, endurl } from '../../baseurl';\r\nimport { Spin, Row, Col, Input, Select, Button } from 'antd';\r\nimport Alert from '../Alert';\r\n\r\nconst Option = Select.Option;\r\n\r\nexport default class ShowSubCategoryById extends React.Component {\r\n  state = {\r\n    _id: '',\r\n    loading: false,\r\n    english_name: '',\r\n    hindi_name: '',\r\n    category_id: '',\r\n    logo: '',\r\n    categories: [],\r\n    UploadingData: false,\r\n    showModal: false,\r\n    modal_title: '',\r\n    modal_message: '',\r\n    uploading_logo: null\r\n  };\r\n\r\n  makeShowModalFalse = () => {\r\n    this.setState({ showModal: false, UploadingData: false });\r\n  };\r\n\r\n  componentDidMount() {\r\n    let id = this.props.match.params.id;\r\n    this.setState({ loading: true, _id: id });\r\n    fetch(\r\n      `${baseurl}categories_and_sub_categories/fetch_sub_category_by_id/${id}/${endurl}`\r\n    )\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        this.setState({\r\n          english_name: data.english_name,\r\n          hindi_name: data.hindi_name,\r\n          category_id: data.category_id,\r\n          logo: data.logo\r\n        });\r\n        fetch(\r\n          `${baseurl}categories_and_sub_categories/fetch_all_categories/${endurl}`\r\n        )\r\n          .then(res => res.json())\r\n          .then(data => {\r\n            this.setState({ categories: data, loading: false });\r\n          })\r\n          .catch(err => console.log(err));\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  handleChange = value => {\r\n    this.setState({ category_id: value });\r\n  };\r\n\r\n  handleChooseImage = e => {\r\n    this.setState({ uploading_logo: e.target.files[0] });\r\n  };\r\n\r\n  handleUpdateLogo = () => {\r\n    if (this.state.uploading_logo === null) {\r\n      alert('Please Choose Image ....');\r\n    } else {\r\n      this.setState({ UploadingData: true });\r\n      let sendData = new FormData();\r\n      sendData.append('_id', this.state._id);\r\n      sendData.append('logo', this.state.uploading_logo);\r\n      this.setState({ UploadingData: true });\r\n      fetch(\r\n        baseurl +\r\n          `categories_and_sub_categories/update_sub_category_image/${endurl}`,\r\n        {\r\n          method: 'POST',\r\n          body: sendData\r\n        }\r\n      )\r\n        .then(res => res.json())\r\n        .then(data =>\r\n          this.setState({\r\n            showModal: true,\r\n            title: 'Confirmation',\r\n            modal_message: data.message,\r\n            logo: data.image_url\r\n          })\r\n        )\r\n        .catch(err => {\r\n          this.setState({\r\n            showModal: true,\r\n            title: 'Server Error ',\r\n            modal_message: 'Please Contact To Technical Team '\r\n          });\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  handleDataUpdate = () => {\r\n    if (this.state.english_name === '') {\r\n      alert('English Name Cannot Be Empty');\r\n    } else {\r\n      this.setState({ UploadingData: true });\r\n      fetch(\r\n        baseurl +\r\n          `categories_and_sub_categories/update_sub_category_data/${endurl}`,\r\n        {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(this.state)\r\n        }\r\n      )\r\n        .then(res => res.json())\r\n        .then(data =>\r\n          this.setState({\r\n            showModal: true,\r\n            title: 'Confirmation',\r\n            modal_message: data.message\r\n          })\r\n        )\r\n        .catch(err => {\r\n          this.setState({\r\n            showModal: true,\r\n            title: 'Server Error ',\r\n            modal_message: 'Please Contact To Technical Team '\r\n          });\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loading === true) {\r\n      return (\r\n        <div style={{ padding: '15%', paddingLeft: '50%' }}>\r\n          <Spin size='large' />\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div style={{ padding: '5%' }}>\r\n          <Row>\r\n            <Col span={6}>\r\n              <b>Category</b>\r\n              <br />\r\n              <Select\r\n                showSearch\r\n                style={{ width: 200 }}\r\n                placeholder='Select Category'\r\n                optionFilterProp='children'\r\n                labelInValue\r\n                defaultValue={{ key: this.state.category_id }}\r\n                onChange={this.handleChange}\r\n                filterOption={(input, option) =>\r\n                  option.props.children\r\n                    .toLowerCase()\r\n                    .indexOf(input.toLowerCase()) >= 0\r\n                }\r\n              >\r\n                {this.state.categories.map((item, index) => {\r\n                  return (\r\n                    <Option key={item._id} value={item._id}>\r\n                      {item.english_name}\r\n                    </Option>\r\n                  );\r\n                })}\r\n              </Select>\r\n            </Col>\r\n            <Col span={6} offset={1}>\r\n              <b>Sub Category Name (English)</b>\r\n              <Input\r\n                value={this.state.english_name}\r\n                onChange={e => {\r\n                  this.setState({ english_name: e.target.value });\r\n                }}\r\n                size='large'\r\n                placeholder='large size'\r\n              />\r\n            </Col>\r\n            <Col span={6} offset={1}>\r\n              <b>Sub Category Name (Hindi)</b>\r\n              <Input\r\n                value={this.state.hindi_name}\r\n                size='large'\r\n                placeholder='large size'\r\n                onChange={e => {\r\n                  this.setState({ hindi_name: e.target.value });\r\n                }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col span={18}>\r\n              <br />\r\n              <Button\r\n                type='primary'\r\n                loading={this.state.UploadingData}\r\n                onClick={() => this.handleDataUpdate()}\r\n                size={'large'}\r\n              >\r\n                Update\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <br />\r\n              <img\r\n                height='300px'\r\n                width='400px'\r\n                src={`${baseurl}uploads/sub_category/${this.state.logo}`}\r\n                alt={'Not Available'}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <br />\r\n              <h4>Choose Image To Upload</h4>\r\n              <label for='upload-photo' style={{ paddingTop: '5%' }}>\r\n                Browse File\r\n              </label>\r\n              <input\r\n                type='file'\r\n                id='upload-photo'\r\n                onChange={this.handleChooseImage}\r\n                style={{\r\n                  opacity: 0,\r\n                  position: 'absolute',\r\n                  zIndex: -1\r\n                }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <br />\r\n              <Button\r\n                type='primary'\r\n                loading={this.state.UploadingData}\r\n                onClick={this.handleUpdateLogo}\r\n                size={'large'}\r\n              >\r\n                Update\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n          {this.state.showModal === true ? (\r\n            <Alert\r\n              makeShowModalFalse={this.makeShowModalFalse}\r\n              title={this.state.modal_title}\r\n              message={this.state.modal_message}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { baseurl, endurl } from '../../../baseurl';\r\nimport { Form, Button, Select, Spin, List, Avatar } from 'antd';\r\n\r\nimport {\r\n  Link,\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect\r\n} from 'react-router-dom';\r\nimport ShowSubCategoryById from '../ShowSubCategoryById';\r\n\r\nconst Option = Select.Option;\r\n\r\nclass AllSubCategoryComponent extends React.Component {\r\n  state = {\r\n    loading_categories: false,\r\n    categories: [],\r\n    loading_subcategories: false,\r\n    subcategories: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ loading_categories: true });\r\n    fetch(\r\n      `${baseurl}categories_and_sub_categories/fetch_all_categories/${endurl}`\r\n    )\r\n      .then(res => res.json())\r\n      .then(data =>\r\n        this.setState({ categories: data, loading_categories: false })\r\n      )\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  handleSelectChange = value => {\r\n    this.setState({ loading_categories: true });\r\n    fetch(\r\n      `${baseurl}categories_and_sub_categories/sub_categories/${value}/${endurl}`\r\n    )\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        this.setState({ loading_subcategories: false, subcategories: data });\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  render() {\r\n    const { formLayout } = this.state;\r\n    const formItemLayout =\r\n      formLayout === 'horizontal'\r\n        ? {\r\n            labelCol: { span: 4 },\r\n            wrapperCol: { span: 14 }\r\n          }\r\n        : null;\r\n\r\n    return (\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <div\r\n          style={{ paddingLeft: '10%', paddingTop: '3%', paddingBottom: '3%' }}\r\n        >\r\n          <center>\r\n            <h1>All SubCategories </h1>\r\n          </center>\r\n          <Form layout={formLayout}>\r\n            <Form.Item label='Select Category' {...formItemLayout}>\r\n              {this.state.categories.length === 0 ? (\r\n                <>\r\n                  <Spin /> Loading Categories ...{' '}\r\n                </>\r\n              ) : (\r\n                <Select\r\n                  showSearch\r\n                  style={{ width: 200 }}\r\n                  placeholder='Select Category '\r\n                  optionFilterProp='children'\r\n                  onChange={this.handleSelectChange}\r\n                  filterOption={(input, option) =>\r\n                    option.props.children\r\n                      .toLowerCase()\r\n                      .indexOf(input.toLowerCase()) >= 0\r\n                  }\r\n                >\r\n                  {this.state.categories.map(category => {\r\n                    return (\r\n                      <Option value={`${category._id}`} key={category._id}>\r\n                        {category.english_name}\r\n                      </Option>\r\n                    );\r\n                  })}\r\n                </Select>\r\n              )}\r\n            </Form.Item>\r\n          </Form>\r\n          {this.state.loading_subcategories === true ? (\r\n            <Spin size='large' />\r\n          ) : (\r\n            <List\r\n              itemLayout='horizontal'\r\n              dataSource={this.state.subcategories}\r\n              renderItem={item => (\r\n                <List.Item>\r\n                  <List.Item.Meta\r\n                    title={<b>{item.english_name}</b>}\r\n                    avatar={\r\n                      <Avatar\r\n                        shape='square'\r\n                        size='large'\r\n                        style={{ height: '70%', width: '80%' }}\r\n                        src={`${baseurl}uploads/sub_category/${item.logo}`}\r\n                      />\r\n                    }\r\n                  />\r\n                  <Link\r\n                    style={{ paddingRight: '5%', marginRight: '10%' }}\r\n                    to={`${this.props.match.url}/${item._id}`}\r\n                  >\r\n                    <Button type='primary' size={'large'}>\r\n                      Edit\r\n                    </Button>\r\n                  </Link>\r\n                </List.Item>\r\n              )}\r\n            />\r\n          )}\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default class AllSubCategory extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    if (localStorage.getItem('authenticated') === 'true') {\r\n      let match = this.props.match;\r\n      return (\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path={`${match.url}`}\r\n              render={props => <AllSubCategoryComponent {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/:id`}\r\n              render={props => <ShowSubCategoryById {...props} />}\r\n            />\r\n          </Switch>\r\n        </Router>\r\n      );\r\n    } else {\r\n      return <Redirect to={{ pathname: '/login' }} />;\r\n    }\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nimport {\r\n  Redirect,\r\n  Link,\r\n  Route,\r\n  Switch,\r\n  HashRouter as Router\r\n} from 'react-router-dom';\r\nimport AddCategory from './AddCategory/index';\r\nimport AddSubCategory from './AddSubCategory/index';\r\nimport AddQuestions from './AddQuestion/index';\r\nimport { Layout, Menu, Icon } from 'antd';\r\nimport AllSubCategory from './AllSubCategory/index';\r\n\r\nconst { SubMenu } = Menu;\r\nconst { Content, Sider } = Layout;\r\n\r\nexport default class WorkSheets extends React.Component {\r\n  render() {\r\n    if (localStorage.getItem('authenticated') === 'true') {\r\n      let match = this.props.match;\r\n      return (\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n          <Layout style={{ paddingTop: '5%' }}>\r\n            <Sider width={'20%'} style={{ background: '#fff' }}>\r\n              <Menu\r\n                theme='dark'\r\n                mode='inline'\r\n                style={{ height: '100%', borderRight: 0 }}\r\n              >\r\n                <SubMenu\r\n                  key='sub1'\r\n                  title={\r\n                    <span>\r\n                      <Icon type='folder-open' />\r\n                      Categories\r\n                    </span>\r\n                  }\r\n                >\r\n                  <Menu.Item key='1'>\r\n                    <Link to={`${match.url}/add_category`}>Add Category</Link>\r\n                  </Menu.Item>\r\n                  <Menu.Item key='2'>All Categories</Menu.Item>\r\n                  <Menu.Item key='3'>Edit Category</Menu.Item>\r\n                  <Menu.Item key='4'>Delete Category</Menu.Item>\r\n                </SubMenu>\r\n                <SubMenu\r\n                  key='sub2'\r\n                  title={\r\n                    <span>\r\n                      <Icon type='folder-open' />\r\n                      Sub Categories\r\n                    </span>\r\n                  }\r\n                >\r\n                  <Menu.Item key='1'>\r\n                    <Link to={`${match.url}/add_sub_category`}>\r\n                      Add Sub Category\r\n                    </Link>\r\n                  </Menu.Item>\r\n                  <Menu.Item key='2'>\r\n                    <Link to={`${match.url}/all_sub_categories`}>\r\n                      All Sub Categories\r\n                    </Link>\r\n                  </Menu.Item>\r\n                  <Menu.Item key='3'>Edit Sub Category</Menu.Item>\r\n                  <Menu.Item key='4'>Delete Sub Category</Menu.Item>\r\n                </SubMenu>\r\n                <SubMenu\r\n                  key='sub3'\r\n                  title={\r\n                    <span>\r\n                      <Icon type='question-circle' />\r\n                      Questions\r\n                    </span>\r\n                  }\r\n                >\r\n                  <Menu.Item key='9'>\r\n                    <Link to={`${match.url}/add_questions`}>\r\n                      {' '}\r\n                      Add Questions{' '}\r\n                    </Link>\r\n                  </Menu.Item>\r\n                  <Menu.Item key='10'>All Questions</Menu.Item>\r\n                  <Menu.Item key='11'>Edit Questions</Menu.Item>\r\n                  <Menu.Item key='12'>Delete Questions</Menu.Item>\r\n                </SubMenu>\r\n              </Menu>\r\n            </Sider>\r\n            <Content>\r\n              <Switch>\r\n                <Route\r\n                  path={`${match.url}/add_category`}\r\n                  render={props => <AddCategory {...props} />}\r\n                />\r\n                <Route\r\n                  path={`${match.url}/add_sub_category`}\r\n                  render={props => <AddSubCategory {...props} />}\r\n                />\r\n                <Route\r\n                  path={`${match.url}/add_questions`}\r\n                  render={props => <AddQuestions {...props} />}\r\n                />\r\n                <Route\r\n                  path={`${match.url}/all_sub_categories`}\r\n                  render={props => <AllSubCategory {...props} />}\r\n                />\r\n              </Switch>\r\n            </Content>\r\n          </Layout>\r\n        </Router>\r\n      );\r\n    } else {\r\n      return <Redirect to={{ pathname: '/login' }} />;\r\n    }\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { baseurl, endurl } from '../../../baseurl';\r\nimport { Form, Input, Button, Select, Spin, Progress } from 'antd';\r\n\r\nimport Alert from '../../Alert.js';\r\nimport axios from 'axios';\r\n\r\nconst Option = Select.Option;\r\n\r\nexport default class UploadPdf extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      formLayout: 'horizontal',\r\n      english_name: '',\r\n      hindi_name: '',\r\n      all_sub_categories: [],\r\n      sub_category_id: 0,\r\n      showModal: false,\r\n      modal_title: '',\r\n      modal_message: '',\r\n      UploadingData: false,\r\n      pdf: null,\r\n      fileprogress: 0\r\n    };\r\n  }\r\n\r\n  handleFile = e => {\r\n    this.setState({ pdf: e.target.files[0] });\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  handleSelectChange = value => {\r\n    for (let i = 0; i < this.state.all_sub_categories.length; i++) {\r\n      if (this.state.all_sub_categories[i]._id === parseInt(value)) {\r\n        this.setState({\r\n          english_name: this.state.all_sub_categories[i].english_name\r\n        });\r\n        break;\r\n      }\r\n    }\r\n    this.setState({ sub_category_id: value });\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\r\n      `${baseurl}categories_and_sub_categories/fetch_all_sub_categories/${endurl}`\r\n    )\r\n      .then(res => res.json())\r\n      .then(data => this.setState({ all_sub_categories: data }))\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  makeShowModalFalse = () => {\r\n    this.setState({ showModal: false, UploadingData: false });\r\n  };\r\n\r\n  handleSubmit = () => {\r\n    if (this.state.english_name === '') {\r\n      this.setState({\r\n        showModal: true,\r\n        modal_title: 'Requirements',\r\n        modal_message: 'Category Name In English Is Required'\r\n      });\r\n    } else if (this.state.sub_category_id === 0) {\r\n      this.setState({\r\n        showModal: true,\r\n        modal_title: 'Requirements',\r\n        modal_message: 'Please Choose Sub  Category'\r\n      });\r\n    } else if (this.state.pdf === null) {\r\n      this.setState({\r\n        showModal: true,\r\n        modal_title: 'Requirements',\r\n        modal_message: 'Please Upload Pdf File'\r\n      });\r\n    } else {\r\n      this.setState({ UploadingData: true, fileprogress: 0 });\r\n      let formData = new FormData();\r\n      formData.append('SendData', JSON.stringify(this.state));\r\n      formData.append('pdf', this.state.pdf);\r\n      axios\r\n        .request({\r\n          method: 'post',\r\n          url: baseurl + `pdf/upload_pdf/${endurl}`,\r\n          data: formData,\r\n          onUploadProgress: p => {\r\n            this.setState({\r\n              fileprogress: p.loaded / p.total\r\n            });\r\n          }\r\n        })\r\n        .then(data => {\r\n          this.setState({\r\n            english_name: '',\r\n            hindi_name: '',\r\n            sub_category_id: 0,\r\n            showModal: true,\r\n            modal_title: 'Confirmation',\r\n            modal_message: 'Pdf Uploaded  Successfully... '\r\n          });\r\n          this.setState({\r\n            fileprogress: 1.0\r\n          });\r\n        })\r\n        .catch(err => {\r\n          this.setState({\r\n            showModal: true,\r\n            modal_title: 'Server Error',\r\n            modal_message: 'Please Contact Technical Team'\r\n          });\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { formLayout } = this.state;\r\n    const formItemLayout =\r\n      formLayout === 'horizontal'\r\n        ? {\r\n            labelCol: { span: 4 },\r\n            wrapperCol: { span: 14 }\r\n          }\r\n        : null;\r\n    const buttonItemLayout =\r\n      formLayout === 'horizontal'\r\n        ? {\r\n            wrapperCol: { span: 14, offset: 4 }\r\n          }\r\n        : null;\r\n    return (\r\n      <div>\r\n        <center>\r\n          <h1>Upload Pdf</h1>{' '}\r\n        </center>\r\n        <Form layout={formLayout}>\r\n          <Form.Item label='Select Sub Category' {...formItemLayout}>\r\n            {this.state.all_sub_categories.length === 0 ? (\r\n              <>\r\n                <Spin /> Loading Categories ...{' '}\r\n              </>\r\n            ) : (\r\n              <Select\r\n                showSearch\r\n                style={{ width: 200 }}\r\n                placeholder='Select Sub  Category '\r\n                optionFilterProp='children'\r\n                onChange={this.handleSelectChange}\r\n                filterOption={(input, option) =>\r\n                  option.props.children\r\n                    .toLowerCase()\r\n                    .indexOf(input.toLowerCase()) >= 0\r\n                }\r\n              >\r\n                {this.state.all_sub_categories.map(sub_category => {\r\n                  return (\r\n                    <Option\r\n                      value={`${sub_category._id}`}\r\n                      key={sub_category._id}\r\n                    >\r\n                      {sub_category.english_name}\r\n                    </Option>\r\n                  );\r\n                })}\r\n              </Select>\r\n            )}\r\n          </Form.Item>\r\n          <Form.Item label='Pdf Name(English)' {...formItemLayout}>\r\n            <Input\r\n              placeholder='Enter Pdf In English'\r\n              value={this.state.english_name}\r\n              onChange={this.handleChange}\r\n              name='english_name'\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label='Pdf  Name (Hindi)'\r\n            {...formItemLayout}\r\n            value={this.state.hindi_name}\r\n            onChange={this.handleChange}\r\n            name='hindi_name'\r\n          >\r\n            <Input\r\n              placeholder='Enter Pdf Name In Hindi'\r\n              value={this.state.hindi_name}\r\n              onChange={this.handleChange}\r\n              name='hindi_name'\r\n            />\r\n          </Form.Item>\r\n          <Form.Item {...buttonItemLayout}>\r\n            Attach Pdf File ( &nbsp;Required &nbsp;) &nbsp; : &nbsp;&nbsp;&nbsp;\r\n            <Button type='primary'>\r\n              <label for='upload-photo' style={{ paddingTop: '5%' }}>\r\n                Browse File\r\n              </label>\r\n              <input\r\n                type='file'\r\n                id='upload-photo'\r\n                onChange={e => this.handleFile(e)}\r\n                style={{\r\n                  opacity: 0,\r\n                  position: 'absolute',\r\n                  zIndex: -1\r\n                }}\r\n              />\r\n            </Button>\r\n          </Form.Item>\r\n          <Progress percent={this.state.fileprogress * 100} status='active' />\r\n          <Form.Item {...buttonItemLayout}>\r\n            <Button\r\n              type='primary'\r\n              loading={this.state.UploadingData}\r\n              onClick={this.handleSubmit}\r\n            >\r\n              Upload\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n        {this.state.showModal === true ? (\r\n          <Alert\r\n            makeShowModalFalse={this.makeShowModalFalse}\r\n            title={this.state.modal_title}\r\n            message={this.state.modal_message}\r\n          />\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { baseurl, endurl } from '../../../baseurl';\r\n\r\nimport { Row, Col, Select, Button } from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\nexport default class setDemoTest extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pdf_categories: [],\r\n      updating_data: false,\r\n      selected_demo_pdf_categories: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\r\n      `${baseurl}categories_and_sub_categories/fetch_all_sub_categories/${endurl}`\r\n    )\r\n      .then(res => res.json())\r\n      .then(data => this.setState({ pdf_categories: data }))\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  onSelectTest = async _id_array => {\r\n    this.setState({ selected_demo_pdf_categories: _id_array });\r\n  };\r\n\r\n  handleSave = () => {\r\n    this.setState({ updating_data: true });\r\n    fetch(\r\n      `${baseurl}categories_and_sub_categories/set_demo_pdf_category/${endurl}`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(this.state.selected_demo_pdf_categories)\r\n      }\r\n    )\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        console.log(data);\r\n        this.setState({ updating_data: false });\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ paddingTop: '5%' }}>\r\n        <Row style={{ paddingLeft: '10%' }}>\r\n          <Col span={10} offset={2}>\r\n            <h3>Choose PDFS For Demo PDF </h3>\r\n            <Select\r\n              mode='multiple'\r\n              showSearch\r\n              style={{ width: 200 }}\r\n              placeholder='Select a Test'\r\n              optionFilterProp='children'\r\n              onChange={this.onSelectTest}\r\n              filterOption={(input, option) =>\r\n                option.props.children\r\n                  .toLowerCase()\r\n                  .indexOf(input.toLowerCase()) >= 0\r\n              }\r\n            >\r\n              {this.state.pdf_categories.map((item, key) => {\r\n                return (\r\n                  <Option key={item._id} value={item._id}>\r\n                    {item.english_name}\r\n                  </Option>\r\n                );\r\n              })}\r\n            </Select>\r\n          </Col>\r\n        </Row>\r\n        <br />\r\n        <Row style={{ paddingLeft: '10%' }}>\r\n          <Col span={10} offset={2}>\r\n            {this.state.updating_data === true ? (\r\n              <Button\r\n                size={'large'}\r\n                type='primary'\r\n                loading={this.state.UploadingData}\r\n              >\r\n                Saving ...\r\n              </Button>\r\n            ) : (\r\n              <Button\r\n                width='100%'\r\n                type='primary'\r\n                size={'large'}\r\n                onClick={this.handleSave}\r\n              >\r\n                Save Your Choice\r\n              </Button>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n        <br />\r\n        <br />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nimport {\r\n  Redirect,\r\n  Link,\r\n  Route,\r\n  Switch,\r\n  HashRouter as Router\r\n} from 'react-router-dom';\r\nimport { Layout, Menu, Icon } from 'antd';\r\nimport UploadPdf from '../PdfManaging/UploadPdf/index';\r\nimport setDemoTest from '../PdfManaging/Set_Demo_Pdf/index';\r\n\r\nconst { SubMenu } = Menu;\r\nconst { Content, Sider } = Layout;\r\n\r\nexport default class PdfManaging extends React.Component {\r\n  render() {\r\n    if (localStorage.getItem('authenticated') === 'true') {\r\n      let match = this.props.match;\r\n      return (\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n          <Layout style={{ paddingTop: '5%' }}>\r\n            <Sider width={'20%'} style={{ background: '#fff' }}>\r\n              <Menu\r\n                theme='dark'\r\n                mode='inline'\r\n                style={{ height: '100%', borderRight: 0 }}\r\n              >\r\n                <SubMenu\r\n                  key='sub3'\r\n                  title={\r\n                    <span>\r\n                      <Icon type='question-circle' />\r\n                      Pdf Files\r\n                    </span>\r\n                  }\r\n                >\r\n                  <Menu.Item key='9'>\r\n                    <Link to={`${match.url}/upload_pdfs`}>\r\n                      {' '}\r\n                      Upload Pdf Files{' '}\r\n                    </Link>\r\n                  </Menu.Item>\r\n                  <Menu.Item key='10'>\r\n                    <Link to={`${match.url}/set_demo_pdf`}>\r\n                      {' '}\r\n                      Set Demo Pdf Files{' '}\r\n                    </Link>\r\n                  </Menu.Item>\r\n                  <Menu.Item key='11'>All Pdfs </Menu.Item>\r\n                  <Menu.Item key='12'>Edit Pdf Files</Menu.Item>\r\n                  <Menu.Item key='13'>Delete Pdf Files</Menu.Item>\r\n                </SubMenu>\r\n              </Menu>\r\n            </Sider>\r\n            <Content>\r\n              <Switch>\r\n                <Route\r\n                  path={`${match.url}/upload_pdfs`}\r\n                  render={props => <UploadPdf {...props} />}\r\n                />\r\n                <Route\r\n                  path={`${match.url}/set_demo_pdf`}\r\n                  render={props => <setDemoTest {...props} />}\r\n                />\r\n                <Route\r\n                  path={`${match.url}/all_pdfs`}\r\n                  render={props => <h1>List All Pdfs</h1>}\r\n                />\r\n                <Route\r\n                  path={`${match.url}/edit_pdf`}\r\n                  render={props => <h1>Edit List All Pdfs</h1>}\r\n                />\r\n                <Route\r\n                  path={`${match.url}/delete_pdf`}\r\n                  render={props => <h1>Delete</h1>}\r\n                />\r\n              </Switch>\r\n            </Content>\r\n          </Layout>\r\n        </Router>\r\n      );\r\n    } else {\r\n      return <Redirect to={{ pathname: '/login' }} />;\r\n    }\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Input, Button, Row, Col, Spin } from 'antd';\r\nimport { baseurl, endurl } from '../baseurl';\r\nexport default class UpdateAuthorize extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      code: '',\r\n      password: '',\r\n      loading: false,\r\n      updating: false\r\n    };\r\n  }\r\n\r\n  update = () => {\r\n    this.setState({ updating: true });\r\n    let sendData = this.state;\r\n    fetch(`${baseurl}authorize/update/${endurl}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(sendData)\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        data.code === 'success'\r\n          ? alert('Updated Sucessfully')\r\n          : alert('Technical Error. Please Contact To Technical Team');\r\n        this.setState({ updating: false });\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ loading: true });\r\n    fetch(`${baseurl}authorize/get/${endurl}`)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        this.setState({\r\n          code: data.code,\r\n          password: data.password,\r\n          loading: false\r\n        });\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  render() {\r\n    if (this.state.loading === true) {\r\n      return (\r\n        <div style={{ padding: '15%', paddingLeft: '50%' }}>\r\n          <Spin size='large' />\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div style={{ padding: '5%', paddingTop: '10%' }}>\r\n          <h2 style={{ paddingLeft: '5%' }}> Update Credentials </h2>\r\n          <div style={{ padding: '5%' }}>\r\n            <Row>\r\n              <Col span={10}>\r\n                <h3> Secret Code </h3>\r\n                <Input\r\n                  placeholder=''\r\n                  value={this.state.code}\r\n                  onChange={obj => this.setState({ code: obj.target.value })}\r\n                  name='code'\r\n                />\r\n              </Col>\r\n              <Col offset={2} span={10}>\r\n                <h3> Password </h3>\r\n                <Input\r\n                  placeholder=''\r\n                  value={this.state.password}\r\n                  onChange={obj =>\r\n                    this.setState({ password: obj.target.value })\r\n                  }\r\n                  name='password'\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <br />\r\n            <br />\r\n            <Row>\r\n              <Col span={10} />\r\n              <Col offset={2} span={10}>\r\n                {this.state.updating === true ? (\r\n                  <Button\r\n                    size={'large'}\r\n                    type='primary'\r\n                    loading={this.state.updating}\r\n                  >\r\n                    Updating ...\r\n                  </Button>\r\n                ) : (\r\n                  <Button\r\n                    width='100%'\r\n                    type='primary'\r\n                    size={'large'}\r\n                    onClick={this.update}\r\n                  >\r\n                    Click To Update\r\n                  </Button>\r\n                )}\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { baseurl, endurl, fileurl } from '../../../baseurl';\r\nimport { Form, Input, Button, Row, Col } from 'antd';\r\nimport { encoded_data } from '../../../encoded_data';\r\nimport Alert from '../../Alert';\r\n\r\nconst { TextArea } = Input;\r\n\r\nexport default class EditQuestion extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      english_text: '',\r\n      hindi_text: '',\r\n      formLayout: 'horizontal',\r\n      options: [],\r\n      correct_option_index: null,\r\n      question_id: '',\r\n      pic: null,\r\n      pic_url: null,\r\n      UploadingData: false,\r\n      showModal: false,\r\n      modal_title: '',\r\n      modal_message: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { question } = this.props;\r\n    this.setState({\r\n      question_id: question.test_question_id,\r\n      english_text: question.english_text,\r\n      hindi_text: question.hindi_text,\r\n      options: question.test_options,\r\n      correct_option_index: question.correct_option_index,\r\n      pic_url: question.pic\r\n    });\r\n  }\r\n\r\n  makeShowModalFalse = () => {\r\n    this.setState({ showModal: false, UploadingData: false });\r\n  };\r\n\r\n  validateForm = () => {\r\n    let validateOptions = () => {\r\n      for (let i = 0; i < this.state.options.length; i++) {\r\n        if (this.state.options[i].option_english_text === '') {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    };\r\n    const { english_text, correct_option_index, options } = this.state;\r\n    if (english_text === '') {\r\n      this.setState({\r\n        showModal: true,\r\n        modal_title: 'Requirements',\r\n        modal_message: 'Please Type The Question'\r\n      });\r\n      return false;\r\n    } else if (options.length === 0) {\r\n      this.setState({\r\n        showModal: true,\r\n        modal_title: 'Requirements',\r\n        modal_message: 'Please Make Options'\r\n      });\r\n      return false;\r\n    } else if (validateOptions() === false) {\r\n      this.setState({\r\n        showModal: true,\r\n        modal_title: 'Requirements',\r\n        modal_message: 'Please Fill All The Options'\r\n      });\r\n      return false;\r\n    } else if (correct_option_index === 0) {\r\n      this.setState({\r\n        showModal: true,\r\n        modal_title: 'Requirements',\r\n        modal_message: 'Please Fill Correct Option Field'\r\n      });\r\n      return false;\r\n    } else if (\r\n      correct_option_index > options.length ||\r\n      correct_option_index < 1\r\n    ) {\r\n      this.setState({\r\n        showModal: true,\r\n        modal_title: 'Requirements',\r\n        modal_message: 'Invalid Option'\r\n      });\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  handleChange = event => {\r\n    let found = false;\r\n    for (let i = 0; i < encoded_data.length; i++) {\r\n      if (event.target.value.indexOf(encoded_data[i].name) !== -1) {\r\n        found = true;\r\n        this.setState({\r\n          [event.target.name]: event.target.value.replace(\r\n            encoded_data[i].name,\r\n            encoded_data[i].js_code\r\n          )\r\n        });\r\n        break;\r\n      }\r\n    }\r\n    if (!found) {\r\n      this.setState({ [event.target.name]: event.target.value });\r\n    }\r\n  };\r\n\r\n  handleOptionChange = (index, event) => {\r\n    event.persist();\r\n    let object = {};\r\n    let found = false;\r\n    for (let i = 0; i < encoded_data.length; i++) {\r\n      if (event.target.value.indexOf(encoded_data[i].name) !== -1) {\r\n        found = true;\r\n        object = Object.assign(this.state.options[index], {\r\n          [event.target.name]: event.target.value.replace(\r\n            encoded_data[i].name,\r\n            encoded_data[i].js_code\r\n          )\r\n        });\r\n        break;\r\n      }\r\n    }\r\n    if (!found) {\r\n      if (event.target.name === 'option_english_text') {\r\n        object = Object.assign(this.state.options[index], {\r\n          [event.target.name]: event.target.value,\r\n          option_hindi_text: event.target.value\r\n        });\r\n      } else {\r\n        object = Object.assign(this.state.options[index], {\r\n          [event.target.name]: event.target.value\r\n        });\r\n      }\r\n    }\r\n    this.setState(state => ({ [state.options[index]]: object }));\r\n  };\r\n\r\n  handleSelectChange = value => {\r\n    this.setState({ sub_category_id: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    if (this.validateForm() === true) {\r\n      let custome_url = `tests/update_test_question_without_image/${endurl}`;\r\n      this.setState({ UploadingData: true });\r\n      let formData = new FormData();\r\n      const sendData = {\r\n        question_id: this.state.question_id,\r\n        english_text: this.state.english_text,\r\n        hindi_text: this.state.hindi_text,\r\n        options: this.state.options,\r\n        correct_option_index: this.state.correct_option_index\r\n      };\r\n      formData.append('SendData', JSON.stringify(sendData));\r\n      if (this.state.pic !== null) {\r\n        custome_url = `tests/update_test_question_with_image/${endurl}`;\r\n        formData.append('question_image', this.state.pic);\r\n      }\r\n      fetch(baseurl + custome_url, {\r\n        method: 'POST',\r\n        body: formData\r\n      })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          if (data.code === 'success') {\r\n            this.setState({\r\n              UploadingData: false,\r\n              showModal: true,\r\n              modal_title: 'Confirmation',\r\n              modal_message: 'Question Updated Successfully'\r\n            });\r\n          } else {\r\n            this.setState({\r\n              UploadingData: false,\r\n              showModal: true,\r\n              modal_title: 'Error',\r\n              modal_message: 'Server Error'\r\n            });\r\n          }\r\n        })\r\n        .catch(err => {\r\n          this.setState({\r\n            showModal: true,\r\n            modal_title: 'Server Error',\r\n            modal_message: 'Please Contact To Technical Team'\r\n          });\r\n          console.log(err);\r\n        });\r\n    } else {\r\n    }\r\n  };\r\n\r\n  handleFile = e => {\r\n    this.setState({ pic: e.target.files[0] });\r\n  };\r\n\r\n  handleAppendButton = () => {\r\n    const newOption = {\r\n      english_text: '',\r\n      hindi_text: '',\r\n      question_id: ''\r\n    };\r\n    this.setState(state => ({\r\n      options: state.options.concat(newOption)\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { formLayout } = this.state;\r\n    const formItemLayout =\r\n      formLayout === 'horizontal'\r\n        ? {\r\n            labelCol: { span: 4 },\r\n            wrapperCol: { span: 14 }\r\n          }\r\n        : null;\r\n    const buttonItemLayout =\r\n      formLayout === 'horizontal'\r\n        ? {\r\n            wrapperCol: { span: 14, offset: 4 }\r\n          }\r\n        : null;\r\n\r\n    return (\r\n      <div className='box'>\r\n        <hr />\r\n        <Form\r\n          layout={formLayout}\r\n          action='#'\r\n          method='post'\r\n          encType='multipart/form-data'\r\n        >\r\n          <Form.Item label='Question' {...formItemLayout}>\r\n            <Row>\r\n              <Col span={10}>\r\n                <TextArea\r\n                  name='english_text'\r\n                  value={this.state.english_text}\r\n                  rows={4}\r\n                  placeholder='In English'\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Col>\r\n              <Col span={10} offset={1}>\r\n                <TextArea\r\n                  name='hindi_text'\r\n                  value={this.state.hindi_text}\r\n                  rows={4}\r\n                  placeholder='In Hindi'\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Form.Item>\r\n          <div style={{ padding: '5%' }}>\r\n            <Row>\r\n              <Col>\r\n                {this.state.pic_url === null ? (\r\n                  <></>\r\n                ) : (\r\n                  <img\r\n                    alt='Failed T Load'\r\n                    src={`${baseurl}${fileurl}/questions/${this.state.pic_url}`}\r\n                  />\r\n                )}\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n          <br />\r\n          <br />\r\n          {this.state.options.map((option, index) => {\r\n            return (\r\n              <QuestionOption\r\n                key={index}\r\n                option={option}\r\n                index={index}\r\n                handleOptionChange={this.handleOptionChange}\r\n                removeOption={this.removeOption}\r\n              />\r\n            );\r\n          })}\r\n          <Form.Item label='Correct Option' {...formItemLayout}>\r\n            <Input\r\n              type={`number`}\r\n              max={this.state.options.length}\r\n              min={1}\r\n              value={this.state.correct_option_index}\r\n              onChange={this.handleChange}\r\n              name='correct_option_index'\r\n            />\r\n          </Form.Item>\r\n          <Form.Item {...buttonItemLayout}>\r\n            Attach Image &nbsp; : &nbsp;&nbsp;&nbsp;\r\n            <Button type='primary'>\r\n              <label for='upload-photo' style={{ paddingTop: '5%' }}>\r\n                Browse File\r\n              </label>\r\n              <input\r\n                type='file'\r\n                id='upload-photo'\r\n                onChange={e => this.handleFile(e)}\r\n                style={{\r\n                  opacity: 0,\r\n                  position: 'absolute',\r\n                  zIndex: -1\r\n                }}\r\n              />\r\n            </Button>\r\n          </Form.Item>\r\n          <Form.Item {...buttonItemLayout}>\r\n            <Button\r\n              type='primary'\r\n              loading={this.state.UploadingData}\r\n              onClick={this.handleSubmit}\r\n            >\r\n              Update Question\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n        {this.state.showModal === true ? (\r\n          <Alert\r\n            makeShowModalFalse={this.makeShowModalFalse}\r\n            title={this.state.modal_title}\r\n            message={this.state.modal_message}\r\n          />\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass QuestionOption extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      formLayout: 'horizontal'\r\n    };\r\n  }\r\n  componentDidMount() {}\r\n\r\n  render() {\r\n    const { formLayout } = this.state;\r\n    const formItemLayout =\r\n      formLayout === 'horizontal'\r\n        ? {\r\n            labelCol: { span: 4 },\r\n            wrapperCol: { span: 14 }\r\n          }\r\n        : null;\r\n    return (\r\n      <Form.Item label={`Option ${this.props.index + 1}`} {...formItemLayout}>\r\n        <Row>\r\n          <Col span={10}>\r\n            <Input\r\n              value={this.props.option.option_english_text}\r\n              size='large'\r\n              name='option_english_text'\r\n              placeholder='Type In English'\r\n              onChange={event =>\r\n                this.props.handleOptionChange(this.props.index, event)\r\n              }\r\n            />\r\n          </Col>\r\n          <Col span={10} offset={1}>\r\n            <Input\r\n              value={this.props.option.option_hindi_text}\r\n              size='large'\r\n              name='option_hindi_text'\r\n              placeholder='Type In Hindi'\r\n              onChange={event =>\r\n                this.props.handleOptionChange(this.props.index, event)\r\n              }\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Form.Item>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Collapse } from 'antd';\r\nimport { baseurl, endurl } from '../../../baseurl';\r\nimport EditQuestion from './EditQuestion';\r\nconst { Panel } = Collapse;\r\n\r\nexport default class AllQuestionsByTestId extends React.Component {\r\n  state = {\r\n    test_questions: [],\r\n    loading: false,\r\n    test_question_array: []\r\n  };\r\n  load_test = _id => {\r\n    this.setState({ loading: true });\r\n    fetch(`${baseurl}tests/fetch_test_questions_by_test_id/${_id}/${endurl}`)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        if (data.length !== 0) {\r\n          this.setState({ test_questions: data });\r\n          ///////////////// For Formatiing Data /////////////////////////////\r\n          let test_questions = data;\r\n          let test_question_array = [];\r\n          let test_question = { test_options: [] };\r\n          // eslint-disable-next-line\r\n          let test_question_counter = 0;\r\n          let previous_test_question_id = null;\r\n          for (let i = 0; i <= test_questions.length; i++) {\r\n            if (i === test_questions.length) {\r\n              test_question_array.push(test_question);\r\n              test_question_counter++;\r\n              break;\r\n            }\r\n            if (\r\n              previous_test_question_id !== test_questions[i].test_question_id\r\n            ) {\r\n              if (i !== 0) {\r\n                test_question_array.push(test_question);\r\n                test_question_counter++;\r\n              }\r\n              test_question = { test_options: [] };\r\n              previous_test_question_id = test_questions[i].test_question_id;\r\n              test_question.test_question_id =\r\n                test_questions[i].test_question_id;\r\n              test_question.english_text = test_questions[i].english_text;\r\n              test_question.hindi_text = test_questions[i].hindi_text;\r\n              test_question.correct_option_index =\r\n                test_questions[i].correct_option_index;\r\n              test_question.pic = test_questions[i].pic;\r\n              test_question.is_attempted = false;\r\n              test_question.attempted_index = 0;\r\n              test_question.test_options.push({\r\n                option_id: test_questions[i].option_id,\r\n                option_english_text: test_questions[i].option_english_text,\r\n                option_hindi_text: test_questions[i].option_hindi_text\r\n              });\r\n            } else {\r\n              test_question.test_options.push({\r\n                option_id: test_questions[i].option_id,\r\n                option_english_text: test_questions[i].option_english_text,\r\n                option_hindi_text: test_questions[i].option_hindi_text\r\n              });\r\n            }\r\n          }\r\n\r\n          this.setState({\r\n            test_question_array: test_question_array,\r\n            loading: false\r\n          });\r\n          ///////////////// For Formatiing Data /////////////////////////////\r\n        } else {\r\n          alert('Test Is Not Set . Please Contact To Institution');\r\n        }\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n  componentDidMount() {\r\n    this.load_test(this.props.test_id);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    // Any time props.email changes, update state.\r\n    if (nextProps !== this.props) {\r\n      this.load_test(nextProps.test_id);\r\n    }\r\n  }\r\n  render() {\r\n    if (this.state.loading === true) {\r\n      return <h1>Loading ....</h1>;\r\n    }\r\n    return (\r\n      <div style={{ paddingTop: '5%' }}>\r\n        <Collapse accordion>\r\n          {this.state.test_question_array.map((item, index) => {\r\n            return (\r\n              <Panel\r\n                header={`${index + 1} . ` + item.english_text}\r\n                key={item.test_question_id}\r\n              >\r\n                <EditQuestion question={item} />\r\n              </Panel>\r\n            );\r\n          })}\r\n        </Collapse>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nimport { Switch, Input, Button, Row, Col, TimePicker, DatePicker } from 'antd';\r\n\r\nimport { baseurl, endurl } from '../../../baseurl';\r\nimport Alert from '../../Alert.js';\r\nimport moment from 'moment';\r\nimport AllQuestionsByTestId from './AllQuestionsByTestId';\r\n\r\nexport default class UpdateTest extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      formLayout: 'horizontal',\r\n      english_title: props.test.english_title,\r\n      hindi_title: props.test.hindi_title,\r\n      UploadingData: false,\r\n      showModal: false,\r\n      modal_title: '',\r\n      modal_message: '',\r\n      test_duration_in_seconds: props.test.test_allowed_time_in_seconds,\r\n      test_commence_date: props.test.test_commence_date,\r\n      test_commence_time: props.test.test_commence_time,\r\n      open_test_duration: false,\r\n      open_commence_time: false,\r\n      open_end_time: false,\r\n      end_time: props.test.end_time,\r\n      set_password: props.test.set_password === 'true',\r\n      shuffle_required: props.test.shuffle_required === 'true',\r\n      test_created: false,\r\n      created_test: {},\r\n      test_id: props.test._id\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    // Any time props.email changes, update state.\r\n    if (nextProps !== this.props) {\r\n      this.setState({\r\n        formLayout: 'horizontal',\r\n        english_title: nextProps.test.english_title,\r\n        hindi_title: nextProps.test.hindi_title,\r\n        UploadingData: false,\r\n        showModal: false,\r\n        modal_title: '',\r\n        modal_message: '',\r\n        test_duration_in_seconds: nextProps.test.test_allowed_time_in_seconds,\r\n        test_commence_date: nextProps.test.test_commence_date,\r\n        test_commence_time: nextProps.test.test_commence_time,\r\n        open_test_duration: false,\r\n        open_commence_time: false,\r\n        open_end_time: false,\r\n        end_time: nextProps.test.end_time,\r\n        set_password: nextProps.test.set_password === 'true',\r\n        shuffle_required: nextProps.test.shuffle_required === 'true',\r\n        test_created: false,\r\n        created_test: {},\r\n        test_id: nextProps.test._id\r\n      });\r\n    }\r\n  }\r\n\r\n  /////////////////  Handling Fields /////////////////////\r\n\r\n  handleTime = (time, timeString, field) => {\r\n    switch (field) {\r\n      case 'test_duration_in_seconds':\r\n        this.setState({\r\n          test_duration_in_seconds: moment\r\n            .duration(timeString)\r\n            .asSeconds()\r\n            .toString()\r\n        });\r\n        break;\r\n      case 'test_commence_time':\r\n        this.setState({ test_commence_time: timeString });\r\n        break;\r\n      case 'end_time':\r\n        this.setState({ end_time: timeString });\r\n        break;\r\n      default:\r\n        console.log('Default');\r\n    }\r\n  };\r\n\r\n  handleDate = (date, dateString) => {\r\n    this.setState({ test_commence_date: dateString });\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  /////////////////  Handling Fields /////////////////////\r\n\r\n  handleOpenChange = (open, field) => {\r\n    switch (field) {\r\n      case 'test_commence_time':\r\n        this.setState({ open_commence_time: open });\r\n        break;\r\n      case 'test_duration':\r\n        this.setState({ open_test_duration: open });\r\n        break;\r\n      case 'end_time':\r\n        this.setState({ open_end_time: open });\r\n        break;\r\n      default:\r\n        console.log('Default');\r\n    }\r\n  };\r\n\r\n  handleClose = field => {\r\n    switch (field) {\r\n      case 'test_commence_time':\r\n        this.setState({ open_commence_time: false });\r\n        break;\r\n      case 'test_duration':\r\n        this.setState({ open_test_duration: false });\r\n        break;\r\n      case 'end_time':\r\n        this.setState({ open_end_time: false });\r\n        break;\r\n      default:\r\n        console.log('Default....');\r\n    }\r\n  };\r\n\r\n  makeShowModalFalse = () => {\r\n    this.setState({ showModal: false, UploadingData: false });\r\n  };\r\n\r\n  ///////////////////// UPLOAD DATA ///////////////////////////////////////////////\r\n\r\n  handleCreateTest = () => {\r\n    const sendData = this.state;\r\n    if (sendData.english_title === '') {\r\n      this.setState({\r\n        showModal: true,\r\n        title: 'Requirements',\r\n        modal_message: 'Title Is Required ...'\r\n      });\r\n    } else if (sendData.test_commence_date === '') {\r\n      this.setState({\r\n        showModal: true,\r\n        title: 'Requirements',\r\n        modal_message: 'Commence Date Is Required ...'\r\n      });\r\n    } else if (sendData.test_commence_time === '') {\r\n      this.setState({\r\n        showModal: true,\r\n        title: 'Requirements',\r\n        modal_message: 'Commence Time Is Required ...'\r\n      });\r\n    } else if (sendData.test_duration_in_seconds === '') {\r\n      this.setState({\r\n        showModal: true,\r\n        title: 'Requirements',\r\n        modal_message: 'Test Duration Is Required ..'\r\n      });\r\n    } else if (sendData.end_time === '') {\r\n      this.setState({\r\n        showModal: true,\r\n        title: 'Requirements',\r\n        modal_message: 'Please Enter Test End Time'\r\n      });\r\n    } else {\r\n      this.setState({ UploadingData: true });\r\n      fetch(baseurl + `tests/update/` + endurl, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ ...sendData, _id: this.props.test._id })\r\n      })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          this.setState({\r\n            showModal: true,\r\n            title: 'Confirmation',\r\n            modal_message: data.message,\r\n            test_created: true,\r\n            created_test: data.test\r\n          });\r\n        })\r\n        .catch(err => {\r\n          this.setState({\r\n            showModal: true,\r\n            title: 'Server Error ',\r\n            modal_message: 'Please Contact To Technical Team '\r\n          });\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  ///////////////////// UPLOAD DATA ///////////////////////////////////////////////\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ padding: '3%' }}>\r\n        <center>\r\n          <h1> Update Test </h1>\r\n        </center>\r\n        <br />\r\n        <Row>\r\n          <Col span={10}>\r\n            <h3> Test Title In English</h3>\r\n            <Input\r\n              placeholder='Ex.  Time And Work , Speed And Distance , Profit And Loss'\r\n              value={this.state.english_title}\r\n              onChange={this.handleChange}\r\n              name='english_title'\r\n            />\r\n          </Col>\r\n          <Col offset={2} span={10}>\r\n            <h3> Test Title In Hindi</h3>\r\n            <Input\r\n              placeholder='Ex.  Time And Work , Speed And Distance , Profit And Loss'\r\n              value={this.state.hindi_title}\r\n              onChange={this.handleChange}\r\n              name='hindi_title'\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <br />\r\n        <Row>\r\n          <Col span={10}>\r\n            <h3> Test Commence Date </h3>\r\n            <DatePicker\r\n              onChange={this.handleDate}\r\n              value={moment(this.state.test_commence_date)}\r\n            />\r\n          </Col>\r\n          <Col span={10} offset={2}>\r\n            <h3>Test Commence Time</h3>\r\n            <TimePicker\r\n              defaultValue={moment(this.state.test_commence_time, 'HH:mm:ss')}\r\n              open={this.state.open_commence_time}\r\n              onOpenChange={open =>\r\n                this.handleOpenChange(open, 'test_commence_time')\r\n              }\r\n              onChange={(time, timeString) =>\r\n                this.handleTime(time, timeString, 'test_commence_time')\r\n              }\r\n              addon={() => (\r\n                <Button\r\n                  size='small'\r\n                  type='primary'\r\n                  onClick={() => this.handleClose('test_commence_time')}\r\n                >\r\n                  Ok\r\n                </Button>\r\n              )}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <br />\r\n        <Row>\r\n          <Col span={10}>\r\n            <h3>Test Duration</h3>\r\n            <TimePicker\r\n              defaultValue={moment.utc(\r\n                this.state.test_duration_in_seconds * 1000\r\n              )}\r\n              open={this.state.open_test_duration}\r\n              onOpenChange={open =>\r\n                this.handleOpenChange(open, 'test_duration')\r\n              }\r\n              onChange={(time, timeString) =>\r\n                this.handleTime(time, timeString, 'test_duration_in_seconds')\r\n              }\r\n              addon={() => (\r\n                <Button\r\n                  size='small'\r\n                  type='primary'\r\n                  onClick={() => this.handleClose('test_duration')}\r\n                >\r\n                  Ok\r\n                </Button>\r\n              )}\r\n            />\r\n          </Col>\r\n          <Col span={10} offset={2}>\r\n            <h3>Test End Time </h3>\r\n            <TimePicker\r\n              defaultValue={moment(this.state.end_time, 'HH:mm:ss')}\r\n              open={this.state.open_end_time}\r\n              onOpenChange={open => this.handleOpenChange(open, 'end_time')}\r\n              onChange={(time, timeString) =>\r\n                this.handleTime(time, timeString, 'end_time')\r\n              }\r\n              addon={() => (\r\n                <Button\r\n                  size='small'\r\n                  type='primary'\r\n                  onClick={() => this.handleClose('end_time')}\r\n                >\r\n                  Ok\r\n                </Button>\r\n              )}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <br />\r\n        <Row>\r\n          <Col span={10}>\r\n            <h3> Set Password For Test (Yes/No) </h3>\r\n            <Switch\r\n              defaultChecked={this.state.set_password}\r\n              onChange={value => {\r\n                this.setState({ set_password: value });\r\n              }}\r\n            />\r\n          </Col>\r\n          <Col offset={2} span={10}>\r\n            <h3> Do You Want To Shuffle Questions(Yes/No) </h3>\r\n            <Switch\r\n              defaultChecked={this.state.shuffle_required}\r\n              onChange={value => {\r\n                this.setState({ shuffle_required: value });\r\n              }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        {this.state.UploadingData === true ? (\r\n          <Button\r\n            size={'large'}\r\n            type='primary'\r\n            loading={this.state.UploadingData}\r\n          >\r\n            Updating Test .\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            width='100%'\r\n            type='primary'\r\n            size={'large'}\r\n            onClick={this.handleCreateTest}\r\n          >\r\n            Update Test\r\n          </Button>\r\n        )}\r\n        {this.state.showModal === true ? (\r\n          <Alert\r\n            makeShowModalFalse={this.makeShowModalFalse}\r\n            title={this.state.modal_title}\r\n            message={this.state.modal_message}\r\n          />\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <AllQuestionsByTestId test_id={this.state.test_id} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nimport { Row, Col, Select } from 'antd';\r\n\r\nimport { baseurl, endurl } from '../../../baseurl';\r\nimport UpdateTest from './UpdateTest';\r\n\r\nconst Option = Select.Option;\r\n\r\nexport default class EditTest extends React.Component {\r\n  state = {\r\n    all_tests: [],\r\n    filtered_tests: [],\r\n    selected_test_id: '',\r\n    test: {}\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(`${baseurl}tests/fetch_all_test/${endurl}`)\r\n      .then(res => res.json())\r\n      .then(data => this.setState({ all_tests: data, filtered_tests: data }))\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  load_test = _id => {\r\n    fetch(`${baseurl}tests/fetch_test_by_id/${_id}/${endurl}`)\r\n      .then(res => res.json())\r\n      .then(async data => {\r\n        await this.setState({ test: data, selected_test_id: _id });\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  onSelectTest = async _id => {\r\n    this.load_test(_id);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ paddingTop: '5%' }}>\r\n        <Row style={{ paddingLeft: '0%' }}>\r\n          <Col span={10} offset={1}>\r\n            <h3>Choose Test</h3>\r\n            <Select\r\n              showSearch\r\n              style={{ width: 200 }}\r\n              placeholder='Select a Test'\r\n              optionFilterProp='children'\r\n              onChange={this.onSelectTest}\r\n              filterOption={(input, option) =>\r\n                option.props.children\r\n                  .toLowerCase()\r\n                  .indexOf(input.toLowerCase()) >= 0\r\n              }\r\n            >\r\n              {this.state.filtered_tests.map((item, key) => {\r\n                return (\r\n                  <Option key={item._id} value={item._id}>\r\n                    {item.english_title}\r\n                  </Option>\r\n                );\r\n              })}\r\n            </Select>\r\n          </Col>\r\n        </Row>\r\n        {this.state.selected_test_id === '' ? (\r\n          <></>\r\n        ) : (\r\n          <UpdateTest test={this.state.test} />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react'\r\n\r\n\r\nexport default class TestStatus extends React.Component {\r\n   render(){\r\n       return (\r\n           <h1>Test Status</h1>\r\n       )\r\n   }\r\n}","import React from 'react'\r\n\r\n\r\nexport default class TestHistory extends React.Component {\r\n   render(){\r\n       return (\r\n           <h1>TestHistory</h1>\r\n       )\r\n   }\r\n}","import React from 'react';\r\n\r\nimport { Switch, Input, Button, Row, Col, TimePicker, DatePicker } from 'antd';\r\n\r\nimport { baseurl, endurl } from '../../../baseurl';\r\nimport Alert from '../../Alert.js';\r\nimport moment from 'moment';\r\n\r\nexport default class AddCategory extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      formLayout: 'horizontal',\r\n      english_title: '',\r\n      hindi_title: '',\r\n      UploadingData: false,\r\n      showModal: false,\r\n      modal_title: '',\r\n      modal_message: '',\r\n      test_duration_in_seconds: '',\r\n      test_commence_date: '',\r\n      test_commence_time: '',\r\n      open_test_duration: false,\r\n      open_commence_time: false,\r\n      open_end_time: false,\r\n      end_time: '',\r\n      set_password: true,\r\n      shuffle_required: true,\r\n      test_created: false,\r\n      created_test: {}\r\n    };\r\n  }\r\n\r\n  /////////////////  Handling Fields /////////////////////\r\n\r\n  handleTime = (time, timeString, field) => {\r\n    switch (field) {\r\n      case 'test_duration_in_seconds':\r\n        this.setState({\r\n          test_duration_in_seconds: moment\r\n            .duration(timeString)\r\n            .asSeconds()\r\n            .toString()\r\n        });\r\n        break;\r\n      case 'test_commence_time':\r\n        this.setState({ test_commence_time: timeString });\r\n        break;\r\n      case 'end_time':\r\n        this.setState({ end_time: timeString });\r\n        break;\r\n      default:\r\n        console.log('Default');\r\n    }\r\n  };\r\n\r\n  handleDate = (date, dateString) => {\r\n    this.setState({ test_commence_date: dateString });\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  /////////////////  Handling Fields /////////////////////\r\n\r\n  handleOpenChange = (open, field) => {\r\n    switch (field) {\r\n      case 'test_commence_time':\r\n        this.setState({ open_commence_time: open });\r\n        break;\r\n      case 'test_duration':\r\n        this.setState({ open_test_duration: open });\r\n        break;\r\n      case 'end_time':\r\n        this.setState({ open_end_time: open });\r\n        break;\r\n      default:\r\n        console.log('Default');\r\n    }\r\n  };\r\n\r\n  handleClose = field => {\r\n    switch (field) {\r\n      case 'test_commence_time':\r\n        this.setState({ open_commence_time: false });\r\n        break;\r\n      case 'test_duration':\r\n        this.setState({ open_test_duration: false });\r\n        break;\r\n      case 'end_time':\r\n        this.setState({ open_end_time: false });\r\n        break;\r\n      default:\r\n        console.log('Default....');\r\n    }\r\n  };\r\n\r\n  makeShowModalFalse = () => {\r\n    this.setState({ showModal: false, UploadingData: false });\r\n    if (this.state.test_created === true) {\r\n      this.props.createTest(this.state.created_test);\r\n    }\r\n  };\r\n\r\n  ///////////////////// UPLOAD DATA ///////////////////////////////////////////////\r\n\r\n  handleCreateTest = () => {\r\n    const sendData = this.state;\r\n    if (sendData.english_title === '') {\r\n      this.setState({\r\n        showModal: true,\r\n        title: 'Requirements',\r\n        modal_message: 'Title Is Required ...'\r\n      });\r\n    } else if (sendData.test_commence_date === '') {\r\n      this.setState({\r\n        showModal: true,\r\n        title: 'Requirements',\r\n        modal_message: 'Commence Date Is Required ...'\r\n      });\r\n    } else if (sendData.test_commence_time === '') {\r\n      this.setState({\r\n        showModal: true,\r\n        title: 'Requirements',\r\n        modal_message: 'Commence Time Is Required ...'\r\n      });\r\n    } else if (sendData.test_duration_in_seconds === '') {\r\n      this.setState({\r\n        showModal: true,\r\n        title: 'Requirements',\r\n        modal_message: 'Test Duration Is Required ..'\r\n      });\r\n    } else if (sendData.end_time === '') {\r\n      this.setState({\r\n        showModal: true,\r\n        title: 'Requirements',\r\n        modal_message: 'Please Enter Test End Time'\r\n      });\r\n    } else {\r\n      this.setState({ UploadingData: true });\r\n      fetch(baseurl + `tests/create/` + endurl, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(sendData)\r\n      })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          this.setState({\r\n            showModal: true,\r\n            title: 'Confirmation',\r\n            modal_message: data.message,\r\n            test_created: true,\r\n            created_test: data.test\r\n          });\r\n        })\r\n        .catch(err => {\r\n          this.setState({\r\n            showModal: true,\r\n            title: 'Server Error ',\r\n            modal_message: 'Please Contact To Technical Team '\r\n          });\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  ///////////////////// UPLOAD DATA ///////////////////////////////////////////////\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ padding: '3%' }}>\r\n        <center>\r\n          <h1> Make Test </h1>\r\n        </center>\r\n        <br />\r\n        <Row>\r\n          <Col span={10}>\r\n            <h3> Test Title In English</h3>\r\n            <Input\r\n              placeholder='Ex.  Time And Work , Speed And Distance , Profit And Loss'\r\n              value={this.state.english_title}\r\n              onChange={this.handleChange}\r\n              name='english_title'\r\n            />\r\n          </Col>\r\n          <Col offset={2} span={10}>\r\n            <h3> Test Title In Hindi</h3>\r\n            <Input\r\n              placeholder='Ex.  Time And Work , Speed And Distance , Profit And Loss'\r\n              value={this.state.hindi_title}\r\n              onChange={this.handleChange}\r\n              name='hindi_title'\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <br />\r\n        <Row>\r\n          <Col span={10}>\r\n            <h3> Test Commence Date </h3>\r\n            <DatePicker onChange={this.handleDate} />\r\n          </Col>\r\n          <Col span={10} offset={2}>\r\n            <h3>Test Commence Time</h3>\r\n            <TimePicker\r\n              defaultValue={moment('00:00:00', 'HH:mm:ss')}\r\n              open={this.state.open_commence_time}\r\n              onOpenChange={open =>\r\n                this.handleOpenChange(open, 'test_commence_time')\r\n              }\r\n              onChange={(time, timeString) =>\r\n                this.handleTime(time, timeString, 'test_commence_time')\r\n              }\r\n              addon={() => (\r\n                <Button\r\n                  size='small'\r\n                  type='primary'\r\n                  onClick={() => this.handleClose('test_commence_time')}\r\n                >\r\n                  Ok\r\n                </Button>\r\n              )}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <br />\r\n        <Row>\r\n          <Col span={10}>\r\n            <h3>Test Duration</h3>\r\n            <TimePicker\r\n              defaultValue={moment('00:00:00', 'HH:mm:ss')}\r\n              open={this.state.open_test_duration}\r\n              onOpenChange={open =>\r\n                this.handleOpenChange(open, 'test_duration')\r\n              }\r\n              onChange={(time, timeString) =>\r\n                this.handleTime(time, timeString, 'test_duration_in_seconds')\r\n              }\r\n              addon={() => (\r\n                <Button\r\n                  size='small'\r\n                  type='primary'\r\n                  onClick={() => this.handleClose('test_duration')}\r\n                >\r\n                  Ok\r\n                </Button>\r\n              )}\r\n            />\r\n          </Col>\r\n          <Col span={10} offset={2}>\r\n            <h3>Test End Time </h3>\r\n            <TimePicker\r\n              defaultValue={moment('00:00:00', 'HH:mm:ss')}\r\n              open={this.state.open_end_time}\r\n              onOpenChange={open => this.handleOpenChange(open, 'end_time')}\r\n              onChange={(time, timeString) =>\r\n                this.handleTime(time, timeString, 'end_time')\r\n              }\r\n              addon={() => (\r\n                <Button\r\n                  size='small'\r\n                  type='primary'\r\n                  onClick={() => this.handleClose('end_time')}\r\n                >\r\n                  Ok\r\n                </Button>\r\n              )}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <br />\r\n        <Row>\r\n          <Col span={10}>\r\n            <h3> Set Password For Test (Yes/No) </h3>\r\n            <Switch\r\n              defaultChecked\r\n              onChange={value => {\r\n                this.setState({ set_password: value });\r\n              }}\r\n            />\r\n          </Col>\r\n          <Col offset={2} span={10}>\r\n            <h3> Do You Want To Shuffle Questions(Yes/No) </h3>\r\n            <Switch\r\n              defaultChecked\r\n              onChange={value => {\r\n                this.setState({ shuffle_required: value });\r\n              }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        {this.state.UploadingData === true ? (\r\n          <Button\r\n            size={'large'}\r\n            type='primary'\r\n            loading={this.state.UploadingData}\r\n          >\r\n            Creating Test\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            width='100%'\r\n            type='primary'\r\n            size={'large'}\r\n            onClick={this.handleCreateTest}\r\n          >\r\n            Create Test\r\n          </Button>\r\n        )}\r\n        {this.state.showModal === true ? (\r\n          <Alert\r\n            makeShowModalFalse={this.makeShowModalFalse}\r\n            title={this.state.modal_title}\r\n            message={this.state.modal_message}\r\n          />\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { baseurl, endurl } from '../../../baseurl';\r\nimport { Form, Input, Button, Row, Col, Icon } from 'antd';\r\nimport { encoded_data } from '../../../encoded_data';\r\nimport Alert from '../../Alert';\r\nimport './index.css';\r\nconst { TextArea } = Input;\r\n\r\nexport default class AddQuestion extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      english_text: '',\r\n      hindi_text: '',\r\n      formLayout: 'horizontal',\r\n      options: [],\r\n      correct_option_index: null,\r\n      test_id: '',\r\n      pic: null,\r\n      UploadingData: false,\r\n      showModal: false,\r\n      modal_title: '',\r\n      modal_message: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ test_id: this.props.test_id });\r\n  }\r\n\r\n  makeShowModalFalse = () => {\r\n    this.setState({ showModal: false, UploadingData: false });\r\n  };\r\n\r\n  validateForm = () => {\r\n    let validateOptions = () => {\r\n      for (let i = 0; i < this.state.options.length; i++) {\r\n        if (this.state.options[i].english_text === '') {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    };\r\n    const { english_text, correct_option_index, options } = this.state;\r\n    if (english_text === '') {\r\n      this.setState({\r\n        showModal: true,\r\n        modal_title: 'Requirements',\r\n        modal_message: 'Please Type The Question'\r\n      });\r\n      return false;\r\n    } else if (options.length === 0) {\r\n      this.setState({\r\n        showModal: true,\r\n        modal_title: 'Requirements',\r\n        modal_message: 'Please Make Options'\r\n      });\r\n      return false;\r\n    } else if (validateOptions() === false) {\r\n      this.setState({\r\n        showModal: true,\r\n        modal_title: 'Requirements',\r\n        modal_message: 'Please Fill All The Options'\r\n      });\r\n      return false;\r\n    } else if (correct_option_index === 0) {\r\n      this.setState({\r\n        showModal: true,\r\n        modal_title: 'Requirements',\r\n        modal_message: 'Please Fill Correct Option Field'\r\n      });\r\n      return false;\r\n    } else if (\r\n      correct_option_index > options.length ||\r\n      correct_option_index < 1\r\n    ) {\r\n      this.setState({\r\n        showModal: true,\r\n        modal_title: 'Requirements',\r\n        modal_message: 'Invalid Option'\r\n      });\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  handleChange = event => {\r\n    let found = false;\r\n    for (let i = 0; i < encoded_data.length; i++) {\r\n      if (event.target.value.indexOf(encoded_data[i].name) !== -1) {\r\n        found = true;\r\n        this.setState({\r\n          [event.target.name]: event.target.value.replace(\r\n            encoded_data[i].name,\r\n            encoded_data[i].js_code\r\n          )\r\n        });\r\n        break;\r\n      }\r\n    }\r\n    if (!found) {\r\n      this.setState({ [event.target.name]: event.target.value });\r\n    }\r\n  };\r\n\r\n  handleOptionChange = (index, event) => {\r\n    event.persist();\r\n    let object = {};\r\n    let found = false;\r\n    for (let i = 0; i < encoded_data.length; i++) {\r\n      if (event.target.value.indexOf(encoded_data[i].name) !== -1) {\r\n        found = true;\r\n        object = Object.assign(this.state.options[index], {\r\n          [event.target.name]: event.target.value.replace(\r\n            encoded_data[i].name,\r\n            encoded_data[i].js_code\r\n          )\r\n        });\r\n        break;\r\n      }\r\n    }\r\n    if (!found) {\r\n      if (event.target.name === 'english_text') {\r\n        object = Object.assign(this.state.options[index], {\r\n          [event.target.name]: event.target.value,\r\n          hindi_text: event.target.value\r\n        });\r\n      } else {\r\n        object = Object.assign(this.state.options[index], {\r\n          [event.target.name]: event.target.value\r\n        });\r\n      }\r\n    }\r\n    this.setState(state => ({ [state.options[index]]: object }));\r\n  };\r\n\r\n  handleSelectChange = value => {\r\n    this.setState({ sub_category_id: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    if (this.validateForm() === true) {\r\n      let custome_url = `tests/add_testQuestion_without_image/${endurl}`;\r\n      this.setState({ UploadingData: true });\r\n      let formData = new FormData();\r\n      const sendData = {\r\n        test_id: this.state.test_id,\r\n        english_text: this.state.english_text,\r\n        hindi_text: this.state.hindi_text,\r\n        options: this.state.options,\r\n        correct_option_index: this.state.correct_option_index\r\n      };\r\n      formData.append('SendData', JSON.stringify(sendData));\r\n      if (this.state.pic !== null) {\r\n        custome_url = `tests/add_testQuestion_with_image/${endurl}`;\r\n        formData.append('question_image', this.state.pic);\r\n      }\r\n      fetch(baseurl + custome_url, {\r\n        method: 'POST',\r\n        body: formData\r\n      })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          this.props.IncrementQuestion();\r\n          this.setState({\r\n            UploadingData: false,\r\n            english_text: '',\r\n            hindi_text: '',\r\n            formLayout: 'horizontal',\r\n            options: [],\r\n            correct_option_index: null,\r\n            pic: null,\r\n            showModal: true,\r\n            modal_title: 'Confirmation',\r\n            modal_message: 'Question Added Successfully'\r\n          });\r\n        })\r\n        .catch(err => {\r\n          this.setState({\r\n            showModal: true,\r\n            modal_title: 'Server Error',\r\n            modal_message: 'Please Contact To Technical Team'\r\n          });\r\n          console.log(err);\r\n        });\r\n    } else {\r\n    }\r\n  };\r\n\r\n  handleFile = e => {\r\n    this.setState({ pic: e.target.files[0] });\r\n  };\r\n\r\n  handleAppendButton = () => {\r\n    const newOption = {\r\n      english_text: '',\r\n      hindi_text: '',\r\n      question_id: ''\r\n    };\r\n    this.setState(state => ({\r\n      options: state.options.concat(newOption)\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { formLayout } = this.state;\r\n    const formItemLayout =\r\n      formLayout === 'horizontal'\r\n        ? {\r\n            labelCol: { span: 4 },\r\n            wrapperCol: { span: 14 }\r\n          }\r\n        : null;\r\n    const buttonItemLayout =\r\n      formLayout === 'horizontal'\r\n        ? {\r\n            wrapperCol: { span: 14, offset: 4 }\r\n          }\r\n        : null;\r\n\r\n    return (\r\n      <div className='box'>\r\n        <center>\r\n          <h1>Add Question</h1>\r\n        </center>\r\n        <hr />\r\n        <Form\r\n          layout={formLayout}\r\n          action='#'\r\n          method='post'\r\n          encType='multipart/form-data'\r\n        >\r\n          <Form.Item label='Question' {...formItemLayout}>\r\n            <Row>\r\n              <Col span={10}>\r\n                <TextArea\r\n                  name='english_text'\r\n                  value={this.state.english_text}\r\n                  rows={4}\r\n                  placeholder='In English'\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Col>\r\n              <Col span={10} offset={1}>\r\n                <TextArea\r\n                  name='hindi_text'\r\n                  value={this.state.hindi_text}\r\n                  rows={4}\r\n                  placeholder='In Hindi'\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Form.Item>\r\n          <div style={{ float: 'right', paddingRight: '10%' }}>\r\n            <Button type='primary' onClick={this.handleAppendButton}>\r\n              Add Option\r\n              <Icon type='plus-square' />\r\n            </Button>\r\n          </div>\r\n          <br />\r\n          <br />\r\n          {this.state.options.map((option, index) => {\r\n            return (\r\n              <QuestionOption\r\n                key={index}\r\n                option={option}\r\n                index={index}\r\n                handleOptionChange={this.handleOptionChange}\r\n              />\r\n            );\r\n          })}\r\n          <Form.Item label='Correct Option' {...formItemLayout}>\r\n            <Input\r\n              type={`number`}\r\n              max={this.state.options.length}\r\n              min={1}\r\n              value={this.state.correct_option_index}\r\n              onChange={this.handleChange}\r\n              name='correct_option_index'\r\n            />\r\n          </Form.Item>\r\n          <Form.Item {...buttonItemLayout}>\r\n            Attach Image &nbsp; : &nbsp;&nbsp;&nbsp;\r\n            <Button type='primary'>\r\n              <label for='upload-photo' style={{ paddingTop: '5%' }}>\r\n                Browse File\r\n              </label>\r\n              <input\r\n                type='file'\r\n                id='upload-photo'\r\n                onChange={e => this.handleFile(e)}\r\n                style={{\r\n                  opacity: 0,\r\n                  position: 'absolute',\r\n                  zIndex: -1\r\n                }}\r\n              />\r\n            </Button>\r\n          </Form.Item>\r\n          <Form.Item {...buttonItemLayout}>\r\n            <Button\r\n              type='primary'\r\n              loading={this.state.UploadingData}\r\n              onClick={this.handleSubmit}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n        {this.state.showModal === true ? (\r\n          <Alert\r\n            makeShowModalFalse={this.makeShowModalFalse}\r\n            title={this.state.modal_title}\r\n            message={this.state.modal_message}\r\n          />\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass QuestionOption extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      formLayout: 'horizontal'\r\n    };\r\n  }\r\n  componentDidMount() {}\r\n\r\n  render() {\r\n    const { formLayout } = this.state;\r\n    const formItemLayout =\r\n      formLayout === 'horizontal'\r\n        ? {\r\n            labelCol: { span: 4 },\r\n            wrapperCol: { span: 14 }\r\n          }\r\n        : null;\r\n    return (\r\n      <Form.Item label={`Option ${this.props.index + 1}`} {...formItemLayout}>\r\n        <Row>\r\n          <Col span={10}>\r\n            <Input\r\n              value={this.props.option.english_text}\r\n              size='large'\r\n              name='english_text'\r\n              placeholder='Type In English'\r\n              onChange={event =>\r\n                this.props.handleOptionChange(this.props.index, event)\r\n              }\r\n            />\r\n          </Col>\r\n          <Col span={10} offset={1}>\r\n            <Input\r\n              value={this.props.option.hindi_text}\r\n              size='large'\r\n              name='hindi_text'\r\n              placeholder='Type In Hindi'\r\n              onChange={event =>\r\n                this.props.handleOptionChange(this.props.index, event)\r\n              }\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Form.Item>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Row, Col, Button } from 'antd';\r\nimport moment from 'moment';\r\nimport AddQuestion from '../AddQuestion/index';\r\nexport default class ShowTest extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      questions: [],\r\n      test_id: '',\r\n      no_of_questions: 0\r\n    };\r\n  }\r\n\r\n  IncrementQuestion = () => {\r\n    this.setState(state => ({ no_of_questions: state.no_of_questions + 1 }));\r\n  };\r\n\r\n  handleAddQuestion = () => {\r\n    let newQuestionItem = { test_id: this.state.test_id };\r\n    this.setState(state => ({\r\n      questions: state.questions.concat({ newQuestionItem })\r\n    }));\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ test_id: this.props.test._id });\r\n  }\r\n\r\n  render() {\r\n    let test = this.props.test;\r\n    return (\r\n      <>\r\n        <div style={{ paddingTop: '5%' }}>\r\n          <center>\r\n            <h1>{test.english_title}</h1>\r\n          </center>\r\n          <Row style={{ paddingLeft: '10%' }}>\r\n            <Col span={10} offset={2}>\r\n              <h3>Commence Date</h3> &nbsp;&nbsp;&nbsp;&nbsp;{' '}\r\n              {test.test_commence_date}\r\n            </Col>\r\n            <Col span={10} offset={2}>\r\n              <h3>Commence Time</h3>&nbsp;&nbsp;&nbsp;&nbsp;{' '}\r\n              {test.test_commence_time}\r\n            </Col>\r\n          </Row>\r\n          <br />\r\n          <Row style={{ paddingLeft: '10%' }}>\r\n            <Col span={10} offset={2}>\r\n              <h3>Time Allowed</h3> &nbsp;&nbsp;&nbsp;&nbsp;{' '}\r\n              {moment\r\n                .utc(parseInt(test.test_allowed_time_in_seconds * 1000))\r\n                .format('HH:mm:ss')}\r\n            </Col>\r\n            <Col span={10} offset={2}>\r\n              <h3>No Of Days For Which Test Will be Online</h3>\r\n              &nbsp;&nbsp;&nbsp;&nbsp; {test.test_online_no_of_days}\r\n            </Col>\r\n          </Row>\r\n          <br />\r\n          <Row style={{ paddingLeft: '10%' }}>\r\n            <Col span={10} offset={2}>\r\n              <h3>Is Password Set For This Test ??</h3> &nbsp;&nbsp;&nbsp;&nbsp;{' '}\r\n              {test.set_password === 'true' ? 'Yes' : 'No'}\r\n            </Col>\r\n            <Col span={10} offset={2}>\r\n              <h3>Will Questions Be In Shuffle Order ??</h3>\r\n              &nbsp;&nbsp;&nbsp;&nbsp;{' '}\r\n              {test.shuffle_required === 'true' ? 'Yes' : 'No'}\r\n            </Col>\r\n          </Row>\r\n          <br />\r\n          <br />\r\n          <Row style={{ paddingLeft: '10%' }}>\r\n            <Col span={10} offset={2}>\r\n              <h3>No Of Questions</h3> &nbsp;&nbsp;&nbsp;{' '}\r\n              {this.state.no_of_questions}\r\n            </Col>\r\n            <Col span={10} offset={2}>\r\n              <Button\r\n                type='primary'\r\n                shape='round'\r\n                icon='download'\r\n                size={'large'}\r\n                onClick={this.handleAddQuestion}\r\n              >\r\n                Add Question\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n        <br />\r\n        <br />\r\n        {this.state.questions.length === 0 ? (\r\n          <div> </div>\r\n        ) : (\r\n          <div>\r\n            {this.state.questions.map((question, index) => {\r\n              return (\r\n                <AddQuestion\r\n                  IncrementQuestion={this.IncrementQuestion}\r\n                  test_id={this.state.test_id}\r\n                  key={index}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from 'react'\r\nimport MakeTest from '../MakeTest/index'\r\nimport ShowTest from '../ShowTest/index'\r\n\r\nexport default class MakeTestWrapper extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            testCreated : false,\r\n            createdTest : {}\r\n        }\r\n    }\r\n    createTest = (createdTest) => {\r\n        this.setState({ testCreated : true , createdTest : createdTest })\r\n    }\r\n\r\n    render(){\r\n        if(this.state.testCreated === false){\r\n            return <MakeTest createTest = {this.createTest} />\r\n        } else {\r\n            return <ShowTest test = {this.state.createdTest} />\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport { Row, Col, Button, Spin } from 'antd';\r\nimport moment from 'moment';\r\nimport AddQuestion from '../AddQuestion/index';\r\nimport { baseurl, endurl } from '../../../baseurl';\r\n\r\nexport default class ShowTestById extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      questions: [],\r\n      test_id: '',\r\n      no_of_questions: 0,\r\n      test: {},\r\n      loading: false\r\n    };\r\n  }\r\n\r\n  IncrementQuestion = () => {\r\n    this.setState(state => ({ no_of_questions: state.no_of_questions + 1 }));\r\n  };\r\n\r\n  handleAddQuestion = () => {\r\n    let newQuestionItem = { test_id: this.state.test_id };\r\n    this.setState(state => ({\r\n      questions: state.questions.concat({ newQuestionItem })\r\n    }));\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ loading: true });\r\n    let id = this.props.match.params.id;\r\n    fetch(`${baseurl}tests/fetch_test_by_id/${id}/${endurl}`)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        this.setState({\r\n          test: data,\r\n          loading: false,\r\n          test_id: data._id,\r\n          no_of_questions: parseInt(data.count)\r\n        });\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  render() {\r\n    let test = this.state.test;\r\n    if (this.state.loading === true) {\r\n      return (\r\n        <div style={{ padding: '15%', paddingLeft: '50%' }}>\r\n          <Spin size='large' />\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n          <div style={{ paddingTop: '5%' }}>\r\n            <center>\r\n              <h1>{test.english_title}</h1>\r\n            </center>\r\n            <Row style={{ paddingLeft: '10%' }}>\r\n              <Col span={10} offset={2}>\r\n                <h3>Commence Date</h3> &nbsp;&nbsp;&nbsp;&nbsp;{' '}\r\n                {test.test_commence_date}\r\n              </Col>\r\n              <Col span={10} offset={2}>\r\n                <h3>Commence Time</h3>&nbsp;&nbsp;&nbsp;&nbsp;{' '}\r\n                {test.test_commence_time}\r\n              </Col>\r\n            </Row>\r\n            <br />\r\n            <Row style={{ paddingLeft: '10%' }}>\r\n              <Col span={10} offset={2}>\r\n                <h3>Time Allowed</h3> &nbsp;&nbsp;&nbsp;&nbsp;{' '}\r\n                {moment\r\n                  .utc(parseInt(test.test_allowed_time_in_seconds * 1000))\r\n                  .format('HH:mm:ss')}\r\n              </Col>\r\n              <Col span={10} offset={2}>\r\n                <h3>Test End Time</h3>&nbsp;&nbsp;&nbsp;&nbsp; {test.end_time}\r\n              </Col>\r\n            </Row>\r\n            <br />\r\n            <Row style={{ paddingLeft: '10%' }}>\r\n              <Col span={10} offset={2}>\r\n                <h3>Is Password Set For This Test ??</h3>{' '}\r\n                &nbsp;&nbsp;&nbsp;&nbsp;{' '}\r\n                {test.set_password === 'true'\r\n                  ? 'Yes'.toUpperCase()\r\n                  : 'No'.toUpperCase()}\r\n              </Col>\r\n              <Col span={10} offset={2}>\r\n                <h3>Will Questions Be In Shuffle Order ??</h3>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;{' '}\r\n                {test.shuffle_required === 'true'\r\n                  ? 'Yes'.toUpperCase()\r\n                  : 'No'.toUpperCase()}\r\n              </Col>\r\n            </Row>\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <Row style={{ paddingLeft: '10%' }}>\r\n              <Col span={10} offset={2}>\r\n                <h3>No Of Questions</h3> &nbsp;&nbsp;&nbsp;{' '}\r\n                {this.state.no_of_questions}\r\n              </Col>\r\n              <Col span={10} offset={2}>\r\n                <Button\r\n                  type='primary'\r\n                  shape='round'\r\n                  icon='download'\r\n                  size={'large'}\r\n                  onClick={this.handleAddQuestion}\r\n                >\r\n                  Add Question\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n          <br />\r\n          <br />\r\n          {this.state.questions.length === 0 ? (\r\n            <div> </div>\r\n          ) : (\r\n            <div>\r\n              {this.state.questions.map((question, index) => {\r\n                return (\r\n                  <AddQuestion\r\n                    IncrementQuestion={this.IncrementQuestion}\r\n                    test_id={this.state.test_id}\r\n                    key={index}\r\n                  />\r\n                );\r\n              })}\r\n            </div>\r\n          )}\r\n        </>\r\n      );\r\n    }\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { baseurl, endurl } from '../../../baseurl';\r\nimport { List, Skeleton } from 'antd';\r\nimport moment from 'moment';\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n  Link\r\n} from 'react-router-dom';\r\nimport ShowTestById from '../ShowTestById';\r\n\r\nclass AllTestComponent extends React.Component {\r\n  state = {\r\n    initLoading: true,\r\n    loading: false,\r\n    data: [],\r\n    list: []\r\n  };\r\n\r\n  getData = callback => {\r\n    fetch(`${baseurl}tests/fetch_all_test/${endurl}`)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        callback(data);\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getData(res => {\r\n      this.setState({\r\n        initLoading: false,\r\n        data: res,\r\n        list: res\r\n      });\r\n    });\r\n  }\r\n\r\n  isOnline = obj => {\r\n    let end_date_time = obj.test_commence_date + ' ' + obj.end_time;\r\n    let start_date_Time = obj.test_commence_date + ' ' + obj.test_commence_time;\r\n    start_date_Time = moment(start_date_Time);\r\n    end_date_time = moment(end_date_time);\r\n    let currentDateTime = moment(\r\n      new Date().toLocaleString('en-US', { timeZone: 'Asia/Kolkata' })\r\n    );\r\n\r\n    var difference_with_start_time = currentDateTime.diff(\r\n      start_date_Time,\r\n      'seconds'\r\n    );\r\n\r\n    var range = end_date_time.diff(start_date_Time, 'seconds');\r\n    if (difference_with_start_time < 0) {\r\n      return 'Yet To Start';\r\n    } else if (difference_with_start_time > range) {\r\n      return 'Test Is Finished';\r\n    } else {\r\n      return 'Presently Online';\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let match = this.props.match;\r\n    const { initLoading, list } = this.state;\r\n\r\n    return (\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <div style={{ padding: '5%' }}>\r\n          <center>\r\n            <h1>\r\n              <u>List Of All Tests</u>\r\n            </h1>\r\n          </center>\r\n          <List\r\n            className='demo-loadmore-list'\r\n            loading={initLoading}\r\n            itemLayout='horizontal'\r\n            dataSource={list}\r\n            renderItem={item => (\r\n              <List.Item\r\n                actions={[<Link to={`${match.url}/${item._id}`}>Edit</Link>]}\r\n              >\r\n                <Skeleton avatar title={false} loading={item.loading} active>\r\n                  <List.Item.Meta\r\n                    title={\r\n                      <div style={{ fontWeight: 'bold', fontSize: 20 }}>\r\n                        {item.english_title}\r\n                      </div>\r\n                    }\r\n                    description={\r\n                      <div>\r\n                        <h3>\r\n                          {moment(item.test_commence_date).format(\r\n                            'Do MMM ddd YYYY'\r\n                          )}\r\n                        </h3>\r\n                        <h4>Commence Time : {item.test_commence_time}</h4>\r\n                      </div>\r\n                    }\r\n                  />\r\n                  <div>\r\n                    Current Status : &nbsp;&nbsp;&nbsp;\r\n                    <h3>{this.isOnline(item)}</h3>\r\n                  </div>\r\n                </Skeleton>\r\n              </List.Item>\r\n            )}\r\n          />\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default class AllTest extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    if (localStorage.getItem('authenticated') === 'true') {\r\n      let match = this.props.match;\r\n      return (\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path={`${match.url}`}\r\n              render={props => <AllTestComponent {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/:id`}\r\n              render={props => <ShowTestById {...props} />}\r\n            />\r\n          </Switch>\r\n        </Router>\r\n      );\r\n    } else {\r\n      return <Redirect to={{ pathname: '/login' }} />;\r\n    }\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Row, Col, DatePicker, Select, Spin, Button } from 'antd';\r\nimport { baseurl, endurl } from '../../../baseurl';\r\nimport moment from 'moment';\r\nconst { Option } = Select;\r\n\r\nfunction CustomRow(props) {\r\n  return (\r\n    <tr>\r\n      {Object.values(props.row).map((item, key) => {\r\n        return <td key={key}>{item}</td>;\r\n      })}\r\n    </tr>\r\n  );\r\n}\r\n\r\nfunction ResultTable(props) {\r\n  if (props.loading === true) {\r\n    return (\r\n      <div style={{ padding: '20%', paddingLeft: '50%' }}>\r\n        <Spin size='large' />\r\n      </div>\r\n    );\r\n  } else if (props.selected_test_id === '') {\r\n    return (\r\n      <div style={{ padding: '35%', paddingTop: '5%' }}>\r\n        <h5>Results Will Be Displayed Here </h5>\r\n      </div>\r\n    );\r\n  } else if (props.results.length === 0) {\r\n    return (\r\n      <div style={{ padding: '35%', paddingTop: '5%' }}>\r\n        <h5>No Results Found Yet</h5>\r\n      </div>\r\n    );\r\n  } else if (props.results.length !== 0) {\r\n    return (\r\n      <table className='table'>\r\n        <thead className='thead-light'>\r\n          <tr>\r\n            {Object.keys(props.results[0]).map((item, key) => {\r\n              return (\r\n                <th\r\n                  key={key}\r\n                  style={{ position: 'sticky', top: 0, zIndex: 10 }}\r\n                  scope='col'\r\n                >\r\n                  {item}\r\n                </th>\r\n              );\r\n            })}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {props.results.map((item, key) => {\r\n            return <CustomRow row={item} key={key} />;\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n}\r\n\r\nexport default class Results extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selected_test_date: '',\r\n      all_tests: [],\r\n      filtered_tests: [],\r\n      results: [],\r\n      selected_test_id: '',\r\n      loading_results: false\r\n    };\r\n  }\r\n\r\n  handle_refresh = () => {\r\n    if (this.state.selected_test_id === '') {\r\n      alert('Please Choose Test ....');\r\n    } else {\r\n      this.refreshResult();\r\n    }\r\n  };\r\n\r\n  refreshResult = () => {\r\n    this.setState({ loading_results: true });\r\n    fetch(`${baseurl}tests/results/${this.state.selected_test_id}/${endurl}`)\r\n      .then(res => res.json())\r\n      .then(data => this.setState({ results: data, loading_results: false }))\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(`${baseurl}tests/fetch_all_test/${endurl}`)\r\n      .then(res => res.json())\r\n      .then(data => this.setState({ all_tests: data, filtered_tests: data }))\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  filter_tests_by_date = date => {\r\n    let filtered_tests = this.state.all_tests.filter(item => {\r\n      return item.test_commence_date === moment(date).format('YYYY-MM-DD');\r\n    });\r\n    if (filtered_tests.length !== 0) {\r\n      this.setState({ filtered_tests: filtered_tests });\r\n    } else {\r\n      this.setState({ filtered_tests: this.state.all_tests });\r\n    }\r\n  };\r\n\r\n  handle_date_change = date => {\r\n    this.setState({ test_date: date });\r\n    this.filter_tests_by_date(date);\r\n  };\r\n\r\n  onSelectTest = async _id => {\r\n    await this.setState({ selected_test_id: _id });\r\n    this.refreshResult();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ paddingTop: '5%' }}>\r\n        <Row style={{ paddingLeft: '10%' }}>\r\n          <Col span={10} offset={2}>\r\n            <h3>Select Date </h3>\r\n            <DatePicker onChange={this.handle_date_change} />\r\n          </Col>\r\n          <Col span={10} offset={2}>\r\n            <h3>Choose Test</h3>\r\n            <Select\r\n              showSearch\r\n              style={{ width: 200 }}\r\n              placeholder='Select a Test'\r\n              optionFilterProp='children'\r\n              onChange={this.onSelectTest}\r\n              filterOption={(input, option) =>\r\n                option.props.children\r\n                  .toLowerCase()\r\n                  .indexOf(input.toLowerCase()) >= 0\r\n              }\r\n            >\r\n              {this.state.filtered_tests.map((item, key) => {\r\n                return (\r\n                  <Option key={item._id} value={item._id}>\r\n                    {item.english_title}\r\n                  </Option>\r\n                );\r\n              })}\r\n            </Select>\r\n          </Col>\r\n        </Row>\r\n        <br />\r\n        <Row style={{ paddingLeft: '10%' }}>\r\n          <Col span={10} offset={2}>\r\n            <h3>Test Results Found</h3>\r\n            <br />\r\n            <h5>{this.state.results.length}</h5>\r\n          </Col>\r\n          <Col span={10} offset={2}>\r\n            <h3>Click To Refresh</h3>\r\n            <br />\r\n            <Button type='primary' onClick={this.handle_refresh}>\r\n              Refresh\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n        <br />\r\n        <ResultTable\r\n          results={this.state.results}\r\n          loading={this.state.loading_results}\r\n          selected_test_id={this.state.selected_test_id}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { baseurl, endurl } from '../../../baseurl';\r\n\r\nimport { Row, Col, Select, Button } from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\nexport default class Set_Demo_Test extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tests: [],\r\n      updating_data: false,\r\n      selected_test_ids: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(`${baseurl}tests/fetch_all_test/${endurl}`)\r\n      .then(res => res.json())\r\n      .then(data => this.setState({ tests: data }))\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  onSelectTest = async _id_array => {\r\n    this.setState({ selected_test_ids: _id_array });\r\n  };\r\n\r\n  handleSave = () => {\r\n    this.setState({ updating_data: true });\r\n    fetch(`${baseurl}tests/set_demo_test/${endurl}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(this.state.selected_test_ids)\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        console.log(data);\r\n        this.setState({ updating_data: false });\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ paddingTop: '5%' }}>\r\n        <Row style={{ paddingLeft: '10%' }}>\r\n          <Col span={10} offset={2}>\r\n            <h3>Choose Test For Demo Test </h3>\r\n            <Select\r\n              mode='multiple'\r\n              showSearch\r\n              style={{ width: 200 }}\r\n              placeholder='Select a Test'\r\n              optionFilterProp='children'\r\n              onChange={this.onSelectTest}\r\n              filterOption={(input, option) =>\r\n                option.props.children\r\n                  .toLowerCase()\r\n                  .indexOf(input.toLowerCase()) >= 0\r\n              }\r\n            >\r\n              {this.state.tests.map((item, key) => {\r\n                return (\r\n                  <Option key={item._id} value={item._id}>\r\n                    {item.english_title}\r\n                  </Option>\r\n                );\r\n              })}\r\n            </Select>\r\n          </Col>\r\n        </Row>\r\n        <br />\r\n        <Row style={{ paddingLeft: '10%' }}>\r\n          <Col span={10} offset={2}>\r\n            {this.state.updating_data === true ? (\r\n              <Button\r\n                size={'large'}\r\n                type='primary'\r\n                loading={this.state.UploadingData}\r\n              >\r\n                Saving ...\r\n              </Button>\r\n            ) : (\r\n              <Button\r\n                width='100%'\r\n                type='primary'\r\n                size={'large'}\r\n                onClick={this.handleSave}\r\n              >\r\n                Save Your Choice\r\n              </Button>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n        <br />\r\n        <br />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nimport {\r\n  Redirect,\r\n  Link,\r\n  Route,\r\n  Switch,\r\n  HashRouter as Router\r\n} from 'react-router-dom';\r\n\r\nimport EditTest from './EditTest/index';\r\nimport TestStatus from './TestStatus/index';\r\nimport TestHistory from './TestHistory/index';\r\nimport MakeTestWrapper from './MakeTestWrapper/index';\r\nimport AllTest from './AllTest/index';\r\nimport { Layout, Menu, Icon } from 'antd';\r\nimport Results from './Results';\r\nimport setDemoTest from './Set_Demo_Test/index';\r\n\r\nconst { SubMenu } = Menu;\r\nconst { Content, Sider } = Layout;\r\n\r\nexport default class Test extends React.Component {\r\n  render() {\r\n    if (localStorage.getItem('authenticated') === 'true') {\r\n      let match = this.props.match;\r\n      return (\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n          <Layout style={{ paddingTop: '5%' }}>\r\n            <Sider width={'20%'} style={{ background: '#fff' }}>\r\n              <Menu\r\n                theme='dark'\r\n                mode='inline'\r\n                style={{ height: '100%', borderRight: 0 }}\r\n              >\r\n                <SubMenu\r\n                  key='sub1'\r\n                  title={\r\n                    <span>\r\n                      <Icon type='folder-open' />\r\n                      Manage Test\r\n                    </span>\r\n                  }\r\n                >\r\n                  <Menu.Item key='1'>\r\n                    <Link to={`${match.url}/make_test`}>Make New Test</Link>\r\n                  </Menu.Item>\r\n                  <Menu.Item key='2'>\r\n                    <Link to={`${match.url}/all_tests`}>All Tests</Link>\r\n                  </Menu.Item>\r\n                  <Menu.Item key='3'>\r\n                    <Link to={`${match.url}/results`}>Results</Link>\r\n                  </Menu.Item>\r\n                  <Menu.Item key='4'>\r\n                    <Link to={`${match.url}/edit_test`}>Edit Test</Link>\r\n                  </Menu.Item>\r\n                  <Menu.Item key='5'>\r\n                    <Link to={`${match.url}/set_demo_test`}>\r\n                      Set Demo Test{' '}\r\n                    </Link>\r\n                  </Menu.Item>\r\n                  <Menu.Item key='6'>\r\n                    <Link to={`${match.url}/test_status`}>Test Status</Link>\r\n                  </Menu.Item>\r\n                  <Menu.Item key='7'>\r\n                    <Link to={`${match.url}/test_history`}>Tests History</Link>\r\n                  </Menu.Item>\r\n                </SubMenu>\r\n              </Menu>\r\n            </Sider>\r\n            <Content>\r\n              <Switch>\r\n                <Route\r\n                  path={`${match.url}/make_test`}\r\n                  render={props => <MakeTestWrapper {...props} />}\r\n                />\r\n                <Route\r\n                  path={`${match.url}/all_tests`}\r\n                  render={props => <AllTest {...props} />}\r\n                />\r\n                <Route\r\n                  path={`${match.url}/results`}\r\n                  render={props => <Results {...props} />}\r\n                />\r\n                <Route\r\n                  path={`${match.url}/edit_test`}\r\n                  render={props => <EditTest {...props} />}\r\n                />\r\n                <Route\r\n                  path={`${match.url}/set_demo_test`}\r\n                  render={props => <setDemoTest {...props} />}\r\n                />\r\n                <Route\r\n                  path={`${match.url}/test_status`}\r\n                  render={props => <TestStatus {...props} />}\r\n                />\r\n                <Route\r\n                  path={`${match.url}/test_history`}\r\n                  render={props => <TestHistory {...props} />}\r\n                />\r\n              </Switch>\r\n            </Content>\r\n          </Layout>\r\n        </Router>\r\n      );\r\n    } else {\r\n      return <Redirect to={{ pathname: '/login' }} />;\r\n    }\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { baseurl, endurl } from '../../../baseurl';\r\nimport { Spin, Row, Col, Button, Switch } from 'antd';\r\n\r\nexport default class UpdateStudentPermissions extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      student_data: {},\r\n      uploading_data: false\r\n    };\r\n  }\r\n\r\n  handleSave = () => {\r\n    this.setState({ uploading_data: true });\r\n    let sendData = this.state.student_data;\r\n    fetch(`${baseurl}students/update_permission/${endurl}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(sendData)\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        this.setState({ updating: false });\r\n        if (data.code === 'success') {\r\n          alert('Updated Successfully ....');\r\n          this.props.history.goBack();\r\n        }\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  componentDidMount() {\r\n    let student_id = this.props.match.params.student_id;\r\n    this.setState({ loading: true });\r\n    fetch(`${baseurl}students/show_by_id/${student_id}/${endurl}`)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        this.setState({ student_data: data, loading: false });\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  handleChange = (switch_type, value) => {\r\n    let student_data = this.state.student_data;\r\n    let new_student_data = {};\r\n    switch (switch_type) {\r\n      case 'pdf_allowed':\r\n        new_student_data = Object.assign(student_data, {\r\n          pdf_allowed: value.toString()\r\n        });\r\n        break;\r\n      case 'online_test_allowed':\r\n        new_student_data = Object.assign(student_data, {\r\n          online_test_allowed: value.toString()\r\n        });\r\n        break;\r\n      case 'offline_test_allowed':\r\n        new_student_data = Object.assign(student_data, {\r\n          offline_test_allowed: value.toString()\r\n        });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    this.setState({ student_data: new_student_data });\r\n  };\r\n\r\n  render() {\r\n    const data = this.state.student_data;\r\n    if (this.state.loading === true) {\r\n      return (\r\n        <div style={{ padding: '15%', paddingLeft: '50%' }}>\r\n          <Spin size='large' />\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div style={{ paddingTop: '5%' }}>\r\n          <center>\r\n            <h1>{}</h1>\r\n          </center>\r\n          <Row style={{ paddingLeft: '10%' }}>\r\n            <Col span={10} offset={2}>\r\n              <h3>Name </h3> &nbsp;<h5>{data.name}</h5>\r\n            </Col>\r\n            <Col span={10} offset={2}>\r\n              <h3>Email Id </h3>&nbsp;<h5>{data.email_id}</h5>\r\n            </Col>\r\n          </Row>\r\n          <br />\r\n          <Row style={{ paddingLeft: '10%' }}>\r\n            <Col span={10} offset={2}>\r\n              <h3>Pdf Allowed(No/Yes)</h3> &nbsp;\r\n              <Switch\r\n                onChange={value => this.handleChange('pdf_allowed', value)}\r\n                defaultChecked={data.pdf_allowed === 'true'}\r\n              />\r\n            </Col>\r\n            <Col span={10} offset={2}>\r\n              <h3>Online Test Allowed(No/Yes)</h3> &nbsp;\r\n              <Switch\r\n                onChange={value =>\r\n                  this.handleChange('online_test_allowed', value)\r\n                }\r\n                defaultChecked={data.online_test_allowed === 'true'}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <br />\r\n          <Row style={{ paddingLeft: '10%' }}>\r\n            <Col span={10} offset={2}>\r\n              <h3>Offline Tes Allowed(No/Yes)</h3> &nbsp; {}\r\n              <Switch\r\n                defaultChecked={data.offline_test_allowed === 'true'}\r\n                onChange={value =>\r\n                  this.handleChange('offline_test_allowed', value)\r\n                }\r\n              />\r\n            </Col>\r\n            <Col span={10} offset={2}>\r\n              <Button\r\n                type='primary'\r\n                shape='round'\r\n                icon='save'\r\n                size={'large'}\r\n                onClick={this.handleSave}\r\n              >\r\n                Save Permissions\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n          <br />\r\n          <br />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { baseurl, endurl } from '../baseurl';\r\nimport { Button } from 'antd';\r\n\r\nexport default class UpdatePaymentStatus extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      updating: false\r\n    };\r\n  }\r\n\r\n  handleUpdate = () => {\r\n    this.setState({ updating: true });\r\n    fetch(`${baseurl}students/update_payment_status/${endurl}`)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        this.setState({ updating: false });\r\n        if (data.code === 'success') {\r\n          alert('Payment Status Is Updated .');\r\n        } else {\r\n          alert('Payment Status Is Not Updated Due To Any Technical Reason .');\r\n        }\r\n      })\r\n      .catch(err => alert('Technical Error'));\r\n  };\r\n\r\n  render() {\r\n    if (this.state.updating === true) {\r\n      return (\r\n        <Button type='primary' size={'large'} loading style={{ width: '100%' }}>\r\n          Updating Payment Status\r\n        </Button>\r\n      );\r\n    } else {\r\n      return (\r\n        <Button\r\n          type='primary'\r\n          size={'large'}\r\n          onClick={this.handleUpdate}\r\n          style={{ width: '100%' }}\r\n        >\r\n          Click To Update Payment Status\r\n        </Button>\r\n      );\r\n    }\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { baseurl, endurl } from '../../baseurl';\r\nimport { Button, Modal, Row, Col, DatePicker, Select } from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\nexport default class ManageCashPayment extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      posting_data: false,\r\n      pack_id: null,\r\n      payment_date: '',\r\n      message: '',\r\n      amount: ''\r\n    };\r\n  }\r\n\r\n  handlePayment = () => {\r\n    if (\r\n      this.state.selected_pack_id === null ||\r\n      this.state.payment_date === ''\r\n    ) {\r\n      this.setState({ message: 'Please Fill All Fields ....' });\r\n    } else {\r\n      this.setState({ posting_data: true });\r\n      fetch(baseurl + `payment/create_cash_payment/` + endurl, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ ...this.state, student_id: this.props._id })\r\n      })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          this.setState({\r\n            posting_data: false\r\n          });\r\n          alert('Payment Created...');\r\n          this.props.make_payment_not_visible();\r\n        })\r\n        .catch(err => {\r\n          alert('Tecnical Error .. ');\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  handleDate = (date, dateString) => {\r\n    this.setState({ payment_date: dateString });\r\n  };\r\n\r\n  handleChange = value => {\r\n    this.setState({ pack_id: value });\r\n    switch (value) {\r\n      case 1:\r\n        this.setState({ amount: '100' });\r\n        break;\r\n      case 2:\r\n        this.setState({ amount: '300' });\r\n        break;\r\n      case 3:\r\n        this.setState({ amount: '500' });\r\n        break;\r\n      default:\r\n        console.log('Impossible Event ');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Modal\r\n        centered\r\n        title='Create New Payment'\r\n        style={{ top: 20 }}\r\n        width={720}\r\n        visible={this.props.payment_visible}\r\n        onOk={() => this.handlePayment(this.props._id)}\r\n        onCancel={() => this.props.make_payment_not_visible()}\r\n      >\r\n        <Row>\r\n          <Col span={10}>\r\n            <h4> Select Package </h4>\r\n            <Select\r\n              defaultValue='Choose Pack'\r\n              style={{ width: 220 }}\r\n              onChange={this.handleChange}\r\n            >\r\n              <Option value={1}>Silver-Pack 100 Rs (1 Month) </Option>\r\n              <Option value={2}>Gold-Pack 300 Rs (4 Months)</Option>\r\n              <Option value={3}>Platinum-Pack 500 Rs (6 Months)</Option>\r\n            </Select>\r\n          </Col>\r\n          <Col offset={2} span={10}>\r\n            <h4> Choose Payment Date </h4>\r\n            <DatePicker onChange={this.handleDate} />\r\n          </Col>\r\n        </Row>\r\n        <br />\r\n        <Row>\r\n          <Col span={10}></Col>\r\n          <Col offset={2} span={10}>\r\n            {!this.state.posting_data ? (\r\n              <Button onClick={this.handlePayment}>\r\n                Click Me To Create Payment\r\n              </Button>\r\n            ) : (\r\n              <Button loading>Creating Payment ...</Button>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n        <br />\r\n        <h5 style={{ color: 'red' }}>{this.state.message}</h5>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nimport { baseurl, endurl } from '../../baseurl';\r\nimport { Spin, Button } from 'antd';\r\n\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n  Link\r\n} from 'react-router-dom';\r\nimport UpdateStudentPermissions from './UpdateStudentPermissions';\r\nimport UpdatePaymentStatus from '../Update_Payment_Status';\r\nimport ManageCashPayment from '../ManageStudents/ManageCashPayment';\r\n\r\nfunction CustomRow(props) {\r\n  return (\r\n    <tr>\r\n      {Object.values(props.row).map((item, key) => {\r\n        return <td key={key}>{item}</td>;\r\n      })}\r\n      <td>\r\n        <Button type='primary' size={'large'}>\r\n          <Link to={`${props.match.url}/${props.row._id}`}>\r\n            Click To See And Edit\r\n          </Link>\r\n        </Button>\r\n      </td>\r\n      <td>\r\n        <Button\r\n          type='primary'\r\n          size={'large'}\r\n          onClick={() => {\r\n            props.set_student_id(props.row._id);\r\n            props.make_payment_visible();\r\n          }}\r\n        >\r\n          Create New Payment\r\n        </Button>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nfunction StudentsTable(props) {\r\n  if (props.loading === true) {\r\n    return (\r\n      <div style={{ padding: '20%', paddingLeft: '50%' }}>\r\n        <Spin size='large' />\r\n      </div>\r\n    );\r\n  } else if (props.students.length === 0) {\r\n    return (\r\n      <div style={{ padding: '35%', paddingTop: '5%' }}>\r\n        <h5>No students Found</h5>\r\n      </div>\r\n    );\r\n  } else if (props.students.length !== 0) {\r\n    return (\r\n      <table className='table'>\r\n        <thead className='thead-light'>\r\n          <tr>\r\n            {Object.keys(props.students[0]).map((item, key) => {\r\n              return (\r\n                <th\r\n                  key={key}\r\n                  style={{ position: 'sticky', top: 0, zIndex: 10 }}\r\n                  scope='col'\r\n                >\r\n                  {item}\r\n                </th>\r\n              );\r\n            })}\r\n            <th style={{ position: 'sticky', top: 0, zIndex: 10 }} scope='col'>\r\n              Permissions\r\n            </th>\r\n            <th style={{ position: 'sticky', top: 0, zIndex: 10 }} scope='col'>\r\n              New Cash Payment\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {props.students.map((item, key) => {\r\n            return (\r\n              <CustomRow\r\n                set_student_id={props.set_student_id}\r\n                make_payment_visible={props.make_payment_visible}\r\n                match={props.match}\r\n                row={item}\r\n                key={key}\r\n              />\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n}\r\n\r\nclass AllStudents extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      students: [],\r\n      payment_visible: false,\r\n      selected_student_id: null\r\n    };\r\n  }\r\n\r\n  make_payment_visible = () => {\r\n    this.setState({ payment_visible: true });\r\n  };\r\n\r\n  make_payment_not_visible = () => {\r\n    this.setState({ payment_visible: false });\r\n  };\r\n\r\n  set_student_id = _id => {\r\n    this.setState({ selected_student_id: _id });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ loading: true });\r\n    fetch(`${baseurl}students/show_all/${endurl}`)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        this.setState({ students: data, loading: false });\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n  render() {\r\n    return (\r\n      <div style={{ paddingTop: '5%' }}>\r\n        <UpdatePaymentStatus />\r\n        <ManageCashPayment\r\n          _id={this.state.selected_student_id}\r\n          payment_visible={this.state.payment_visible}\r\n          make_payment_not_visible={this.make_payment_not_visible}\r\n        />\r\n        <StudentsTable\r\n          make_payment_visible={this.make_payment_visible}\r\n          set_student_id={this.set_student_id}\r\n          match={this.props.match}\r\n          loading={this.state.loading}\r\n          students={this.state.students}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default class ManageStudents extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    if (localStorage.getItem('authenticated') === 'true') {\r\n      let match = this.props.match;\r\n      return (\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path={`${match.url}`}\r\n              render={props => <AllStudents {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/:student_id`}\r\n              render={props => <UpdateStudentPermissions {...props} />}\r\n            />\r\n          </Switch>\r\n        </Router>\r\n      );\r\n    } else {\r\n      return <Redirect to={{ pathname: '/login' }} />;\r\n    }\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nimport { baseurl, endurl } from '../../baseurl';\r\nimport { Spin } from 'antd';\r\n\r\nfunction CustomRow(props) {\r\n  return (\r\n    <tr>\r\n      {Object.values(props.row).map((item, key) => {\r\n        return <td key={key}>{item}</td>;\r\n      })}\r\n    </tr>\r\n  );\r\n}\r\n\r\nfunction EnquiryTable(props) {\r\n  if (props.loading === true) {\r\n    return (\r\n      <div style={{ padding: '20%', paddingLeft: '50%' }}>\r\n        <Spin size='large' />\r\n      </div>\r\n    );\r\n  } else if (props.enquiries.length === 0) {\r\n    return (\r\n      <div style={{ padding: '35%', paddingTop: '5%' }}>\r\n        <h5>No Enquiries Found</h5>\r\n      </div>\r\n    );\r\n  } else if (props.enquiries.length !== 0) {\r\n    return (\r\n      <table className='table'>\r\n        <thead className='thead-light'>\r\n          <tr>\r\n            <th>Count : </th>\r\n            <td>{props.enquiries.length}</td>\r\n          </tr>\r\n          <tr>\r\n            {Object.keys(props.enquiries[0]).map((item, key) => {\r\n              return (\r\n                <th\r\n                  key={key}\r\n                  style={{ position: 'sticky', top: 0, zIndex: 10 }}\r\n                  scope='col'\r\n                >\r\n                  {item}\r\n                </th>\r\n              );\r\n            })}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {props.enquiries.map((item, key) => {\r\n            return <CustomRow row={item} key={key} />;\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n}\r\n\r\nexport default class Enquiry extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      enquiries: []\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.setState({ loading: true });\r\n    fetch(`${baseurl}enquiry/show_all/${endurl}`)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        this.setState({ enquiries: data, loading: false });\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n  render() {\r\n    return (\r\n      <div style={{ paddingTop: '5%' }}>\r\n        <EnquiryTable\r\n          loading={this.state.loading}\r\n          enquiries={this.state.enquiries}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nimport { Form, Button, Progress, Carousel, Spin } from 'antd';\r\n\r\nimport axios from 'axios';\r\n\r\nimport { baseurl, endurl, fileurl } from '../../baseurl';\r\n\r\nexport default class AdsUploader extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      downloading: false,\r\n      uploading: false,\r\n      ads_array: [],\r\n      upper_adds_array: [],\r\n      lower_adds_array: [],\r\n      image: null,\r\n      fileprogress: 0,\r\n      category: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadImageArray();\r\n  }\r\n\r\n  uploadImage = category => {\r\n    if (this.state.image === null) {\r\n      alert('Please Choose Image ');\r\n    } else {\r\n      this.setState({ uploading: true, fileprogress: 0 });\r\n      let formData = new FormData();\r\n      formData.append(\r\n        'SendData',\r\n        JSON.stringify({ ...this.state, category: category })\r\n      );\r\n      formData.append('image', this.state.image);\r\n      axios\r\n        .request({\r\n          method: 'post',\r\n          url: baseurl + `ads/upload_ad_image/${endurl}`,\r\n          data: formData,\r\n          onUploadProgress: p => {\r\n            this.setState({\r\n              fileprogress: p.loaded / p.total\r\n            });\r\n          }\r\n        })\r\n        .then(data => {\r\n          alert('Image Uploaded ... ');\r\n          this.setState({\r\n            uploading: false,\r\n            fileprogress: 0\r\n          });\r\n          this.loadImageArray();\r\n        })\r\n        .catch(err => {\r\n          alert('Technical error');\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  handleFile = e => {\r\n    let class_ref = this;\r\n    e.persist();\r\n\r\n    let img = new Image();\r\n    img.onload = function() {\r\n      if (this.width === 384 && this.height === 272) {\r\n        class_ref.setState({ image: e.target.files[0] });\r\n      } else {\r\n        alert('Image Must Have Dimensions Of 384 * 272 ');\r\n      }\r\n    };\r\n\r\n    var reader = new FileReader();\r\n    reader.onloadend = function(ended) {\r\n      img.src = ended.target.result;\r\n    };\r\n    reader.readAsDataURL(e.target.files[0]);\r\n  };\r\n\r\n  deleteImage = () => {};\r\n\r\n  loadImageArray = async () => {\r\n    this.setState({ downloading: true });\r\n    fetch(`${baseurl}ads/load_all_ads/${endurl}`)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        let upper_adds_array = data.filter(item => {\r\n          return item.category === 'upper';\r\n        });\r\n\r\n        let lower_adds_array = data.filter(item => {\r\n          return item.category === 'lower';\r\n        });\r\n\r\n        this.setState({\r\n          ads_array: data,\r\n          upper_adds_array: upper_adds_array,\r\n          lower_adds_array: lower_adds_array,\r\n          downloading: false\r\n        });\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ paddingTop: '5%' }}>\r\n        {this.state.downloading ? (\r\n          <div style={{ padding: '20%', paddingLeft: '50%' }}>\r\n            <Spin size='large' />\r\n          </div>\r\n        ) : (\r\n          <div\r\n            style={{\r\n              paddingTop: '5%',\r\n              paddingLeft: '25%'\r\n            }}\r\n          >\r\n            <Carousel autoplay autoplaySpeed={2000} effect='fade'>\r\n              {this.state.upper_adds_array.map((item, index) => {\r\n                return (\r\n                  <div key={index}>\r\n                    <img\r\n                      width='70%'\r\n                      height='300'\r\n                      alt={'Failed To Load'}\r\n                      src={`${baseurl}${fileurl}/ads/${item.image_url}`}\r\n                    />\r\n                  </div>\r\n                );\r\n              })}\r\n            </Carousel>\r\n          </div>\r\n        )}\r\n        <div\r\n          style={{\r\n            paddingLeft: '25%'\r\n          }}\r\n        >\r\n          <Form>\r\n            <Form.Item>\r\n              Attach Pdf File ( &nbsp;Required &nbsp;) &nbsp; :\r\n              &nbsp;&nbsp;&nbsp;\r\n              <Button type='primary'>\r\n                <label for='upload-photo' style={{ paddingTop: '5%' }}>\r\n                  Browse File\r\n                </label>\r\n                <input\r\n                  type='file'\r\n                  id='upload-photo'\r\n                  onChange={e => this.handleFile(e)}\r\n                  style={{\r\n                    opacity: 0,\r\n                    position: 'absolute',\r\n                    zIndex: -1\r\n                  }}\r\n                />\r\n              </Button>\r\n            </Form.Item>\r\n            <Progress percent={this.state.fileprogress * 100} status='active' />\r\n            <Form.Item>\r\n              <Button\r\n                type='primary'\r\n                loading={this.state.uploading}\r\n                onClick={() => this.uploadImage('upper')}\r\n              >\r\n                Upload\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n        {this.state.downloading ? (\r\n          <div style={{ padding: '20%', paddingLeft: '50%' }}>\r\n            <Spin size='large' />\r\n          </div>\r\n        ) : (\r\n          <div\r\n            style={{\r\n              paddingLeft: '25%'\r\n            }}\r\n          >\r\n            <Carousel autoplay autoplaySpeed={2000} effect='fade'>\r\n              {this.state.lower_adds_array.map((item, index) => {\r\n                return (\r\n                  <div key={index}>\r\n                    <img\r\n                      width='70%'\r\n                      height='300'\r\n                      alt={'Failed To Load'}\r\n                      src={`${baseurl}${fileurl}/ads/${item.image_url}`}\r\n                    />\r\n                  </div>\r\n                );\r\n              })}\r\n            </Carousel>\r\n          </div>\r\n        )}\r\n        <div\r\n          style={{\r\n            paddingLeft: '25%'\r\n          }}\r\n        >\r\n          <Form>\r\n            <Form.Item>\r\n              Attach Pdf File ( &nbsp;Required &nbsp;) &nbsp; :\r\n              &nbsp;&nbsp;&nbsp;\r\n              <Button type='primary'>\r\n                <label for='upload-photo' style={{ paddingTop: '5%' }}>\r\n                  Browse File\r\n                </label>\r\n                <input\r\n                  type='file'\r\n                  id='upload-photo'\r\n                  onChange={e => this.handleFile(e)}\r\n                  style={{\r\n                    opacity: 0,\r\n                    position: 'absolute',\r\n                    zIndex: -1\r\n                  }}\r\n                />\r\n              </Button>\r\n            </Form.Item>\r\n            <Progress percent={this.state.fileprogress * 100} status='active' />\r\n            <Form.Item>\r\n              <Button\r\n                type='primary'\r\n                loading={this.state.uploading}\r\n                onClick={() => this.uploadImage('lower')}\r\n              >\r\n                Upload\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n        <br />\r\n        <br />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport WorkSheets from '../WorkSheets/index';\r\nimport PdfManaging from '../PdfManaging/index';\r\nimport UpdateAuthorize from '../UpdateAuthorize';\r\nimport Test from '../Test/index';\r\nimport ManageStudents from '../ManageStudents/index';\r\n\r\nimport {\r\n  Redirect,\r\n  Link,\r\n  Route,\r\n  Switch,\r\n  HashRouter as Router\r\n} from 'react-router-dom';\r\n\r\nimport { Layout, Menu, Icon } from 'antd';\r\nimport './index.css';\r\nimport Enquiry from '../Enquiry';\r\nimport AdsUploader from './AdsUploader';\r\nimport { Button } from 'antd/lib/radio';\r\n\r\nconst { Header } = Layout;\r\n\r\nexport default class DashBoard extends React.Component {\r\n  componentWillMount() {\r\n    if (this.props.match.url === '/') {\r\n      this.props.history.push('/dashboard');\r\n    }\r\n  }\r\n  render() {\r\n    if (localStorage.getItem('authenticated') === 'true') {\r\n      let match = this.props.match;\r\n      return (\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n          <Layout>\r\n            <Header\r\n              className='header'\r\n              style={{\r\n                position: 'fixed',\r\n                width: '100%',\r\n                left: 0,\r\n                top: 0,\r\n                right: 0,\r\n                zIndex: 1000\r\n              }}\r\n            >\r\n              <div className='logo' />\r\n              <Menu\r\n                theme='dark'\r\n                mode='horizontal'\r\n                style={{ lineHeight: '64px', paddingLeft: '0%' }}\r\n              >\r\n                <Menu.Item key='1' active>\r\n                  <Link to={`${match.url}`}>\r\n                    <Icon type='sync' />\r\n                    DashBoard\r\n                  </Link>\r\n                </Menu.Item>\r\n                <Menu.Item key='2'>\r\n                  <Link to={`${match.url}/worksheets`}>\r\n                    <Icon type='file-sync' />\r\n                    Manage Worksheets\r\n                  </Link>\r\n                </Menu.Item>\r\n                <Menu.Item key='3'>\r\n                  <Link to={`${match.url}/tests`}>\r\n                    <Icon type='reconciliation' />\r\n                    Manage Tests\r\n                  </Link>\r\n                </Menu.Item>\r\n                <Menu.Item key='4'>\r\n                  <Link to={`${match.url}/updates`}>\r\n                    <Icon type='sync' />\r\n                    Manage Updates\r\n                  </Link>\r\n                </Menu.Item>\r\n                <Menu.Item key='5'>\r\n                  <Link to={`${match.url}/pdfs`}>\r\n                    <Icon type='sync' />\r\n                    Manage Pdf Files\r\n                  </Link>\r\n                </Menu.Item>\r\n                <Menu.Item key='6'>\r\n                  <Link to={`${match.url}/students`}>\r\n                    <Icon type='sync' />\r\n                    Manage Students\r\n                  </Link>\r\n                </Menu.Item>\r\n                <Menu.Item key='7'>\r\n                  <Link to={`${match.url}/enquiry`}>\r\n                    <Icon type='sync' />\r\n                    Enquiries\r\n                  </Link>\r\n                </Menu.Item>\r\n                <Menu.Item key='8'>\r\n                  <Button\r\n                    onClick={() => {\r\n                      localStorage.removeItem('authenticated');\r\n                      localStorage.removeItem('admin');\r\n                      this.props.history.push('/login');\r\n                    }}\r\n                  >\r\n                    <Icon type='sync' />\r\n                    Logout\r\n                  </Button>\r\n                </Menu.Item>\r\n              </Menu>\r\n            </Header>\r\n            <Switch>\r\n              <Route exact path={`${match.url}/`}>\r\n                <AdsUploader />\r\n              </Route>\r\n              <Route\r\n                path={`${match.url}/worksheets`}\r\n                render={props => <WorkSheets {...props} />}\r\n              />\r\n              <Route\r\n                path={`${match.url}/tests`}\r\n                render={props => <Test {...props} />}\r\n              />\r\n              <Route\r\n                path={`${match.url}/updates`}\r\n                render={props => <UpdateAuthorize {...props} />}\r\n              />\r\n              <Route\r\n                path={`${match.url}/pdfs`}\r\n                render={props => <PdfManaging {...props} />}\r\n              />\r\n              <Route\r\n                path={`${match.url}/students`}\r\n                render={props => <ManageStudents {...props} />}\r\n              />\r\n              <Route\r\n                path={`${match.url}/enquiry`}\r\n                render={props => <Enquiry {...props} />}\r\n              />\r\n            </Switch>\r\n          </Layout>\r\n        </Router>\r\n      );\r\n    } else {\r\n      return <Redirect to={{ pathname: '/login' }} />;\r\n    }\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Form, Icon, Input, Button, Spin } from 'antd';\r\nimport { baseurl, endurl } from '../baseurl';\r\nimport Alert from '../components/Alert.js';\r\n\r\nclass NormalLoginForm extends React.Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n    logging_in: false,\r\n    open_modal: false,\r\n    modal_message: '',\r\n    modal_title: '',\r\n    loading: false\r\n  };\r\n\r\n  makeShowModalFalse = () => {\r\n    this.setState({ open_modal: false });\r\n  };\r\n\r\n  handleForgetPassword = e => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      open_modal: true,\r\n      modal_message: 'Sending Link to Email shshagrawal05@gmail.com ',\r\n      loading: true\r\n    });\r\n\r\n    fetch(`${baseurl}admin/forget_password/${endurl}`)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        this.setState({\r\n          open_modal: true,\r\n          modal_message: 'Link Sent to Email shshagrawal05@gmail.com ',\r\n          loading: false\r\n        });\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  handleLogin = () => {\r\n    if (this.state.email === '' || this.state.password === '') {\r\n      this.setState({\r\n        open_modal: true,\r\n        title: 'Unfilled Credientials',\r\n        modal_message: 'Please Fill Both Fields'\r\n      });\r\n    } else {\r\n      this.setState({\r\n        open_modal: true,\r\n        modal_message: 'Verifying ....\\nPlease wait ....',\r\n        loading: true\r\n      });\r\n      fetch(baseurl + `admin/check_login/` + endurl, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(this.state)\r\n      })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          if (data.code === 'login_success') {\r\n            localStorage.setItem('authenticated', 'true');\r\n            localStorage.setItem('admin', data);\r\n            this.setState({ open_modal: false, loading: false });\r\n            this.props.history.push('/dashboard');\r\n          } else {\r\n            this.setState({\r\n              open_modal: true,\r\n              title: 'Invalid Credientials',\r\n              modal_message: 'Wrong Email/Password',\r\n              loading: false\r\n            });\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <body\r\n        style={{\r\n          backgroundImage:\r\n            'url(' +\r\n            'https://www.drumangle.com/sandbox/wp/21813/wp-content/uploads/2014/01/Login-Screen-Background-Wood-4.jpg' +\r\n            ')'\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            paddingTop: '15%',\r\n            paddingLeft: '30%',\r\n            paddingRight: '30%',\r\n            paddingBottom: '20%'\r\n          }}\r\n        >\r\n          <h1 style={{ color: 'white' }}>\r\n            <center>ADMIN LOGIN</center>\r\n          </h1>\r\n          <Form className='login-form'>\r\n            <Form.Item>\r\n              {getFieldDecorator('username', {\r\n                rules: [\r\n                  { required: true, message: 'Please input your username!' }\r\n                ]\r\n              })(\r\n                <Input\r\n                  prefix={\r\n                    <Icon type='user' style={{ color: 'rgba(0,0,0,.25)' }} />\r\n                  }\r\n                  placeholder='Email'\r\n                  onChange={e => {\r\n                    this.setState({ email: e.target.value });\r\n                  }}\r\n                />\r\n              )}\r\n            </Form.Item>\r\n            <Form.Item>\r\n              {getFieldDecorator('password', {\r\n                rules: [\r\n                  { required: true, message: 'Please input your Password!' }\r\n                ]\r\n              })(\r\n                <Input\r\n                  prefix={\r\n                    <Icon type='lock' style={{ color: 'rgba(0,0,0,.25)' }} />\r\n                  }\r\n                  type='password'\r\n                  placeholder='Password'\r\n                  onChange={e => {\r\n                    this.setState({ password: e.target.value });\r\n                  }}\r\n                />\r\n              )}\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button\r\n                type='default'\r\n                htmlType='submit'\r\n                className='login-form-button'\r\n                style={{ width: '100%' }}\r\n                onClick={this.handleLogin}\r\n              >\r\n                Log in\r\n              </Button>\r\n            </Form.Item>\r\n\r\n            <a\r\n              style={{ color: 'white', fontSize: 18 }}\r\n              href='/#'\r\n              onClick={e => {\r\n                this.handleForgetPassword(e);\r\n              }}\r\n            >\r\n              Forgot Password ?\r\n            </a>\r\n          </Form>\r\n          {this.state.open_modal ? (\r\n            <Alert\r\n              makeShowModalFalse={this.makeShowModalFalse}\r\n              title={this.state.modal_title}\r\n              message={this.state.modal_message}\r\n            >\r\n              {this.state.loading === true ? <Spin /> : <></>}\r\n            </Alert>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n      </body>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create({ name: 'normal_login' })(NormalLoginForm);\r\n","import React from 'react';\r\nimport DashBoard from './DashBoard/index';\r\nimport Login from './Login';\r\nimport { Switch, Route, HashRouter as Router } from 'react-router-dom';\r\n\r\nexport default class Main extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  componentDidMount() {}\r\n  render() {\r\n    return (\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <Switch>\r\n          <Route exact path='/' render={props => <DashBoard {...props} />} />\r\n          <Route exact path='/login' render={props => <Login {...props} />} />\r\n          <Route path='/dashboard' render={props => <DashBoard {...props} />} />\r\n        </Switch>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Main from './components/Main.js';\r\nimport './App.css';\r\n//import Login from './components/Login.js';\r\n\r\nexport default class App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  componentDidMount() {}\r\n  render() {\r\n    return (\r\n      <Main />\r\n      // <Login />\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { HashRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <HashRouter basename={process.env.PUBLIC_URL}>\r\n    <App />\r\n  </HashRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}